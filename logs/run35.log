nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=35, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_12-53-42 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:54<2:14:32, 54.18s/it]  1% 2/150 [01:47<2:12:41, 53.79s/it]  2% 3/150 [02:41<2:11:37, 53.72s/it]  3% 4/150 [03:34<2:10:36, 53.68s/it]  3% 5/150 [04:28<2:09:41, 53.67s/it]  4% 6/150 [05:22<2:08:48, 53.67s/it]  5% 7/150 [06:15<2:07:53, 53.66s/it]  5% 8/150 [07:09<2:07:00, 53.66s/it]  6% 9/150 [08:03<2:06:07, 53.67s/it]  7% 10/150 [08:56<2:05:14, 53.67s/it]  7% 11/150 [09:50<2:04:18, 53.66s/it]  8% 12/150 [10:44<2:03:28, 53.68s/it]  9% 13/150 [11:38<2:02:35, 53.69s/it]  9% 14/150 [12:31<2:01:40, 53.68s/it] 10% 15/150 [13:25<2:00:48, 53.69s/it] 11% 16/150 [14:19<1:59:53, 53.68s/it] 11% 17/150 [15:12<1:59:01, 53.70s/it] 12% 18/150 [16:06<1:58:09, 53.71s/it] 13% 19/150 [17:00<1:57:14, 53.70s/it] 13% 20/150 [17:53<1:56:18, 53.68s/it] 14% 21/150 [18:47<1:55:27, 53.70s/it] 15% 22/150 [19:41<1:54:35, 53.71s/it] 15% 23/150 [20:34<1:53:39, 53.70s/it] 16% 24/150 [21:28<1:52:47, 53.71s/it] 17% 25/150 [22:22<1:51:53, 53.71s/it] 17% 26/150 [23:16<1:51:00, 53.72s/it] 18% 27/150 [24:09<1:50:06, 53.71s/it] 19% 28/150 [25:03<1:49:11, 53.70s/it] 19% 29/150 [25:57<1:48:19, 53.71s/it] 20% 30/150 [26:50<1:47:24, 53.70s/it] 21% 31/150 [27:44<1:46:30, 53.70s/it] 21% 32/150 [28:38<1:45:38, 53.71s/it] 22% 33/150 [29:32<1:44:45, 53.72s/it] 23% 34/150 [30:25<1:43:51, 53.72s/it] 23% 35/150 [31:19<1:42:57, 53.71s/it] 24% 36/150 [32:13<1:42:03, 53.71s/it] 25% 37/150 [33:06<1:41:10, 53.72s/it] 25% 38/150 [34:00<1:40:16, 53.72s/it] 26% 39/150 [34:54<1:39:23, 53.73s/it] 27% 40/150 [35:48<1:38:28, 53.72s/it] 27% 41/150 [36:41<1:37:34, 53.71s/it] 28% 42/150 [37:35<1:36:39, 53.70s/it] 29% 43/150 [38:29<1:35:46, 53.70s/it] 29% 44/150 [39:22<1:34:52, 53.70s/it] 30% 45/150 [40:16<1:33:58, 53.70s/it] 31% 46/150 [41:10<1:33:05, 53.71s/it] 31% 47/150 [42:04<1:32:11, 53.70s/it] 32% 48/150 [42:57<1:31:17, 53.70s/it] 33% 49/150 [43:51<1:30:24, 53.71s/it] 33% 50/150 [44:45<1:29:30, 53.70s/it] 34% 51/150 [45:38<1:28:36, 53.70s/it] 35% 52/150 [46:32<1:27:43, 53.71s/it] 35% 53/150 [47:26<1:26:49, 53.70s/it] 36% 54/150 [48:19<1:25:55, 53.70s/it] 37% 55/150 [49:13<1:25:01, 53.70s/it] 37% 56/150 [50:07<1:24:08, 53.71s/it] 38% 57/150 [51:01<1:23:14, 53.70s/it] 39% 58/150 [51:54<1:22:20, 53.70s/it] 39% 59/150 [52:48<1:21:27, 53.71s/it] 40% 60/150 [53:42<1:20:34, 53.71s/it] 41% 61/150 [54:35<1:19:41, 53.73s/it] 41% 62/150 [55:29<1:18:46, 53.71s/it] 42% 63/150 [56:23<1:17:52, 53.70s/it] 43% 64/150 [57:17<1:16:58, 53.70s/it] 43% 65/150 [58:10<1:16:04, 53.70s/it] 44% 66/150 [59:04<1:15:12, 53.72s/it] 45% 67/150 [59:58<1:14:18, 53.72s/it] 45% 68/150 [1:00:51<1:13:24, 53.71s/it] 46% 69/150 [1:01:45<1:12:30, 53.72s/it] 47% 70/150 [1:02:39<1:11:37, 53.72s/it] 47% 71/150 [1:03:33<1:10:45, 53.74s/it] 48% 72/150 [1:04:26<1:09:50, 53.73s/it] 49% 73/150 [1:05:20<1:08:56, 53.72s/it] 49% 74/150 [1:06:14<1:08:03, 53.73s/it] 50% 75/150 [1:07:08<1:07:10, 53.74s/it] 51% 76/150 [1:08:01<1:06:16, 53.74s/it] 51% 77/150 [1:08:55<1:05:23, 53.75s/it] 52% 78/150 [1:09:49<1:04:29, 53.75s/it] 53% 79/150 [1:10:43<1:03:36, 53.75s/it] 53% 80/150 [1:11:36<1:02:41, 53.73s/it] 54% 81/150 [1:12:30<1:01:48, 53.74s/it] 55% 82/150 [1:13:24<1:00:54, 53.74s/it] 55% 83/150 [1:14:18<1:00:00, 53.74s/it] 56% 84/150 [1:15:11<59:07, 53.75s/it]   57% 85/150 [1:16:05<58:12, 53.73s/it] 57% 86/150 [1:16:59<57:19, 53.74s/it] 58% 87/150 [1:17:53<56:25, 53.74s/it] 59% 88/150 [1:18:46<55:31, 53.74s/it] 59% 89/150 [1:19:40<54:38, 53.75s/it] 60% 90/150 [1:20:34<53:45, 53.75s/it] 61% 91/150 [1:21:28<52:51, 53.76s/it] 61% 92/150 [1:22:21<51:58, 53.77s/it] 62% 93/150 [1:23:15<51:04, 53.76s/it] 63% 94/150 [1:24:09<50:09, 53.75s/it] 63% 95/150 [1:25:03<49:16, 53.75s/it] 64% 96/150 [1:25:56<48:21, 53.74s/it] 65% 97/150 [1:26:50<47:28, 53.75s/it] 65% 98/150 [1:27:44<46:34, 53.75s/it] 66% 99/150 [1:28:38<45:41, 53.75s/it] 67% 100/150 [1:29:31<44:48, 53.76s/it] 67% 101/150 [1:30:25<43:54, 53.76s/it] 68% 102/150 [1:31:19<43:00, 53.77s/it] 69% 103/150 [1:32:13<42:06, 53.76s/it] 69% 104/150 [1:33:06<41:13, 53.76s/it] 70% 105/150 [1:34:00<40:19, 53.76s/it] 71% 106/150 [1:34:54<39:25, 53.76s/it] 71% 107/150 [1:35:48<38:31, 53.76s/it] 72% 108/150 [1:36:41<37:36, 53.74s/it] 73% 109/150 [1:37:35<36:43, 53.75s/it] 73% 110/150 [1:38:29<35:50, 53.75s/it] 74% 111/150 [1:39:23<34:55, 53.74s/it] 75% 112/150 [1:40:16<34:02, 53.75s/it] 75% 113/150 [1:41:10<33:08, 53.75s/it] 76% 114/150 [1:42:04<32:14, 53.74s/it] 77% 115/150 [1:42:58<31:21, 53.75s/it] 77% 116/150 [1:43:51<30:27, 53.76s/it] 78% 117/150 [1:44:45<29:34, 53.76s/it] 79% 118/150 [1:45:39<28:40, 53.76s/it] 79% 119/150 [1:46:33<27:46, 53.76s/it] 80% 120/150 [1:47:26<26:52, 53.77s/it] 81% 121/150 [1:48:20<25:59, 53.77s/it] 81% 122/150 [1:49:14<25:05, 53.76s/it] 82% 123/150 [1:50:08<24:11, 53.76s/it] 83% 124/150 [1:51:01<23:17, 53.75s/it] 83% 125/150 [1:51:55<22:23, 53.75s/it] 84% 126/150 [1:52:49<21:29, 53.74s/it] 85% 127/150 [1:53:43<20:36, 53.75s/it] 85% 128/150 [1:54:36<19:42, 53.74s/it] 86% 129/150 [1:55:30<18:48, 53.75s/it] 87% 130/150 [1:56:24<17:54, 53.74s/it] 87% 131/150 [1:57:18<17:01, 53.74s/it] 88% 132/150 [1:58:11<16:07, 53.75s/it] 89% 133/150 [1:59:05<15:13, 53.74s/it] 89% 134/150 [1:59:59<14:20, 53.75s/it] 90% 135/150 [2:00:53<13:26, 53.74s/it] 91% 136/150 [2:01:46<12:32, 53.74s/it] 91% 137/150 [2:02:40<11:38, 53.74s/it] 92% 138/150 [2:03:34<10:44, 53.74s/it] 93% 139/150 [2:04:28<09:51, 53.75s/it] 93% 140/150 [2:05:21<08:57, 53.75s/it] 94% 141/150 [2:06:15<08:03, 53.75s/it] 95% 142/150 [2:07:09<07:09, 53.75s/it] 95% 143/150 [2:08:03<06:16, 53.75s/it] 96% 144/150 [2:08:56<05:22, 53.74s/it] 97% 145/150 [2:09:50<04:28, 53.73s/it] 97% 146/150 [2:10:44<03:34, 53.74s/it] 98% 147/150 [2:11:38<02:41, 53.74s/it] 99% 148/150 [2:12:31<01:47, 53.74s/it] 99% 149/150 [2:13:25<00:53, 53.75s/it]100% 150/150 [2:14:19<00:00, 53.76s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x68f4d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x60e38c0] Warning: data is not aligned! This can lead to a speed loss
120.27329881656804 (1014, 1352, 3)
120.32656419593151 (1014, 1352, 3)
120.35712743484706 (1014, 1352, 3)
120.38279763780447 (1014, 1352, 3)
120.38246307124322 (1014, 1352, 3)
120.39782128115651 (1014, 1352, 3)
120.41988225007684 (1014, 1352, 3)
120.42598808981946 (1014, 1352, 3)
120.43775773296142 (1014, 1352, 3)
120.43862940528848 (1014, 1352, 3)
120.4540041490144 (1014, 1352, 3)
120.44772591996079 (1014, 1352, 3)
120.46380335072301 (1014, 1352, 3)
120.46480753669533 (1014, 1352, 3)
120.48265627370657 (1014, 1352, 3)
120.4830209901614 (1014, 1352, 3)
120.4945812860583 (1014, 1352, 3)
120.4980553318628 (1014, 1352, 3)
120.50001847896705 (1014, 1352, 3)
120.49726754432034 (1014, 1352, 3)
120.4894562904349 (1014, 1352, 3)
120.49668667257994 (1014, 1352, 3)
120.49304510035051 (1014, 1352, 3)
120.5011605277593 (1014, 1352, 3)
120.49268840765768 (1014, 1352, 3)
120.50111287147587 (1014, 1352, 3)
120.49700883878171 (1014, 1352, 3)
120.5092180868239 (1014, 1352, 3)
120.51884489922155 (1014, 1352, 3)
120.53012582231403 (1014, 1352, 3)
120.53000765418267 (1014, 1352, 3)
120.52144775898759 (1014, 1352, 3)
120.52517467486744 (1014, 1352, 3)
120.51809212445876 (1014, 1352, 3)
120.52652534147185 (1014, 1352, 3)
120.52210011515314 (1014, 1352, 3)
120.53255167302733 (1014, 1352, 3)
120.51928012752433 (1014, 1352, 3)
120.52023908865625 (1014, 1352, 3)
120.51711298234967 (1014, 1352, 3)
120.5224589961447 (1014, 1352, 3)
120.52119561834515 (1014, 1352, 3)
120.51802209889944 (1014, 1352, 3)
120.52446517979062 (1014, 1352, 3)
120.51988750199378 (1014, 1352, 3)
120.52712542161223 (1014, 1352, 3)
120.51808701842839 (1014, 1352, 3)
120.52167412633389 (1014, 1352, 3)
120.50408506743851 (1014, 1352, 3)
120.50685253589782 (1014, 1352, 3)
120.50309206610413 (1014, 1352, 3)
120.51421032565776 (1014, 1352, 3)
120.51208378558174 (1014, 1352, 3)
120.51091936751358 (1014, 1352, 3)
120.50864864286575 (1014, 1352, 3)
120.50333302210862 (1014, 1352, 3)
120.51050383389938 (1014, 1352, 3)
120.50909286750775 (1014, 1352, 3)
120.5209354539407 (1014, 1352, 3)
120.5101364428572 (1014, 1352, 3)
120.51436107512575 (1014, 1352, 3)
120.50475857715844 (1014, 1352, 3)
120.51108738022711 (1014, 1352, 3)
120.5079885060825 (1014, 1352, 3)
120.51122110959389 (1014, 1352, 3)
120.51108348991826 (1014, 1352, 3)
120.50876705414143 (1014, 1352, 3)
120.51262745624375 (1014, 1352, 3)
120.50628917054725 (1014, 1352, 3)
120.51447948640143 (1014, 1352, 3)
120.50451567599951 (1014, 1352, 3)
120.51296858770118 (1014, 1352, 3)
120.50684013553835 (1014, 1352, 3)
120.51853634910076 (1014, 1352, 3)
120.5177181685204 (1014, 1352, 3)
120.52386315449584 (1014, 1352, 3)
120.52082676843715 (1014, 1352, 3)
120.51769312465717 (1014, 1352, 3)
120.52049682161767 (1014, 1352, 3)
120.5180872615727 (1014, 1352, 3)
120.52993860120056 (1014, 1352, 3)
120.5255556819906 (1014, 1352, 3)
120.53443312364568 (1014, 1352, 3)
120.52257546226595 (1014, 1352, 3)
120.53015840365066 (1014, 1352, 3)
120.52627441655093 (1014, 1352, 3)
120.53455955868337 (1014, 1352, 3)
120.53562550330871 (1014, 1352, 3)
120.53865240673957 (1014, 1352, 3)
120.54044486654296 (1014, 1352, 3)
120.53523720185646 (1014, 1352, 3)
120.5408856871647 (1014, 1352, 3)
120.53432905788391 (1014, 1352, 3)
120.54221763165778 (1014, 1352, 3)
120.5377649300328 (1014, 1352, 3)
120.54899600854311 (1014, 1352, 3)
120.54691177557586 (1014, 1352, 3)
120.55306745990065 (1014, 1352, 3)
120.55118138954052 (1014, 1352, 3)
120.55299354403246 (1014, 1352, 3)
120.55906291212959 (1014, 1352, 3)
120.56347087520278 (1014, 1352, 3)
120.57897059510054 (1014, 1352, 3)
120.58075794887355 (1014, 1352, 3)
120.59091068239907 (1014, 1352, 3)
120.5819812078631 (1014, 1352, 3)
120.58353319795059 (1014, 1352, 3)
120.57649830382535 (1014, 1352, 3)
120.58212101583744 (1014, 1352, 3)
120.5856590085937 (1014, 1352, 3)
120.58799100560593 (1014, 1352, 3)
120.59325118946194 (1014, 1352, 3)
120.59047156378745 (1014, 1352, 3)
120.59479807351906 (1014, 1352, 3)
120.58627586569098 (1014, 1352, 3)
120.59617645857405 (1014, 1352, 3)
120.59389041583512 (1014, 1352, 3)
120.60339030690646 (1014, 1352, 3)
120.59478761831402 (1014, 1352, 3)
120.5963092153636 (1014, 1352, 3)
120.5905284595544 (1014, 1352, 3)
120.58415370221242 (1014, 1352, 3)
120.58322683612852 (1014, 1352, 3)
120.58220514376636 (1014, 1352, 3)
120.59156911717221 (1014, 1352, 3)
120.5860740559193 (1014, 1352, 3)
120.59641984602158 (1014, 1352, 3)
120.59237197966146 (1014, 1352, 3)
120.59942705476388 (1014, 1352, 3)
120.59416930235092 (1014, 1352, 3)
120.60044728826021 (1014, 1352, 3)
120.60213981575497 (1014, 1352, 3)
120.60763025726612 (1014, 1352, 3)
120.61013683188808 (1014, 1352, 3)
120.60471787480208 (1014, 1352, 3)
120.60382042917887 (1014, 1352, 3)
120.59369444152671 (1014, 1352, 3)
120.60230150671661 (1014, 1352, 3)
120.5960526981237 (1014, 1352, 3)
120.60900839917682 (1014, 1352, 3)
120.60180379032792 (1014, 1352, 3)
120.60676004380488 (1014, 1352, 3)
120.59348582371454 (1014, 1352, 3)
120.5900236919809 (1014, 1352, 3)
120.58806540776273 (1014, 1352, 3)
120.58573875992515 (1014, 1352, 3)
120.59293072527028 (1014, 1352, 3)
120.58639452011096 (1014, 1352, 3)
120.59669143820828 (1014, 1352, 3)
120.58095562519209 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:14:22<00:00, 53.75s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
