nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=25, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_05-47-34 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:07, 53.20s/it]  1% 2/150 [01:45<2:10:29, 52.90s/it]  2% 3/150 [02:38<2:09:27, 52.84s/it]  3% 4/150 [03:31<2:08:30, 52.81s/it]  3% 5/150 [04:24<2:07:36, 52.80s/it]  4% 6/150 [05:17<2:06:43, 52.80s/it]  5% 7/150 [06:09<2:05:50, 52.80s/it]  5% 8/150 [07:02<2:04:59, 52.81s/it]  6% 9/150 [07:55<2:04:07, 52.82s/it]  7% 10/150 [08:48<2:03:14, 52.82s/it]  7% 11/150 [09:41<2:02:21, 52.82s/it]  8% 12/150 [10:33<2:01:29, 52.83s/it]  9% 13/150 [11:26<2:00:38, 52.83s/it]  9% 14/150 [12:19<1:59:45, 52.84s/it] 10% 15/150 [13:12<1:58:52, 52.84s/it] 11% 16/150 [14:05<1:58:00, 52.84s/it] 11% 17/150 [14:58<1:57:08, 52.84s/it] 12% 18/150 [15:51<1:56:14, 52.84s/it] 13% 19/150 [16:43<1:55:22, 52.84s/it] 13% 20/150 [17:36<1:54:29, 52.84s/it] 14% 21/150 [18:29<1:53:36, 52.84s/it] 15% 22/150 [19:22<1:52:44, 52.85s/it] 15% 23/150 [20:15<1:51:51, 52.85s/it] 16% 24/150 [21:08<1:50:59, 52.85s/it] 17% 25/150 [22:00<1:50:06, 52.85s/it] 17% 26/150 [22:53<1:49:13, 52.85s/it] 18% 27/150 [23:46<1:48:20, 52.85s/it] 19% 28/150 [24:39<1:47:27, 52.85s/it] 19% 29/150 [25:32<1:46:34, 52.85s/it] 20% 30/150 [26:25<1:45:41, 52.84s/it] 21% 31/150 [27:18<1:44:48, 52.85s/it] 21% 32/150 [28:10<1:43:55, 52.85s/it] 22% 33/150 [29:03<1:43:02, 52.84s/it] 23% 34/150 [29:56<1:42:10, 52.85s/it] 23% 35/150 [30:49<1:41:17, 52.85s/it] 24% 36/150 [31:42<1:40:24, 52.85s/it] 25% 37/150 [32:35<1:39:32, 52.85s/it] 25% 38/150 [33:28<1:38:40, 52.86s/it] 26% 39/150 [34:20<1:37:48, 52.87s/it] 27% 40/150 [35:13<1:36:55, 52.87s/it] 27% 41/150 [36:06<1:36:01, 52.86s/it] 28% 42/150 [36:59<1:35:09, 52.86s/it] 29% 43/150 [37:52<1:34:15, 52.86s/it] 29% 44/150 [38:45<1:33:22, 52.86s/it] 30% 45/150 [39:38<1:32:30, 52.86s/it] 31% 46/150 [40:30<1:31:37, 52.86s/it] 31% 47/150 [41:23<1:30:44, 52.86s/it] 32% 48/150 [42:16<1:29:52, 52.86s/it] 33% 49/150 [43:09<1:28:59, 52.87s/it] 33% 50/150 [44:02<1:28:06, 52.86s/it] 34% 51/150 [44:55<1:27:14, 52.87s/it] 35% 52/150 [45:48<1:26:21, 52.87s/it] 35% 53/150 [46:40<1:25:27, 52.86s/it] 36% 54/150 [47:33<1:24:34, 52.86s/it] 37% 55/150 [48:26<1:23:42, 52.87s/it] 37% 56/150 [49:19<1:22:49, 52.87s/it] 38% 57/150 [50:12<1:21:56, 52.87s/it] 39% 58/150 [51:05<1:21:03, 52.87s/it] 39% 59/150 [51:58<1:20:11, 52.87s/it] 40% 60/150 [52:51<1:19:17, 52.87s/it] 41% 61/150 [53:43<1:18:25, 52.87s/it] 41% 62/150 [54:36<1:17:32, 52.86s/it] 42% 63/150 [55:29<1:16:39, 52.87s/it] 43% 64/150 [56:22<1:15:46, 52.87s/it] 43% 65/150 [57:15<1:14:54, 52.88s/it] 44% 66/150 [58:08<1:14:01, 52.87s/it] 45% 67/150 [59:01<1:13:08, 52.87s/it] 45% 68/150 [59:54<1:12:16, 52.88s/it] 46% 69/150 [1:00:46<1:11:23, 52.88s/it] 47% 70/150 [1:01:39<1:10:30, 52.88s/it] 47% 71/150 [1:02:32<1:09:37, 52.88s/it] 48% 72/150 [1:03:25<1:08:44, 52.88s/it] 49% 73/150 [1:04:18<1:07:51, 52.88s/it] 49% 74/150 [1:05:11<1:06:58, 52.88s/it] 50% 75/150 [1:06:04<1:06:05, 52.87s/it] 51% 76/150 [1:06:57<1:05:12, 52.87s/it] 51% 77/150 [1:07:49<1:04:19, 52.87s/it] 52% 78/150 [1:08:42<1:03:27, 52.88s/it] 53% 79/150 [1:09:35<1:02:33, 52.86s/it] 53% 80/150 [1:10:28<1:01:40, 52.87s/it] 54% 81/150 [1:11:21<1:00:47, 52.86s/it] 55% 82/150 [1:12:14<59:55, 52.87s/it]   55% 83/150 [1:13:07<59:02, 52.87s/it] 56% 84/150 [1:14:00<58:09, 52.87s/it] 57% 85/150 [1:14:52<57:16, 52.88s/it] 57% 86/150 [1:15:45<56:23, 52.86s/it] 58% 87/150 [1:16:38<55:30, 52.87s/it] 59% 88/150 [1:17:31<54:37, 52.86s/it] 59% 89/150 [1:18:24<53:44, 52.86s/it] 60% 90/150 [1:19:17<52:51, 52.86s/it] 61% 91/150 [1:20:10<51:59, 52.87s/it] 61% 92/150 [1:21:02<51:06, 52.87s/it] 62% 93/150 [1:21:55<50:13, 52.87s/it] 63% 94/150 [1:22:48<49:20, 52.87s/it] 63% 95/150 [1:23:41<48:27, 52.87s/it] 64% 96/150 [1:24:34<47:35, 52.88s/it] 65% 97/150 [1:25:27<46:42, 52.88s/it] 65% 98/150 [1:26:20<45:49, 52.88s/it] 66% 99/150 [1:27:13<44:56, 52.87s/it] 67% 100/150 [1:28:05<44:03, 52.87s/it] 67% 101/150 [1:28:58<43:10, 52.87s/it] 68% 102/150 [1:29:51<42:17, 52.87s/it] 69% 103/150 [1:30:44<41:24, 52.86s/it] 69% 104/150 [1:31:37<40:31, 52.86s/it] 70% 105/150 [1:32:30<39:38, 52.86s/it] 71% 106/150 [1:33:23<38:45, 52.86s/it] 71% 107/150 [1:34:15<37:52, 52.85s/it] 72% 108/150 [1:35:08<36:59, 52.85s/it] 73% 109/150 [1:36:01<36:07, 52.85s/it] 73% 110/150 [1:36:54<35:13, 52.85s/it] 74% 111/150 [1:37:47<34:20, 52.84s/it] 75% 112/150 [1:38:40<33:28, 52.85s/it] 75% 113/150 [1:39:32<32:35, 52.84s/it] 76% 114/150 [1:40:25<31:42, 52.84s/it] 77% 115/150 [1:41:18<30:49, 52.84s/it] 77% 116/150 [1:42:11<29:56, 52.84s/it] 78% 117/150 [1:43:04<29:03, 52.84s/it] 79% 118/150 [1:43:57<28:10, 52.84s/it] 79% 119/150 [1:44:49<27:17, 52.83s/it] 80% 120/150 [1:45:42<26:24, 52.83s/it] 81% 121/150 [1:46:35<25:32, 52.83s/it] 81% 122/150 [1:47:28<24:39, 52.83s/it] 82% 123/150 [1:48:21<23:46, 52.84s/it] 83% 124/150 [1:49:14<22:53, 52.83s/it] 83% 125/150 [1:50:06<22:00, 52.83s/it] 84% 126/150 [1:50:59<21:08, 52.85s/it] 85% 127/150 [1:51:52<20:15, 52.84s/it] 85% 128/150 [1:52:45<19:22, 52.84s/it] 86% 129/150 [1:53:38<18:29, 52.84s/it] 87% 130/150 [1:54:31<17:36, 52.83s/it] 87% 131/150 [1:55:24<16:43, 52.83s/it] 88% 132/150 [1:56:16<15:50, 52.83s/it] 89% 133/150 [1:57:09<14:58, 52.83s/it] 89% 134/150 [1:58:02<14:05, 52.83s/it] 90% 135/150 [1:58:55<13:12, 52.83s/it] 91% 136/150 [1:59:48<12:19, 52.82s/it] 91% 137/150 [2:00:40<11:26, 52.83s/it] 92% 138/150 [2:01:33<10:33, 52.83s/it] 93% 139/150 [2:02:26<09:41, 52.83s/it] 93% 140/150 [2:03:19<08:48, 52.83s/it] 94% 141/150 [2:04:12<07:55, 52.83s/it] 95% 142/150 [2:05:05<07:02, 52.84s/it] 95% 143/150 [2:05:58<06:09, 52.84s/it] 96% 144/150 [2:06:50<05:17, 52.85s/it] 97% 145/150 [2:07:43<04:24, 52.84s/it] 97% 146/150 [2:08:36<03:31, 52.84s/it] 98% 147/150 [2:09:29<02:38, 52.85s/it] 99% 148/150 [2:10:22<01:45, 52.84s/it] 99% 149/150 [2:11:15<00:52, 52.84s/it]100% 150/150 [2:12:07<00:00, 52.84s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5547d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x567a8c0] Warning: data is not aligned! This can lead to a speed loss
119.11060610039331 (1014, 1352, 3)
119.16247461573474 (1014, 1352, 3)
119.18100512937222 (1014, 1352, 3)
119.17926081214088 (1014, 1352, 3)
119.15954278172644 (1014, 1352, 3)
119.15762145544235 (1014, 1352, 3)
119.15678212130761 (1014, 1352, 3)
119.13529983582896 (1014, 1352, 3)
119.12381929126353 (1014, 1352, 3)
119.10620640422643 (1014, 1352, 3)
119.09969451349743 (1014, 1352, 3)
119.07990110834899 (1014, 1352, 3)
119.08895507276823 (1014, 1352, 3)
119.08464728514797 (1014, 1352, 3)
119.0912520570008 (1014, 1352, 3)
119.0885232484857 (1014, 1352, 3)
119.10284007134827 (1014, 1352, 3)
119.10396072344183 (1014, 1352, 3)
119.1015246606678 (1014, 1352, 3)
119.09726355675377 (1014, 1352, 3)
119.08966699928807 (1014, 1352, 3)
119.09122433855023 (1014, 1352, 3)
119.08856215157421 (1014, 1352, 3)
119.10272895440168 (1014, 1352, 3)
119.0972433757766 (1014, 1352, 3)
119.10032668868581 (1014, 1352, 3)
119.09303965391813 (1014, 1352, 3)
119.10621734572008 (1014, 1352, 3)
119.11460412217126 (1014, 1352, 3)
119.12529663604994 (1014, 1352, 3)
119.12449012639614 (1014, 1352, 3)
119.11714181926403 (1014, 1352, 3)
119.11209535925057 (1014, 1352, 3)
119.10044485681718 (1014, 1352, 3)
119.1080574618069 (1014, 1352, 3)
119.10585554699688 (1014, 1352, 3)
119.11409935459776 (1014, 1352, 3)
119.09919825597454 (1014, 1352, 3)
119.10104420752464 (1014, 1352, 3)
119.09850456527744 (1014, 1352, 3)
119.10583949947286 (1014, 1352, 3)
119.10744838532732 (1014, 1352, 3)
119.11011810977674 (1014, 1352, 3)
119.11646806639979 (1014, 1352, 3)
119.11379931452758 (1014, 1352, 3)
119.1254527346926 (1014, 1352, 3)
119.12389661115196 (1014, 1352, 3)
119.12889784632502 (1014, 1352, 3)
119.11186801932705 (1014, 1352, 3)
119.11506828464611 (1014, 1352, 3)
119.11296873358776 (1014, 1352, 3)
119.12293400285549 (1014, 1352, 3)
119.1241032838097 (1014, 1352, 3)
119.12589039443841 (1014, 1352, 3)
119.1217814988582 (1014, 1352, 3)
119.1122096370731 (1014, 1352, 3)
119.11740733284316 (1014, 1352, 3)
119.1172225431727 (1014, 1352, 3)
119.1272082365619 (1014, 1352, 3)
119.11671655987769 (1014, 1352, 3)
119.12038998401083 (1014, 1352, 3)
119.109512923606 (1014, 1352, 3)
119.11133796474603 (1014, 1352, 3)
119.10761639804085 (1014, 1352, 3)
119.11322743912639 (1014, 1352, 3)
119.10958611004128 (1014, 1352, 3)
119.102225645694 (1014, 1352, 3)
119.10417104326413 (1014, 1352, 3)
119.10064690973316 (1014, 1352, 3)
119.10796214924002 (1014, 1352, 3)
119.10092555310466 (1014, 1352, 3)
119.11040015716847 (1014, 1352, 3)
119.10616920314804 (1014, 1352, 3)
119.1160082805224 (1014, 1352, 3)
119.11984363876148 (1014, 1352, 3)
119.13140004434952 (1014, 1352, 3)
119.12997230100098 (1014, 1352, 3)
119.1225128769223 (1014, 1352, 3)
119.12357663324892 (1014, 1352, 3)
119.12091833658174 (1014, 1352, 3)
119.13126218152959 (1014, 1352, 3)
119.127231578415 (1014, 1352, 3)
119.1354979984361 (1014, 1352, 3)
119.1248718629522 (1014, 1352, 3)
119.12840766740972 (1014, 1352, 3)
119.1238392290964 (1014, 1352, 3)
119.13272299250337 (1014, 1352, 3)
119.13522130021903 (1014, 1352, 3)
119.134435457831 (1014, 1352, 3)
119.13341619691187 (1014, 1352, 3)
119.12747812673848 (1014, 1352, 3)
119.12950084419703 (1014, 1352, 3)
119.12202585888294 (1014, 1352, 3)
119.12762717419636 (1014, 1352, 3)
119.12326176137624 (1014, 1352, 3)
119.12926985710895 (1014, 1352, 3)
119.12486845893196 (1014, 1352, 3)
119.13271934533883 (1014, 1352, 3)
119.1349411979817 (1014, 1352, 3)
119.13530713015807 (1014, 1352, 3)
119.13999568175717 (1014, 1352, 3)
119.14372235449272 (1014, 1352, 3)
119.15601111072208 (1014, 1352, 3)
119.15716385786368 (1014, 1352, 3)
119.17062870308774 (1014, 1352, 3)
119.16767668810226 (1014, 1352, 3)
119.1685004610016 (1014, 1352, 3)
119.15938011818758 (1014, 1352, 3)
119.16456541359818 (1014, 1352, 3)
119.16780604087158 (1014, 1352, 3)
119.16951680418909 (1014, 1352, 3)
119.17701804908792 (1014, 1352, 3)
119.17565644098985 (1014, 1352, 3)
119.17630174597062 (1014, 1352, 3)
119.1644460297453 (1014, 1352, 3)
119.17384793366246 (1014, 1352, 3)
119.17252133834405 (1014, 1352, 3)
119.18028469280176 (1014, 1352, 3)
119.17257969297683 (1014, 1352, 3)
119.17712357371552 (1014, 1352, 3)
119.17273092873343 (1014, 1352, 3)
119.16588690288621 (1014, 1352, 3)
119.1639038179491 (1014, 1352, 3)
119.16383160409104 (1014, 1352, 3)
119.16969891927221 (1014, 1352, 3)
119.16317876163689 (1014, 1352, 3)
119.17399649483173 (1014, 1352, 3)
119.17375407996141 (1014, 1352, 3)
119.18145980921925 (1014, 1352, 3)
119.17508942847472 (1014, 1352, 3)
119.18434374379981 (1014, 1352, 3)
119.18787395593836 (1014, 1352, 3)
119.19565554621882 (1014, 1352, 3)
119.20356916385592 (1014, 1352, 3)
119.20536697283397 (1014, 1352, 3)
119.20119072628177 (1014, 1352, 3)
119.18759336741243 (1014, 1352, 3)
119.19478460332466 (1014, 1352, 3)
119.1929712331112 (1014, 1352, 3)
119.20351251123327 (1014, 1352, 3)
119.19720072826581 (1014, 1352, 3)
119.20327301409459 (1014, 1352, 3)
119.18588114522912 (1014, 1352, 3)
119.17744112017553 (1014, 1352, 3)
119.17217169683602 (1014, 1352, 3)
119.17241313912912 (1014, 1352, 3)
119.17307595049971 (1014, 1352, 3)
119.16283106528327 (1014, 1352, 3)
119.16770440655283 (1014, 1352, 3)
119.15567873245956 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:10<00:00, 52.87s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
