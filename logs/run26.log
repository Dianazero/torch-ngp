nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=26, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_05-47-50 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:56, 53.53s/it]  1% 2/150 [01:46<2:11:10, 53.18s/it]  2% 3/150 [02:39<2:10:07, 53.11s/it]  3% 4/150 [03:32<2:09:10, 53.09s/it]  3% 5/150 [04:25<2:08:13, 53.06s/it]  4% 6/150 [05:18<2:07:20, 53.06s/it]  5% 7/150 [06:11<2:06:29, 53.07s/it]  5% 8/150 [07:04<2:05:36, 53.08s/it]  6% 9/150 [07:57<2:04:41, 53.06s/it]  7% 10/150 [08:50<2:03:47, 53.05s/it]  7% 11/150 [09:43<2:02:56, 53.07s/it]  8% 12/150 [10:37<2:02:04, 53.08s/it]  9% 13/150 [11:30<2:01:12, 53.08s/it]  9% 14/150 [12:23<2:00:19, 53.09s/it] 10% 15/150 [13:16<1:59:28, 53.10s/it] 11% 16/150 [14:09<1:58:36, 53.11s/it] 11% 17/150 [15:02<1:57:43, 53.11s/it] 12% 18/150 [15:55<1:56:50, 53.11s/it] 13% 19/150 [16:48<1:55:55, 53.10s/it] 13% 20/150 [17:41<1:55:00, 53.08s/it] 14% 21/150 [18:34<1:54:10, 53.10s/it] 15% 22/150 [19:28<1:53:15, 53.09s/it] 15% 23/150 [20:21<1:52:22, 53.09s/it] 16% 24/150 [21:14<1:51:29, 53.09s/it] 17% 25/150 [22:07<1:50:35, 53.08s/it] 17% 26/150 [23:00<1:49:41, 53.07s/it] 18% 27/150 [23:53<1:48:48, 53.08s/it] 19% 28/150 [24:46<1:47:57, 53.09s/it] 19% 29/150 [25:39<1:47:01, 53.07s/it] 20% 30/150 [26:32<1:46:11, 53.09s/it] 21% 31/150 [27:25<1:45:19, 53.11s/it] 21% 32/150 [28:19<1:44:27, 53.12s/it] 22% 33/150 [29:12<1:43:35, 53.12s/it] 23% 34/150 [30:05<1:42:42, 53.12s/it] 23% 35/150 [30:58<1:41:49, 53.12s/it] 24% 36/150 [31:51<1:40:54, 53.11s/it] 25% 37/150 [32:44<1:39:59, 53.10s/it] 25% 38/150 [33:37<1:39:05, 53.09s/it] 26% 39/150 [34:30<1:38:14, 53.11s/it] 27% 40/150 [35:23<1:37:22, 53.11s/it] 27% 41/150 [36:17<1:36:29, 53.12s/it] 28% 42/150 [37:10<1:35:37, 53.13s/it] 29% 43/150 [38:03<1:34:42, 53.11s/it] 29% 44/150 [38:56<1:33:48, 53.10s/it] 30% 45/150 [39:49<1:32:57, 53.12s/it] 31% 46/150 [40:42<1:32:02, 53.10s/it] 31% 47/150 [41:35<1:31:11, 53.12s/it] 32% 48/150 [42:28<1:30:17, 53.11s/it] 33% 49/150 [43:21<1:29:23, 53.10s/it] 33% 50/150 [44:15<1:28:31, 53.12s/it] 34% 51/150 [45:08<1:27:38, 53.12s/it] 35% 52/150 [46:01<1:26:46, 53.13s/it] 35% 53/150 [46:54<1:25:52, 53.12s/it] 36% 54/150 [47:47<1:24:58, 53.11s/it] 37% 55/150 [48:40<1:24:05, 53.11s/it] 37% 56/150 [49:33<1:23:12, 53.11s/it] 38% 57/150 [50:26<1:22:20, 53.13s/it] 39% 58/150 [51:20<1:21:28, 53.13s/it] 39% 59/150 [52:13<1:20:35, 53.13s/it] 40% 60/150 [53:06<1:19:40, 53.12s/it] 41% 61/150 [53:59<1:18:47, 53.11s/it] 41% 62/150 [54:52<1:17:54, 53.12s/it] 42% 63/150 [55:45<1:17:00, 53.11s/it] 43% 64/150 [56:38<1:16:08, 53.12s/it] 43% 65/150 [57:31<1:15:13, 53.11s/it] 44% 66/150 [58:24<1:14:21, 53.12s/it] 45% 67/150 [59:18<1:13:29, 53.12s/it] 45% 68/150 [1:00:11<1:12:34, 53.11s/it] 46% 69/150 [1:01:04<1:11:41, 53.10s/it] 47% 70/150 [1:01:57<1:10:49, 53.12s/it] 47% 71/150 [1:02:50<1:09:55, 53.10s/it] 48% 72/150 [1:03:43<1:09:03, 53.12s/it] 49% 73/150 [1:04:36<1:08:09, 53.11s/it] 49% 74/150 [1:05:29<1:07:17, 53.13s/it] 50% 75/150 [1:06:23<1:06:25, 53.14s/it] 51% 76/150 [1:07:16<1:05:32, 53.14s/it] 51% 77/150 [1:08:09<1:04:39, 53.15s/it] 52% 78/150 [1:09:02<1:03:45, 53.13s/it] 53% 79/150 [1:09:55<1:02:51, 53.12s/it] 53% 80/150 [1:10:48<1:01:59, 53.13s/it] 54% 81/150 [1:11:41<1:01:05, 53.12s/it] 55% 82/150 [1:12:34<1:00:12, 53.13s/it] 55% 83/150 [1:13:28<59:20, 53.14s/it]   56% 84/150 [1:14:21<58:26, 53.12s/it] 57% 85/150 [1:15:14<57:33, 53.13s/it] 57% 86/150 [1:16:07<56:39, 53.12s/it] 58% 87/150 [1:17:00<55:47, 53.13s/it] 59% 88/150 [1:17:53<54:53, 53.12s/it] 59% 89/150 [1:18:46<54:00, 53.13s/it] 60% 90/150 [1:19:40<53:08, 53.14s/it] 61% 91/150 [1:20:33<52:15, 53.15s/it] 61% 92/150 [1:21:26<51:22, 53.15s/it] 62% 93/150 [1:22:19<50:28, 53.13s/it] 63% 94/150 [1:23:12<49:35, 53.14s/it] 63% 95/150 [1:24:05<48:42, 53.14s/it] 64% 96/150 [1:24:58<47:48, 53.13s/it] 65% 97/150 [1:25:51<46:55, 53.12s/it] 65% 98/150 [1:26:45<46:01, 53.12s/it] 66% 99/150 [1:27:38<45:09, 53.12s/it] 67% 100/150 [1:28:31<44:16, 53.13s/it] 67% 101/150 [1:29:24<43:23, 53.13s/it] 68% 102/150 [1:30:17<42:30, 53.13s/it] 69% 103/150 [1:31:10<41:37, 53.14s/it] 69% 104/150 [1:32:03<40:43, 53.12s/it] 70% 105/150 [1:32:56<39:50, 53.11s/it] 71% 106/150 [1:33:50<38:57, 53.12s/it] 71% 107/150 [1:34:43<38:04, 53.13s/it] 72% 108/150 [1:35:36<37:11, 53.13s/it] 73% 109/150 [1:36:29<36:18, 53.13s/it] 73% 110/150 [1:37:22<35:24, 53.11s/it] 74% 111/150 [1:38:15<34:30, 53.10s/it] 75% 112/150 [1:39:08<33:38, 53.11s/it] 75% 113/150 [1:40:01<32:45, 53.11s/it] 76% 114/150 [1:40:54<31:51, 53.10s/it] 77% 115/150 [1:41:48<30:58, 53.10s/it] 77% 116/150 [1:42:41<30:05, 53.11s/it] 78% 117/150 [1:43:34<29:12, 53.11s/it] 79% 118/150 [1:44:27<28:19, 53.11s/it] 79% 119/150 [1:45:20<27:26, 53.11s/it] 80% 120/150 [1:46:13<26:33, 53.11s/it] 81% 121/150 [1:47:06<25:40, 53.11s/it] 81% 122/150 [1:47:59<24:46, 53.10s/it] 82% 123/150 [1:48:52<23:53, 53.10s/it] 83% 124/150 [1:49:46<23:00, 53.11s/it] 83% 125/150 [1:50:39<22:07, 53.12s/it] 84% 126/150 [1:51:32<21:14, 53.12s/it] 85% 127/150 [1:52:25<20:21, 53.12s/it] 85% 128/150 [1:53:18<19:28, 53.13s/it] 86% 129/150 [1:54:11<18:35, 53.13s/it] 87% 130/150 [1:55:04<17:42, 53.11s/it] 87% 131/150 [1:55:57<16:49, 53.11s/it] 88% 132/150 [1:56:51<15:56, 53.12s/it] 89% 133/150 [1:57:44<15:02, 53.11s/it] 89% 134/150 [1:58:37<14:09, 53.10s/it] 90% 135/150 [1:59:30<13:16, 53.11s/it] 91% 136/150 [2:00:23<12:23, 53.10s/it] 91% 137/150 [2:01:16<11:30, 53.11s/it] 92% 138/150 [2:02:09<10:37, 53.10s/it] 93% 139/150 [2:03:02<09:44, 53.12s/it] 93% 140/150 [2:03:55<08:51, 53.12s/it] 94% 141/150 [2:04:48<07:57, 53.11s/it] 95% 142/150 [2:05:42<07:04, 53.12s/it] 95% 143/150 [2:06:35<06:11, 53.12s/it] 96% 144/150 [2:07:28<05:18, 53.13s/it] 97% 145/150 [2:08:21<04:25, 53.11s/it] 97% 146/150 [2:09:14<03:32, 53.10s/it] 98% 147/150 [2:10:07<02:39, 53.11s/it] 99% 148/150 [2:11:00<01:46, 53.12s/it] 99% 149/150 [2:11:53<00:53, 53.12s/it]100% 150/150 [2:12:47<00:00, 53.12s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x74afd80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5f378c0] Warning: data is not aligned! This can lead to a speed loss
119.3007585615972 (1014, 1352, 3)
119.3536944804298 (1014, 1352, 3)
119.36984752907033 (1014, 1352, 3)
119.36750459056445 (1014, 1352, 3)
119.34761611599345 (1014, 1352, 3)
119.34726696077402 (1014, 1352, 3)
119.34802386898996 (1014, 1352, 3)
119.33148519348451 (1014, 1352, 3)
119.32428909468622 (1014, 1352, 3)
119.30666380728967 (1014, 1352, 3)
119.3024921804792 (1014, 1352, 3)
119.28114167921291 (1014, 1352, 3)
119.29114779672358 (1014, 1352, 3)
119.2846682441869 (1014, 1352, 3)
119.29027077522184 (1014, 1352, 3)
119.28431057891686 (1014, 1352, 3)
119.29731247738758 (1014, 1352, 3)
119.29775183914352 (1014, 1352, 3)
119.29745325793915 (1014, 1352, 3)
119.29450513326253 (1014, 1352, 3)
119.28743036347156 (1014, 1352, 3)
119.290614094978 (1014, 1352, 3)
119.28677460328575 (1014, 1352, 3)
119.30066470789616 (1014, 1352, 3)
119.29312917965058 (1014, 1352, 3)
119.29668711023969 (1014, 1352, 3)
119.28846226789445 (1014, 1352, 3)
119.30121397087714 (1014, 1352, 3)
119.31033941972153 (1014, 1352, 3)
119.32070855167692 (1014, 1352, 3)
119.31963263813515 (1014, 1352, 3)
119.31161446844764 (1014, 1352, 3)
119.30829554870861 (1014, 1352, 3)
119.29689426918603 (1014, 1352, 3)
119.30554072375305 (1014, 1352, 3)
119.30315815272574 (1014, 1352, 3)
119.31181603507503 (1014, 1352, 3)
119.29652493298943 (1014, 1352, 3)
119.29832517341052 (1014, 1352, 3)
119.29572109792296 (1014, 1352, 3)
119.30190620270844 (1014, 1352, 3)
119.30429704064206 (1014, 1352, 3)
119.30747907013838 (1014, 1352, 3)
119.31595508054885 (1014, 1352, 3)
119.31304075293038 (1014, 1352, 3)
119.32537643601026 (1014, 1352, 3)
119.32236558010341 (1014, 1352, 3)
119.32764594493656 (1014, 1352, 3)
119.31011329551953 (1014, 1352, 3)
119.31436078335258 (1014, 1352, 3)
119.31163878287798 (1014, 1352, 3)
119.32254818147513 (1014, 1352, 3)
119.3234203400908 (1014, 1352, 3)
119.32533558776731 (1014, 1352, 3)
119.3211068220456 (1014, 1352, 3)
119.31222646265887 (1014, 1352, 3)
119.31864474283114 (1014, 1352, 3)
119.31886211383822 (1014, 1352, 3)
119.32979363856697 (1014, 1352, 3)
119.3172850798875 (1014, 1352, 3)
119.32039270722703 (1014, 1352, 3)
119.30816230563045 (1014, 1352, 3)
119.31017481102825 (1014, 1352, 3)
119.30569050064385 (1014, 1352, 3)
119.3123414699143 (1014, 1352, 3)
119.30925669813927 (1014, 1352, 3)
119.30300229722738 (1014, 1352, 3)
119.305129323592 (1014, 1352, 3)
119.30104766017374 (1014, 1352, 3)
119.30765583604682 (1014, 1352, 3)
119.29901278550004 (1014, 1352, 3)
119.307579002447 (1014, 1352, 3)
119.3029959754755 (1014, 1352, 3)
119.31437196799054 (1014, 1352, 3)
119.31888642826854 (1014, 1352, 3)
119.33109348801202 (1014, 1352, 3)
119.33128241113562 (1014, 1352, 3)
119.32579975024217 (1014, 1352, 3)
119.3287561418251 (1014, 1352, 3)
119.326751417045 (1014, 1352, 3)
119.33802237122106 (1014, 1352, 3)
119.3330369404277 (1014, 1352, 3)
119.3425927546888 (1014, 1352, 3)
119.32990767324517 (1014, 1352, 3)
119.3348080035324 (1014, 1352, 3)
119.32998961287537 (1014, 1352, 3)
119.33888383148738 (1014, 1352, 3)
119.34120974989204 (1014, 1352, 3)
119.34198100362188 (1014, 1352, 3)
119.34267858462783 (1014, 1352, 3)
119.33689709938572 (1014, 1352, 3)
119.34060918346307 (1014, 1352, 3)
119.33224988231815 (1014, 1352, 3)
119.33948026446319 (1014, 1352, 3)
119.33521040735424 (1014, 1352, 3)
119.34306518406996 (1014, 1352, 3)
119.34037090204592 (1014, 1352, 3)
119.34763362238328 (1014, 1352, 3)
119.34923180988838 (1014, 1352, 3)
119.3495277165054 (1014, 1352, 3)
119.35531771179814 (1014, 1352, 3)
119.35943171340872 (1014, 1352, 3)
119.37363279958296 (1014, 1352, 3)
119.3742460095157 (1014, 1352, 3)
119.38736121323171 (1014, 1352, 3)
119.38251291582539 (1014, 1352, 3)
119.38342373438527 (1014, 1352, 3)
119.37384020167362 (1014, 1352, 3)
119.37891024668448 (1014, 1352, 3)
119.3831536010644 (1014, 1352, 3)
119.38608446249548 (1014, 1352, 3)
119.39173464981386 (1014, 1352, 3)
119.38958403845182 (1014, 1352, 3)
119.38994632346362 (1014, 1352, 3)
119.3780974152788 (1014, 1352, 3)
119.38755159522114 (1014, 1352, 3)
119.38612871475867 (1014, 1352, 3)
119.39530546705103 (1014, 1352, 3)
119.38573433469884 (1014, 1352, 3)
119.39025827760466 (1014, 1352, 3)
119.38550115931204 (1014, 1352, 3)
119.38108760391988 (1014, 1352, 3)
119.38027452936988 (1014, 1352, 3)
119.38096287089232 (1014, 1352, 3)
119.38871285241335 (1014, 1352, 3)
119.38301744025458 (1014, 1352, 3)
119.39266005703193 (1014, 1352, 3)
119.3907657197655 (1014, 1352, 3)
119.3980092317029 (1014, 1352, 3)
119.39126951476177 (1014, 1352, 3)
119.4002016638851 (1014, 1352, 3)
119.40273936097786 (1014, 1352, 3)
119.41115628732265 (1014, 1352, 3)
119.41702481822531 (1014, 1352, 3)
119.4177316387148 (1014, 1352, 3)
119.41353205030947 (1014, 1352, 3)
119.40103102910341 (1014, 1352, 3)
119.40899984049733 (1014, 1352, 3)
119.40662942668519 (1014, 1352, 3)
119.41901617006874 (1014, 1352, 3)
119.41389263331116 (1014, 1352, 3)
119.42161562581454 (1014, 1352, 3)
119.40449680800158 (1014, 1352, 3)
119.39840239604122 (1014, 1352, 3)
119.39605362207206 (1014, 1352, 3)
119.39684529992336 (1014, 1352, 3)
119.39946615236784 (1014, 1352, 3)
119.39012114421764 (1014, 1352, 3)
119.39776292652374 (1014, 1352, 3)
119.38263254282258 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:49<00:00, 53.13s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
