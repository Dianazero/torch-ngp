nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=34, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_12-53-24 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:13:38, 53.81s/it]  1% 2/150 [01:47<2:12:02, 53.53s/it]  2% 3/150 [02:40<2:10:56, 53.45s/it]  3% 4/150 [03:33<2:10:00, 53.43s/it]  3% 5/150 [04:27<2:09:04, 53.41s/it]  4% 6/150 [05:20<2:08:10, 53.41s/it]  5% 7/150 [06:14<2:07:16, 53.40s/it]  5% 8/150 [07:07<2:06:23, 53.41s/it]  6% 9/150 [08:00<2:05:31, 53.41s/it]  7% 10/150 [08:54<2:04:38, 53.42s/it]  7% 11/150 [09:47<2:03:44, 53.42s/it]  8% 12/150 [10:41<2:02:52, 53.42s/it]  9% 13/150 [11:34<2:01:59, 53.43s/it]  9% 14/150 [12:28<2:01:07, 53.44s/it] 10% 15/150 [13:21<2:00:14, 53.44s/it] 11% 16/150 [14:14<1:59:21, 53.44s/it] 11% 17/150 [15:08<1:58:27, 53.44s/it] 12% 18/150 [16:01<1:57:34, 53.44s/it] 13% 19/150 [16:55<1:56:40, 53.44s/it] 13% 20/150 [17:48<1:55:47, 53.45s/it] 14% 21/150 [18:42<1:54:54, 53.45s/it] 15% 22/150 [19:35<1:54:01, 53.45s/it] 15% 23/150 [20:29<1:53:07, 53.45s/it] 16% 24/150 [21:22<1:52:14, 53.45s/it] 17% 25/150 [22:16<1:51:21, 53.45s/it] 17% 26/150 [23:09<1:50:28, 53.45s/it] 18% 27/150 [24:02<1:49:33, 53.45s/it] 19% 28/150 [24:56<1:48:40, 53.45s/it] 19% 29/150 [25:49<1:47:47, 53.45s/it] 20% 30/150 [26:43<1:46:54, 53.45s/it] 21% 31/150 [27:36<1:46:00, 53.45s/it] 21% 32/150 [28:30<1:45:07, 53.45s/it] 22% 33/150 [29:23<1:44:13, 53.45s/it] 23% 34/150 [30:17<1:43:20, 53.45s/it] 23% 35/150 [31:10<1:42:27, 53.45s/it] 24% 36/150 [32:03<1:41:33, 53.45s/it] 25% 37/150 [32:57<1:40:39, 53.45s/it] 25% 38/150 [33:50<1:39:46, 53.45s/it] 26% 39/150 [34:44<1:38:53, 53.45s/it] 27% 40/150 [35:37<1:37:59, 53.45s/it] 27% 41/150 [36:31<1:37:07, 53.46s/it] 28% 42/150 [37:24<1:36:13, 53.46s/it] 29% 43/150 [38:18<1:35:20, 53.46s/it] 29% 44/150 [39:11<1:34:26, 53.46s/it] 30% 45/150 [40:05<1:33:33, 53.46s/it] 31% 46/150 [40:58<1:32:39, 53.46s/it] 31% 47/150 [41:51<1:31:45, 53.45s/it] 32% 48/150 [42:45<1:30:52, 53.45s/it] 33% 49/150 [43:38<1:29:59, 53.46s/it] 33% 50/150 [44:32<1:29:06, 53.46s/it] 34% 51/150 [45:25<1:28:12, 53.46s/it] 35% 52/150 [46:19<1:27:19, 53.46s/it] 35% 53/150 [47:12<1:26:26, 53.47s/it] 36% 54/150 [48:06<1:25:32, 53.46s/it] 37% 55/150 [48:59<1:24:38, 53.46s/it] 37% 56/150 [49:53<1:23:45, 53.47s/it] 38% 57/150 [50:46<1:22:51, 53.46s/it] 39% 58/150 [51:40<1:21:58, 53.46s/it] 39% 59/150 [52:33<1:21:05, 53.46s/it] 40% 60/150 [53:27<1:20:11, 53.46s/it] 41% 61/150 [54:20<1:19:18, 53.46s/it] 41% 62/150 [55:13<1:18:24, 53.46s/it] 42% 63/150 [56:07<1:17:31, 53.47s/it] 43% 64/150 [57:00<1:16:38, 53.47s/it] 43% 65/150 [57:54<1:15:44, 53.46s/it] 44% 66/150 [58:47<1:14:51, 53.47s/it] 45% 67/150 [59:41<1:13:58, 53.48s/it] 45% 68/150 [1:00:34<1:13:05, 53.48s/it] 46% 69/150 [1:01:28<1:12:12, 53.48s/it] 47% 70/150 [1:02:21<1:11:18, 53.48s/it] 47% 71/150 [1:03:15<1:10:25, 53.48s/it] 48% 72/150 [1:04:08<1:09:31, 53.48s/it] 49% 73/150 [1:05:02<1:08:38, 53.48s/it] 49% 74/150 [1:05:55<1:07:44, 53.48s/it] 50% 75/150 [1:06:49<1:06:51, 53.48s/it] 51% 76/150 [1:07:42<1:05:57, 53.48s/it] 51% 77/150 [1:08:36<1:05:04, 53.48s/it] 52% 78/150 [1:09:29<1:04:10, 53.49s/it] 53% 79/150 [1:10:23<1:03:17, 53.48s/it] 53% 80/150 [1:11:16<1:02:24, 53.49s/it] 54% 81/150 [1:12:10<1:01:30, 53.49s/it] 55% 82/150 [1:13:03<1:00:37, 53.49s/it] 55% 83/150 [1:13:57<59:43, 53.49s/it]   56% 84/150 [1:14:50<58:50, 53.49s/it] 57% 85/150 [1:15:44<57:56, 53.49s/it] 57% 86/150 [1:16:37<57:03, 53.49s/it] 58% 87/150 [1:17:31<56:10, 53.49s/it] 59% 88/150 [1:18:24<55:16, 53.49s/it] 59% 89/150 [1:19:18<54:23, 53.50s/it] 60% 90/150 [1:20:11<53:29, 53.50s/it] 61% 91/150 [1:21:05<52:36, 53.50s/it] 61% 92/150 [1:21:58<51:42, 53.50s/it] 62% 93/150 [1:22:52<50:49, 53.49s/it] 63% 94/150 [1:23:45<49:55, 53.50s/it] 63% 95/150 [1:24:39<49:02, 53.50s/it] 64% 96/150 [1:25:32<48:09, 53.50s/it] 65% 97/150 [1:26:26<47:15, 53.50s/it] 65% 98/150 [1:27:19<46:22, 53.50s/it] 66% 99/150 [1:28:13<45:28, 53.50s/it] 67% 100/150 [1:29:06<44:34, 53.50s/it] 67% 101/150 [1:30:00<43:41, 53.50s/it] 68% 102/150 [1:30:53<42:48, 53.51s/it] 69% 103/150 [1:31:47<41:54, 53.50s/it] 69% 104/150 [1:32:40<41:01, 53.50s/it] 70% 105/150 [1:33:34<40:07, 53.50s/it] 71% 106/150 [1:34:27<39:13, 53.50s/it] 71% 107/150 [1:35:21<38:20, 53.50s/it] 72% 108/150 [1:36:14<37:27, 53.50s/it] 73% 109/150 [1:37:08<36:33, 53.50s/it] 73% 110/150 [1:38:01<35:39, 53.50s/it] 74% 111/150 [1:38:55<34:46, 53.50s/it] 75% 112/150 [1:39:48<33:52, 53.49s/it] 75% 113/150 [1:40:42<32:59, 53.50s/it] 76% 114/150 [1:41:35<32:05, 53.50s/it] 77% 115/150 [1:42:29<31:12, 53.50s/it] 77% 116/150 [1:43:22<30:18, 53.50s/it] 78% 117/150 [1:44:16<29:25, 53.50s/it] 79% 118/150 [1:45:09<28:31, 53.50s/it] 79% 119/150 [1:46:03<27:38, 53.50s/it] 80% 120/150 [1:46:56<26:44, 53.50s/it] 81% 121/150 [1:47:50<25:51, 53.50s/it] 81% 122/150 [1:48:43<24:58, 53.50s/it] 82% 123/150 [1:49:37<24:04, 53.50s/it] 83% 124/150 [1:50:30<23:11, 53.51s/it] 83% 125/150 [1:51:24<22:17, 53.52s/it] 84% 126/150 [1:52:17<21:24, 53.52s/it] 85% 127/150 [1:53:11<20:31, 53.53s/it] 85% 128/150 [1:54:04<19:37, 53.53s/it] 86% 129/150 [1:54:58<18:44, 53.53s/it] 87% 130/150 [1:55:51<17:50, 53.53s/it] 87% 131/150 [1:56:45<16:56, 53.52s/it] 88% 132/150 [1:57:38<16:03, 53.52s/it] 89% 133/150 [1:58:32<15:09, 53.52s/it] 89% 134/150 [1:59:25<14:16, 53.53s/it] 90% 135/150 [2:00:19<13:22, 53.52s/it] 91% 136/150 [2:01:12<12:29, 53.52s/it] 91% 137/150 [2:02:06<11:35, 53.52s/it] 92% 138/150 [2:02:59<10:42, 53.52s/it] 93% 139/150 [2:03:53<09:48, 53.53s/it] 93% 140/150 [2:04:47<08:55, 53.52s/it] 94% 141/150 [2:05:40<08:01, 53.52s/it] 95% 142/150 [2:06:34<07:08, 53.52s/it] 95% 143/150 [2:07:27<06:14, 53.52s/it] 96% 144/150 [2:08:21<05:21, 53.52s/it] 97% 145/150 [2:09:14<04:27, 53.52s/it] 97% 146/150 [2:10:08<03:34, 53.52s/it] 98% 147/150 [2:11:01<02:40, 53.51s/it] 99% 148/150 [2:11:55<01:47, 53.51s/it] 99% 149/150 [2:12:48<00:53, 53.51s/it]100% 150/150 [2:13:42<00:00, 53.51s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5feed80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5eda8c0] Warning: data is not aligned! This can lead to a speed loss
120.65743155974153 (1014, 1352, 3)
120.71058047298375 (1014, 1352, 3)
120.739630381756 (1014, 1352, 3)
120.76116737470288 (1014, 1352, 3)
120.7579887492268 (1014, 1352, 3)
120.7714341429066 (1014, 1352, 3)
120.78920142657626 (1014, 1352, 3)
120.7920304105443 (1014, 1352, 3)
120.80420148493089 (1014, 1352, 3)
120.80412513761968 (1014, 1352, 3)
120.81848645588973 (1014, 1352, 3)
120.81224178074997 (1014, 1352, 3)
120.82893995891834 (1014, 1352, 3)
120.82765712957452 (1014, 1352, 3)
120.84537335294048 (1014, 1352, 3)
120.84603373286805 (1014, 1352, 3)
120.85729544756059 (1014, 1352, 3)
120.8605377768441 (1014, 1352, 3)
120.86285007916779 (1014, 1352, 3)
120.86114466502495 (1014, 1352, 3)
120.85366651883493 (1014, 1352, 3)
120.86105227018973 (1014, 1352, 3)
120.85843944150726 (1014, 1352, 3)
120.8675768044225 (1014, 1352, 3)
120.85891843578462 (1014, 1352, 3)
120.86780219919159 (1014, 1352, 3)
120.86267452898086 (1014, 1352, 3)
120.87586267598785 (1014, 1352, 3)
120.88662521542585 (1014, 1352, 3)
120.8984313302133 (1014, 1352, 3)
120.8980768258192 (1014, 1352, 3)
120.88956166917592 (1014, 1352, 3)
120.89182655836046 (1014, 1352, 3)
120.88559209528144 (1014, 1352, 3)
120.8951824360336 (1014, 1352, 3)
120.88956628891768 (1014, 1352, 3)
120.89981992732903 (1014, 1352, 3)
120.88650510214006 (1014, 1352, 3)
120.88800919279981 (1014, 1352, 3)
120.8830872226696 (1014, 1352, 3)
120.88899028006334 (1014, 1352, 3)
120.88762016191465 (1014, 1352, 3)
120.88513717229011 (1014, 1352, 3)
120.89127778166808 (1014, 1352, 3)
120.8880001964606 (1014, 1352, 3)
120.89653358892663 (1014, 1352, 3)
120.88807119459715 (1014, 1352, 3)
120.89220124373173 (1014, 1352, 3)
120.87482761068901 (1014, 1352, 3)
120.878203426195 (1014, 1352, 3)
120.87354016160343 (1014, 1352, 3)
120.88491104808811 (1014, 1352, 3)
120.8830111185027 (1014, 1352, 3)
120.8813455800256 (1014, 1352, 3)
120.87853069842714 (1014, 1352, 3)
120.87310687845508 (1014, 1352, 3)
120.88123397679041 (1014, 1352, 3)
120.87987285498096 (1014, 1352, 3)
120.8925674190524 (1014, 1352, 3)
120.88119872086645 (1014, 1352, 3)
120.88570321222802 (1014, 1352, 3)
120.87453340608211 (1014, 1352, 3)
120.88147857995946 (1014, 1352, 3)
120.87833496726306 (1014, 1352, 3)
120.88157802597948 (1014, 1352, 3)
120.88102949243141 (1014, 1352, 3)
120.87857106038149 (1014, 1352, 3)
120.88436907943621 (1014, 1352, 3)
120.87893577683633 (1014, 1352, 3)
120.88805539021743 (1014, 1352, 3)
120.8789637384312 (1014, 1352, 3)
120.88825209395874 (1014, 1352, 3)
120.88144891635447 (1014, 1352, 3)
120.89348115534392 (1014, 1352, 3)
120.89308264183093 (1014, 1352, 3)
120.90110227038424 (1014, 1352, 3)
120.89784851331848 (1014, 1352, 3)
120.89536844142556 (1014, 1352, 3)
120.89838172877545 (1014, 1352, 3)
120.89595782321659 (1014, 1352, 3)
120.90873967609288 (1014, 1352, 3)
120.90434362709055 (1014, 1352, 3)
120.9136699131294 (1014, 1352, 3)
120.90054303848683 (1014, 1352, 3)
120.90817217728916 (1014, 1352, 3)
120.90394122326872 (1014, 1352, 3)
120.91276979291887 (1014, 1352, 3)
120.9135113830437 (1014, 1352, 3)
120.91694239230652 (1014, 1352, 3)
120.91829232947804 (1014, 1352, 3)
120.91319432287229 (1014, 1352, 3)
120.91927293045295 (1014, 1352, 3)
120.91299518768795 (1014, 1352, 3)
120.92181257270015 (1014, 1352, 3)
120.91628736155363 (1014, 1352, 3)
120.92799573233118 (1014, 1352, 3)
120.92490269364986 (1014, 1352, 3)
120.93226096969839 (1014, 1352, 3)
120.9303710090294 (1014, 1352, 3)
120.93220601908585 (1014, 1352, 3)
120.93877772331345 (1014, 1352, 3)
120.94378430766119 (1014, 1352, 3)
120.95984933806395 (1014, 1352, 3)
120.96150782535625 (1014, 1352, 3)
120.97346201502437 (1014, 1352, 3)
120.96450725348086 (1014, 1352, 3)
120.96698562336364 (1014, 1352, 3)
120.95954589397353 (1014, 1352, 3)
120.96601596388237 (1014, 1352, 3)
120.96782763208572 (1014, 1352, 3)
120.97081441670655 (1014, 1352, 3)
120.97555500118655 (1014, 1352, 3)
120.97216240872363 (1014, 1352, 3)
120.97577504678097 (1014, 1352, 3)
120.96632232570444 (1014, 1352, 3)
120.9769387354162 (1014, 1352, 3)
120.97475529957323 (1014, 1352, 3)
120.9850928227692 (1014, 1352, 3)
120.9764636314477 (1014, 1352, 3)
120.97862348229326 (1014, 1352, 3)
120.97210940326552 (1014, 1352, 3)
120.96586253982704 (1014, 1352, 3)
120.96534172472953 (1014, 1352, 3)
120.9637870600547 (1014, 1352, 3)
120.97258061692517 (1014, 1352, 3)
120.96721247699855 (1014, 1352, 3)
120.97664282879917 (1014, 1352, 3)
120.97192339787355 (1014, 1352, 3)
120.97999554559637 (1014, 1352, 3)
120.97402440779773 (1014, 1352, 3)
120.97996345054834 (1014, 1352, 3)
120.98196647331832 (1014, 1352, 3)
120.98680626067403 (1014, 1352, 3)
120.99002038521839 (1014, 1352, 3)
120.98348588206917 (1014, 1352, 3)
120.98159762341032 (1014, 1352, 3)
120.97081733443818 (1014, 1352, 3)
120.98020537913006 (1014, 1352, 3)
120.97424348081495 (1014, 1352, 3)
120.9875427447685 (1014, 1352, 3)
120.97996563884706 (1014, 1352, 3)
120.98392524382511 (1014, 1352, 3)
120.96978591630389 (1014, 1352, 3)
120.96645702764843 (1014, 1352, 3)
120.96457606331867 (1014, 1352, 3)
120.96247748483752 (1014, 1352, 3)
120.96980366583803 (1014, 1352, 3)
120.96403336523386 (1014, 1352, 3)
120.97378393808185 (1014, 1352, 3)
120.95830537173846 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:13:44<00:00, 53.50s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
