nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=36, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_12-53-57 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:14:03, 53.98s/it]  1% 2/150 [01:47<2:12:31, 53.73s/it]  2% 3/150 [02:41<2:11:27, 53.66s/it]  3% 4/150 [03:34<2:10:31, 53.64s/it]  3% 5/150 [04:28<2:09:36, 53.63s/it]  4% 6/150 [05:21<2:08:42, 53.63s/it]  5% 7/150 [06:15<2:07:48, 53.63s/it]  5% 8/150 [07:09<2:06:55, 53.63s/it]  6% 9/150 [08:02<2:06:03, 53.64s/it]  7% 10/150 [08:56<2:05:09, 53.64s/it]  7% 11/150 [09:50<2:04:16, 53.64s/it]  8% 12/150 [10:43<2:03:23, 53.65s/it]  9% 13/150 [11:37<2:02:30, 53.65s/it]  9% 14/150 [12:31<2:01:37, 53.66s/it] 10% 15/150 [13:24<2:00:44, 53.66s/it] 11% 16/150 [14:18<1:59:50, 53.66s/it] 11% 17/150 [15:12<1:58:56, 53.66s/it] 12% 18/150 [16:05<1:58:04, 53.67s/it] 13% 19/150 [16:59<1:57:11, 53.67s/it] 13% 20/150 [17:53<1:56:17, 53.68s/it] 14% 21/150 [18:46<1:55:24, 53.68s/it] 15% 22/150 [19:40<1:54:30, 53.68s/it] 15% 23/150 [20:34<1:53:36, 53.68s/it] 16% 24/150 [21:27<1:52:43, 53.68s/it] 17% 25/150 [22:21<1:51:49, 53.68s/it] 17% 26/150 [23:15<1:50:56, 53.68s/it] 18% 27/150 [24:08<1:50:02, 53.68s/it] 19% 28/150 [25:02<1:49:08, 53.68s/it] 19% 29/150 [25:56<1:48:15, 53.68s/it] 20% 30/150 [26:50<1:47:21, 53.68s/it] 21% 31/150 [27:43<1:46:28, 53.69s/it] 21% 32/150 [28:37<1:45:35, 53.69s/it] 22% 33/150 [29:31<1:44:41, 53.69s/it] 23% 34/150 [30:24<1:43:48, 53.69s/it] 23% 35/150 [31:18<1:42:54, 53.69s/it] 24% 36/150 [32:12<1:42:01, 53.70s/it] 25% 37/150 [33:05<1:41:07, 53.70s/it] 25% 38/150 [33:59<1:40:13, 53.70s/it] 26% 39/150 [34:53<1:39:20, 53.70s/it] 27% 40/150 [35:47<1:38:27, 53.70s/it] 27% 41/150 [36:40<1:37:34, 53.71s/it] 28% 42/150 [37:34<1:36:39, 53.70s/it] 29% 43/150 [38:28<1:35:45, 53.69s/it] 29% 44/150 [39:21<1:34:51, 53.70s/it] 30% 45/150 [40:15<1:33:57, 53.69s/it] 31% 46/150 [41:09<1:33:04, 53.69s/it] 31% 47/150 [42:02<1:32:10, 53.69s/it] 32% 48/150 [42:56<1:31:16, 53.69s/it] 33% 49/150 [43:50<1:30:22, 53.69s/it] 33% 50/150 [44:43<1:29:28, 53.69s/it] 34% 51/150 [45:37<1:28:34, 53.68s/it] 35% 52/150 [46:31<1:27:41, 53.69s/it] 35% 53/150 [47:24<1:26:47, 53.68s/it] 36% 54/150 [48:18<1:25:53, 53.69s/it] 37% 55/150 [49:12<1:24:59, 53.68s/it] 37% 56/150 [50:06<1:24:06, 53.68s/it] 38% 57/150 [50:59<1:23:12, 53.69s/it] 39% 58/150 [51:53<1:22:19, 53.69s/it] 39% 59/150 [52:47<1:21:25, 53.69s/it] 40% 60/150 [53:40<1:20:31, 53.69s/it] 41% 61/150 [54:34<1:19:38, 53.69s/it] 41% 62/150 [55:28<1:18:44, 53.69s/it] 42% 63/150 [56:21<1:17:51, 53.69s/it] 43% 64/150 [57:15<1:16:58, 53.70s/it] 43% 65/150 [58:09<1:16:04, 53.70s/it] 44% 66/150 [59:02<1:15:10, 53.70s/it] 45% 67/150 [59:56<1:14:17, 53.70s/it] 45% 68/150 [1:00:50<1:13:23, 53.71s/it] 46% 69/150 [1:01:44<1:12:30, 53.70s/it] 47% 70/150 [1:02:37<1:11:36, 53.70s/it] 47% 71/150 [1:03:31<1:10:42, 53.70s/it] 48% 72/150 [1:04:25<1:09:48, 53.70s/it] 49% 73/150 [1:05:18<1:08:55, 53.70s/it] 49% 74/150 [1:06:12<1:08:01, 53.71s/it] 50% 75/150 [1:07:06<1:07:08, 53.71s/it] 51% 76/150 [1:08:00<1:06:14, 53.71s/it] 51% 77/150 [1:08:53<1:05:20, 53.71s/it] 52% 78/150 [1:09:47<1:04:26, 53.71s/it] 53% 79/150 [1:10:41<1:03:33, 53.70s/it] 53% 80/150 [1:11:34<1:02:39, 53.70s/it] 54% 81/150 [1:12:28<1:01:45, 53.70s/it] 55% 82/150 [1:13:22<1:00:51, 53.70s/it] 55% 83/150 [1:14:15<59:57, 53.70s/it]   56% 84/150 [1:15:09<59:04, 53.70s/it] 57% 85/150 [1:16:03<58:10, 53.70s/it] 57% 86/150 [1:16:57<57:16, 53.70s/it] 58% 87/150 [1:17:50<56:23, 53.71s/it] 59% 88/150 [1:18:44<55:29, 53.70s/it] 59% 89/150 [1:19:38<54:35, 53.70s/it] 60% 90/150 [1:20:31<53:41, 53.70s/it] 61% 91/150 [1:21:25<52:48, 53.70s/it] 61% 92/150 [1:22:19<51:54, 53.70s/it] 62% 93/150 [1:23:12<51:01, 53.71s/it] 63% 94/150 [1:24:06<50:07, 53.71s/it] 63% 95/150 [1:25:00<49:14, 53.71s/it] 64% 96/150 [1:25:54<48:20, 53.71s/it] 65% 97/150 [1:26:47<47:26, 53.71s/it] 65% 98/150 [1:27:41<46:33, 53.71s/it] 66% 99/150 [1:28:35<45:39, 53.71s/it] 67% 100/150 [1:29:28<44:45, 53.71s/it] 67% 101/150 [1:30:22<43:51, 53.71s/it] 68% 102/150 [1:31:16<42:58, 53.71s/it] 69% 103/150 [1:32:10<42:04, 53.71s/it] 69% 104/150 [1:33:03<41:10, 53.71s/it] 70% 105/150 [1:33:57<40:17, 53.71s/it] 71% 106/150 [1:34:51<39:23, 53.71s/it] 71% 107/150 [1:35:44<38:29, 53.71s/it] 72% 108/150 [1:36:38<37:35, 53.71s/it] 73% 109/150 [1:37:32<36:41, 53.71s/it] 73% 110/150 [1:38:26<35:48, 53.70s/it] 74% 111/150 [1:39:19<34:54, 53.71s/it] 75% 112/150 [1:40:13<34:00, 53.71s/it] 75% 113/150 [1:41:07<33:07, 53.71s/it] 76% 114/150 [1:42:00<32:13, 53.70s/it] 77% 115/150 [1:42:54<31:19, 53.71s/it] 77% 116/150 [1:43:48<30:26, 53.71s/it] 78% 117/150 [1:44:41<29:32, 53.70s/it] 79% 118/150 [1:45:35<28:38, 53.70s/it] 79% 119/150 [1:46:29<27:44, 53.70s/it] 80% 120/150 [1:47:23<26:51, 53.70s/it] 81% 121/150 [1:48:16<25:57, 53.71s/it] 81% 122/150 [1:49:10<25:03, 53.70s/it] 82% 123/150 [1:50:04<24:10, 53.70s/it] 83% 124/150 [1:50:57<23:16, 53.71s/it] 83% 125/150 [1:51:51<22:22, 53.71s/it] 84% 126/150 [1:52:45<21:29, 53.71s/it] 85% 127/150 [1:53:39<20:35, 53.71s/it] 85% 128/150 [1:54:32<19:41, 53.71s/it] 86% 129/150 [1:55:26<18:47, 53.71s/it] 87% 130/150 [1:56:20<17:54, 53.71s/it] 87% 131/150 [1:57:13<17:00, 53.71s/it] 88% 132/150 [1:58:07<16:06, 53.71s/it] 89% 133/150 [1:59:01<15:12, 53.70s/it] 89% 134/150 [1:59:54<14:19, 53.71s/it] 90% 135/150 [2:00:48<13:25, 53.72s/it] 91% 136/150 [2:01:42<12:31, 53.71s/it] 91% 137/150 [2:02:36<11:38, 53.71s/it] 92% 138/150 [2:03:29<10:44, 53.71s/it] 93% 139/150 [2:04:23<09:50, 53.71s/it] 93% 140/150 [2:05:17<08:57, 53.71s/it] 94% 141/150 [2:06:10<08:03, 53.71s/it] 95% 142/150 [2:07:04<07:09, 53.71s/it] 95% 143/150 [2:07:58<06:15, 53.70s/it] 96% 144/150 [2:08:52<05:22, 53.71s/it] 97% 145/150 [2:09:45<04:28, 53.71s/it] 97% 146/150 [2:10:39<03:34, 53.70s/it] 98% 147/150 [2:11:33<02:41, 53.70s/it] 99% 148/150 [2:12:26<01:47, 53.70s/it] 99% 149/150 [2:13:20<00:53, 53.70s/it]100% 150/150 [2:14:14<00:00, 53.70s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6b09d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x75198c0] Warning: data is not aligned! This can lead to a speed loss
120.18076490280063 (1014, 1352, 3)
120.23320553668756 (1014, 1352, 3)
120.26617663363794 (1014, 1352, 3)
120.29536270322001 (1014, 1352, 3)
120.29805114978078 (1014, 1352, 3)
120.31367949301494 (1014, 1352, 3)
120.3379362981377 (1014, 1352, 3)
120.34436284521628 (1014, 1352, 3)
120.35568340083019 (1014, 1352, 3)
120.35617747005435 (1014, 1352, 3)
120.37325081988259 (1014, 1352, 3)
120.36640728032398 (1014, 1352, 3)
120.38081990204202 (1014, 1352, 3)
120.38430099903131 (1014, 1352, 3)
120.40102713879455 (1014, 1352, 3)
120.4021689444425 (1014, 1352, 3)
120.41261539628631 (1014, 1352, 3)
120.41683443623589 (1014, 1352, 3)
120.41804626744317 (1014, 1352, 3)
120.41587401623815 (1014, 1352, 3)
120.40911144373251 (1014, 1352, 3)
120.416744715988 (1014, 1352, 3)
120.41393712871864 (1014, 1352, 3)
120.42112204287898 (1014, 1352, 3)
120.41389311959976 (1014, 1352, 3)
120.42158401705511 (1014, 1352, 3)
120.41757943038098 (1014, 1352, 3)
120.42909985061215 (1014, 1352, 3)
120.4393082641831 (1014, 1352, 3)
120.44977149298383 (1014, 1352, 3)
120.44991227353539 (1014, 1352, 3)
120.44232860271777 (1014, 1352, 3)
120.44597649669907 (1014, 1352, 3)
120.43914025146957 (1014, 1352, 3)
120.44743366050831 (1014, 1352, 3)
120.44339211590008 (1014, 1352, 3)
120.45331094460589 (1014, 1352, 3)
120.4417810417469 (1014, 1352, 3)
120.44301913253894 (1014, 1352, 3)
120.44061054507117 (1014, 1352, 3)
120.44530687728799 (1014, 1352, 3)
120.44469269477804 (1014, 1352, 3)
120.44113476418893 (1014, 1352, 3)
120.44787958716043 (1014, 1352, 3)
120.44300746161238 (1014, 1352, 3)
120.44962050037152 (1014, 1352, 3)
120.44032217592755 (1014, 1352, 3)
120.44203245295644 (1014, 1352, 3)
120.42517817614541 (1014, 1352, 3)
120.42616655773801 (1014, 1352, 3)
120.42325344584107 (1014, 1352, 3)
120.43322625258219 (1014, 1352, 3)
120.4320584304938 (1014, 1352, 3)
120.43117387151867 (1014, 1352, 3)
120.42996617376454 (1014, 1352, 3)
120.42473006119455 (1014, 1352, 3)
120.43158284023669 (1014, 1352, 3)
120.43039532345973 (1014, 1352, 3)
120.44168475660283 (1014, 1352, 3)
120.43080502161067 (1014, 1352, 3)
120.43434593209855 (1014, 1352, 3)
120.42558447027609 (1014, 1352, 3)
120.43182671397282 (1014, 1352, 3)
120.42956960540597 (1014, 1352, 3)
120.43264513769748 (1014, 1352, 3)
120.43301666219281 (1014, 1352, 3)
120.43082933604099 (1014, 1352, 3)
120.43430119354676 (1014, 1352, 3)
120.42836093507464 (1014, 1352, 3)
120.43520641978766 (1014, 1352, 3)
120.42497612322943 (1014, 1352, 3)
120.4319225128283 (1014, 1352, 3)
120.42607878264455 (1014, 1352, 3)
120.43680898389023 (1014, 1352, 3)
120.43521492983828 (1014, 1352, 3)
120.44066744083813 (1014, 1352, 3)
120.43772369275896 (1014, 1352, 3)
120.43429924839234 (1014, 1352, 3)
120.43713455411225 (1014, 1352, 3)
120.43412175305097 (1014, 1352, 3)
120.4449766873242 (1014, 1352, 3)
120.44026746845933 (1014, 1352, 3)
120.44860488661695 (1014, 1352, 3)
120.43849178561285 (1014, 1352, 3)
120.44682507031733 (1014, 1352, 3)
120.44327686550035 (1014, 1352, 3)
120.45009147088687 (1014, 1352, 3)
120.45162546829593 (1014, 1352, 3)
120.45408365720155 (1014, 1352, 3)
120.45602881162735 (1014, 1352, 3)
120.4509373699178 (1014, 1352, 3)
120.45644045493272 (1014, 1352, 3)
120.44913542748658 (1014, 1352, 3)
120.45657734517543 (1014, 1352, 3)
120.45210032912013 (1014, 1352, 3)
120.46341626499228 (1014, 1352, 3)
120.4623554263973 (1014, 1352, 3)
120.46882962975931 (1014, 1352, 3)
120.46750595217254 (1014, 1352, 3)
120.4689876735564 (1014, 1352, 3)
120.47434292683496 (1014, 1352, 3)
120.47843431602534 (1014, 1352, 3)
120.4927579469284 (1014, 1352, 3)
120.49449424039774 (1014, 1352, 3)
120.50423144030904 (1014, 1352, 3)
120.49555726729145 (1014, 1352, 3)
120.49674332520259 (1014, 1352, 3)
120.48969578757358 (1014, 1352, 3)
120.49464766445308 (1014, 1352, 3)
120.49780805410641 (1014, 1352, 3)
120.50057163225688 (1014, 1352, 3)
120.50550284187062 (1014, 1352, 3)
120.50350857229556 (1014, 1352, 3)
120.50801136164701 (1014, 1352, 3)
120.50021664157417 (1014, 1352, 3)
120.50955484168388 (1014, 1352, 3)
120.50703538041385 (1014, 1352, 3)
120.51586273434248 (1014, 1352, 3)
120.5066247096857 (1014, 1352, 3)
120.50734101280301 (1014, 1352, 3)
120.50230889830344 (1014, 1352, 3)
120.49703072176901 (1014, 1352, 3)
120.49497493668522 (1014, 1352, 3)
120.49396904870278 (1014, 1352, 3)
120.50396738559574 (1014, 1352, 3)
120.49886354352672 (1014, 1352, 3)
120.5087646226984 (1014, 1352, 3)
120.50514104314742 (1014, 1352, 3)
120.51225787690285 (1014, 1352, 3)
120.50645985784811 (1014, 1352, 3)
120.5126687907753 (1014, 1352, 3)
120.51486000723598 (1014, 1352, 3)
120.52010852016542 (1014, 1352, 3)
120.52217378787702 (1014, 1352, 3)
120.51800386307669 (1014, 1352, 3)
120.51690460768181 (1014, 1352, 3)
120.50717178436796 (1014, 1352, 3)
120.51578687331987 (1014, 1352, 3)
120.51031320876564 (1014, 1352, 3)
120.5219082742979 (1014, 1352, 3)
120.51529183151851 (1014, 1352, 3)
120.52021793510187 (1014, 1352, 3)
120.50714844251485 (1014, 1352, 3)
120.50337046633132 (1014, 1352, 3)
120.50106424261521 (1014, 1352, 3)
120.49868094215499 (1014, 1352, 3)
120.5050644526919 (1014, 1352, 3)
120.49935347929772 (1014, 1352, 3)
120.50974376480748 (1014, 1352, 3)
120.4943169882007 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:14:16<00:00, 53.71s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
