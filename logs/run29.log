nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=29, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_09-13-08 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:13:16, 53.67s/it]  1% 2/150 [01:46<2:11:38, 53.37s/it]  2% 3/150 [02:40<2:10:33, 53.29s/it]  3% 4/150 [03:33<2:09:35, 53.26s/it]  3% 5/150 [04:26<2:08:41, 53.25s/it]  4% 6/150 [05:19<2:07:48, 53.25s/it]  5% 7/150 [06:12<2:06:55, 53.25s/it]  5% 8/150 [07:06<2:06:03, 53.26s/it]  6% 9/150 [07:59<2:05:11, 53.27s/it]  7% 10/150 [08:52<2:04:19, 53.28s/it]  7% 11/150 [09:46<2:03:27, 53.29s/it]  8% 12/150 [10:39<2:02:35, 53.30s/it]  9% 13/150 [11:32<2:01:42, 53.31s/it]  9% 14/150 [12:26<2:00:49, 53.30s/it] 10% 15/150 [13:19<1:59:56, 53.31s/it] 11% 16/150 [14:12<1:59:04, 53.32s/it] 11% 17/150 [15:06<1:58:11, 53.32s/it] 12% 18/150 [15:59<1:57:17, 53.32s/it] 13% 19/150 [16:52<1:56:24, 53.31s/it] 13% 20/150 [17:46<1:55:31, 53.32s/it] 14% 21/150 [18:39<1:54:38, 53.33s/it] 15% 22/150 [19:32<1:53:45, 53.33s/it] 15% 23/150 [20:26<1:52:53, 53.33s/it] 16% 24/150 [21:19<1:52:00, 53.34s/it] 17% 25/150 [22:12<1:51:07, 53.34s/it] 17% 26/150 [23:06<1:50:14, 53.34s/it] 18% 27/150 [23:59<1:49:21, 53.34s/it] 19% 28/150 [24:52<1:48:27, 53.34s/it] 19% 29/150 [25:46<1:47:34, 53.34s/it] 20% 30/150 [26:39<1:46:41, 53.34s/it] 21% 31/150 [27:32<1:45:47, 53.34s/it] 21% 32/150 [28:26<1:44:53, 53.34s/it] 22% 33/150 [29:19<1:43:59, 53.33s/it] 23% 34/150 [30:12<1:43:06, 53.33s/it] 23% 35/150 [31:06<1:42:13, 53.34s/it] 24% 36/150 [31:59<1:41:20, 53.34s/it] 25% 37/150 [32:52<1:40:27, 53.34s/it] 25% 38/150 [33:46<1:39:34, 53.35s/it] 26% 39/150 [34:39<1:38:41, 53.34s/it] 27% 40/150 [35:32<1:37:48, 53.35s/it] 27% 41/150 [36:26<1:36:55, 53.35s/it] 28% 42/150 [37:19<1:36:01, 53.35s/it] 29% 43/150 [38:12<1:35:08, 53.35s/it] 29% 44/150 [39:06<1:34:15, 53.35s/it] 30% 45/150 [39:59<1:33:22, 53.36s/it] 31% 46/150 [40:52<1:32:28, 53.35s/it] 31% 47/150 [41:46<1:31:34, 53.35s/it] 32% 48/150 [42:39<1:30:41, 53.35s/it] 33% 49/150 [43:33<1:29:47, 53.34s/it] 33% 50/150 [44:26<1:28:54, 53.34s/it] 34% 51/150 [45:19<1:28:00, 53.34s/it] 35% 52/150 [46:13<1:27:07, 53.34s/it] 35% 53/150 [47:06<1:26:14, 53.34s/it] 36% 54/150 [47:59<1:25:20, 53.34s/it] 37% 55/150 [48:53<1:24:27, 53.34s/it] 37% 56/150 [49:46<1:23:34, 53.34s/it] 38% 57/150 [50:39<1:22:40, 53.34s/it] 39% 58/150 [51:33<1:21:47, 53.34s/it] 39% 59/150 [52:26<1:20:54, 53.34s/it] 40% 60/150 [53:19<1:20:00, 53.34s/it] 41% 61/150 [54:13<1:19:07, 53.34s/it] 41% 62/150 [55:06<1:18:14, 53.34s/it] 42% 63/150 [55:59<1:17:21, 53.35s/it] 43% 64/150 [56:53<1:16:27, 53.34s/it] 43% 65/150 [57:46<1:15:34, 53.35s/it] 44% 66/150 [58:39<1:14:41, 53.35s/it] 45% 67/150 [59:33<1:13:48, 53.35s/it] 45% 68/150 [1:00:26<1:12:54, 53.35s/it] 46% 69/150 [1:01:19<1:12:01, 53.35s/it] 47% 70/150 [1:02:13<1:11:08, 53.35s/it] 47% 71/150 [1:03:06<1:10:14, 53.35s/it] 48% 72/150 [1:03:59<1:09:21, 53.35s/it] 49% 73/150 [1:04:53<1:08:28, 53.35s/it] 49% 74/150 [1:05:46<1:07:34, 53.35s/it] 50% 75/150 [1:06:40<1:06:41, 53.35s/it] 51% 76/150 [1:07:33<1:05:47, 53.35s/it] 51% 77/150 [1:08:26<1:04:54, 53.34s/it] 52% 78/150 [1:09:20<1:04:00, 53.34s/it] 53% 79/150 [1:10:13<1:03:07, 53.35s/it] 53% 80/150 [1:11:06<1:02:14, 53.34s/it] 54% 81/150 [1:12:00<1:01:20, 53.34s/it] 55% 82/150 [1:12:53<1:00:27, 53.34s/it] 55% 83/150 [1:13:46<59:33, 53.34s/it]   56% 84/150 [1:14:40<58:40, 53.34s/it] 57% 85/150 [1:15:33<57:46, 53.34s/it] 57% 86/150 [1:16:26<56:53, 53.34s/it] 58% 87/150 [1:17:20<56:00, 53.34s/it] 59% 88/150 [1:18:13<55:07, 53.34s/it] 59% 89/150 [1:19:06<54:13, 53.34s/it] 60% 90/150 [1:20:00<53:20, 53.34s/it] 61% 91/150 [1:20:53<52:27, 53.35s/it] 61% 92/150 [1:21:46<51:34, 53.35s/it] 62% 93/150 [1:22:40<50:40, 53.35s/it] 63% 94/150 [1:23:33<49:47, 53.35s/it] 63% 95/150 [1:24:26<48:54, 53.35s/it] 64% 96/150 [1:25:20<48:00, 53.35s/it] 65% 97/150 [1:26:13<47:07, 53.35s/it] 65% 98/150 [1:27:06<46:13, 53.35s/it] 66% 99/150 [1:28:00<45:20, 53.35s/it] 67% 100/150 [1:28:53<44:27, 53.35s/it] 67% 101/150 [1:29:46<43:33, 53.35s/it] 68% 102/150 [1:30:40<42:40, 53.34s/it] 69% 103/150 [1:31:33<41:47, 53.34s/it] 69% 104/150 [1:32:26<40:53, 53.34s/it] 70% 105/150 [1:33:20<40:00, 53.34s/it] 71% 106/150 [1:34:13<39:06, 53.34s/it] 71% 107/150 [1:35:06<38:13, 53.34s/it] 72% 108/150 [1:36:00<37:20, 53.34s/it] 73% 109/150 [1:36:53<36:27, 53.34s/it] 73% 110/150 [1:37:47<35:33, 53.34s/it] 74% 111/150 [1:38:40<34:40, 53.34s/it] 75% 112/150 [1:39:33<33:47, 53.35s/it] 75% 113/150 [1:40:27<32:53, 53.35s/it] 76% 114/150 [1:41:20<32:00, 53.34s/it] 77% 115/150 [1:42:13<31:07, 53.35s/it] 77% 116/150 [1:43:07<30:13, 53.35s/it] 78% 117/150 [1:44:00<29:20, 53.35s/it] 79% 118/150 [1:44:53<28:27, 53.34s/it] 79% 119/150 [1:45:47<27:33, 53.34s/it] 80% 120/150 [1:46:40<26:39, 53.33s/it] 81% 121/150 [1:47:33<25:46, 53.33s/it] 81% 122/150 [1:48:27<24:53, 53.33s/it] 82% 123/150 [1:49:20<23:59, 53.33s/it] 83% 124/150 [1:50:13<23:06, 53.33s/it] 83% 125/150 [1:51:07<22:13, 53.33s/it] 84% 126/150 [1:52:00<21:20, 53.33s/it] 85% 127/150 [1:52:53<20:26, 53.34s/it] 85% 128/150 [1:53:47<19:33, 53.34s/it] 86% 129/150 [1:54:40<18:40, 53.34s/it] 87% 130/150 [1:55:33<17:46, 53.33s/it] 87% 131/150 [1:56:27<16:53, 53.33s/it] 88% 132/150 [1:57:20<15:59, 53.33s/it] 89% 133/150 [1:58:13<15:06, 53.33s/it] 89% 134/150 [1:59:07<14:13, 53.33s/it] 90% 135/150 [2:00:00<13:20, 53.33s/it] 91% 136/150 [2:00:53<12:26, 53.33s/it] 91% 137/150 [2:01:47<11:33, 53.33s/it] 92% 138/150 [2:02:40<10:40, 53.34s/it] 93% 139/150 [2:03:33<09:46, 53.34s/it] 93% 140/150 [2:04:27<08:53, 53.34s/it] 94% 141/150 [2:05:20<08:00, 53.34s/it] 95% 142/150 [2:06:13<07:06, 53.34s/it] 95% 143/150 [2:07:07<06:13, 53.33s/it] 96% 144/150 [2:08:00<05:19, 53.33s/it] 97% 145/150 [2:08:53<04:26, 53.33s/it] 97% 146/150 [2:09:47<03:33, 53.33s/it] 98% 147/150 [2:10:40<02:39, 53.33s/it] 99% 148/150 [2:11:33<01:46, 53.33s/it] 99% 149/150 [2:12:27<00:53, 53.33s/it]100% 150/150 [2:13:20<00:00, 53.32s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6f54d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x66678c0] Warning: data is not aligned! This can lead to a speed loss
121.47063983909682 (1014, 1352, 3)
121.52334987687172 (1014, 1352, 3)
121.54443851172344 (1014, 1352, 3)
121.55301810160708 (1014, 1352, 3)
121.54445334352594 (1014, 1352, 3)
121.55271368493945 (1014, 1352, 3)
121.56378599021977 (1014, 1352, 3)
121.5560031842178 (1014, 1352, 3)
121.5556340911655 (1014, 1352, 3)
121.5445022155309 (1014, 1352, 3)
121.54750626339725 (1014, 1352, 3)
121.53168534987492 (1014, 1352, 3)
121.54503178382332 (1014, 1352, 3)
121.54224753840707 (1014, 1352, 3)
121.55442201681392 (1014, 1352, 3)
121.55254688794743 (1014, 1352, 3)
121.56807943232613 (1014, 1352, 3)
121.5726743733685 (1014, 1352, 3)
121.57400388641854 (1014, 1352, 3)
121.57167796801389 (1014, 1352, 3)
121.56429270294768 (1014, 1352, 3)
121.56756031923875 (1014, 1352, 3)
121.56208714097312 (1014, 1352, 3)
121.57349449910329 (1014, 1352, 3)
121.56708910557909 (1014, 1352, 3)
121.57244435885765 (1014, 1352, 3)
121.56413003940882 (1014, 1352, 3)
121.57643362744068 (1014, 1352, 3)
121.58497990655478 (1014, 1352, 3)
121.59520096362951 (1014, 1352, 3)
121.59455711751455 (1014, 1352, 3)
121.58752927457411 (1014, 1352, 3)
121.5857499445631 (1014, 1352, 3)
121.57626002240818 (1014, 1352, 3)
121.58558995561158 (1014, 1352, 3)
121.58270310329937 (1014, 1352, 3)
121.59249233609157 (1014, 1352, 3)
121.57943645958552 (1014, 1352, 3)
121.5813329851507 (1014, 1352, 3)
121.57723600364133 (1014, 1352, 3)
121.58213536135133 (1014, 1352, 3)
121.58391469136235 (1014, 1352, 3)
121.58421375885531 (1014, 1352, 3)
121.59011487109461 (1014, 1352, 3)
121.58575091714032 (1014, 1352, 3)
121.595969542772 (1014, 1352, 3)
121.59130506245891 (1014, 1352, 3)
121.59578450995724 (1014, 1352, 3)
121.57912572116601 (1014, 1352, 3)
121.58209791712864 (1014, 1352, 3)
121.57634560920292 (1014, 1352, 3)
121.58531033966287 (1014, 1352, 3)
121.58586397924131 (1014, 1352, 3)
121.587912469996 (1014, 1352, 3)
121.58464825772518 (1014, 1352, 3)
121.57555709222756 (1014, 1352, 3)
121.58166852428914 (1014, 1352, 3)
121.5800897883283 (1014, 1352, 3)
121.58998940863415 (1014, 1352, 3)
121.57925264249229 (1014, 1352, 3)
121.58505382242296 (1014, 1352, 3)
121.57413494119798 (1014, 1352, 3)
121.5782365424491 (1014, 1352, 3)
121.5774305190839 (1014, 1352, 3)
121.58431369116394 (1014, 1352, 3)
121.58410872051633 (1014, 1352, 3)
121.5804141428288 (1014, 1352, 3)
121.58595126804617 (1014, 1352, 3)
121.58207846558439 (1014, 1352, 3)
121.58989531178881 (1014, 1352, 3)
121.5819141000354 (1014, 1352, 3)
121.5925178662434 (1014, 1352, 3)
121.58553670700917 (1014, 1352, 3)
121.5956532120335 (1014, 1352, 3)
121.59701263183284 (1014, 1352, 3)
121.60774526452155 (1014, 1352, 3)
121.6058348797311 (1014, 1352, 3)
121.60195089263136 (1014, 1352, 3)
121.60658303475213 (1014, 1352, 3)
121.60496563884706 (1014, 1352, 3)
121.61543737769841 (1014, 1352, 3)
121.61041036922921 (1014, 1352, 3)
121.62148826682851 (1014, 1352, 3)
121.60875479966855 (1014, 1352, 3)
121.61390629802099 (1014, 1352, 3)
121.60859408128411 (1014, 1352, 3)
121.61775089574361 (1014, 1352, 3)
121.61870791172112 (1014, 1352, 3)
121.6210963182117 (1014, 1352, 3)
121.62352654552245 (1014, 1352, 3)
121.6186772755389 (1014, 1352, 3)
121.62264952402072 (1014, 1352, 3)
121.61631245404573 (1014, 1352, 3)
121.62621742352626 (1014, 1352, 3)
121.62239519507953 (1014, 1352, 3)
121.63175381931072 (1014, 1352, 3)
121.62907996140814 (1014, 1352, 3)
121.63805903738198 (1014, 1352, 3)
121.63757615279577 (1014, 1352, 3)
121.63919598014387 (1014, 1352, 3)
121.64641323249653 (1014, 1352, 3)
121.65164496846904 (1014, 1352, 3)
121.66492672603277 (1014, 1352, 3)
121.66603789549852 (1014, 1352, 3)
121.67868601900805 (1014, 1352, 3)
121.6724347789721 (1014, 1352, 3)
121.67323034713226 (1014, 1352, 3)
121.66473148115729 (1014, 1352, 3)
121.67124920734958 (1014, 1352, 3)
121.67251209886052 (1014, 1352, 3)
121.67500578683442 (1014, 1352, 3)
121.68226802088317 (1014, 1352, 3)
121.6804159907255 (1014, 1352, 3)
121.68056771277071 (1014, 1352, 3)
121.66926442040234 (1014, 1352, 3)
121.67888320903796 (1014, 1352, 3)
121.67612862722672 (1014, 1352, 3)
121.68470773082176 (1014, 1352, 3)
121.67743722986668 (1014, 1352, 3)
121.6816295239429 (1014, 1352, 3)
121.67483996241961 (1014, 1352, 3)
121.67095330073255 (1014, 1352, 3)
121.67133187641267 (1014, 1352, 3)
121.67316445502608 (1014, 1352, 3)
121.68038097794584 (1014, 1352, 3)
121.67530777205903 (1014, 1352, 3)
121.68517335216242 (1014, 1352, 3)
121.6829631704461 (1014, 1352, 3)
121.68891412726757 (1014, 1352, 3)
121.68103017323546 (1014, 1352, 3)
121.68870769775413 (1014, 1352, 3)
121.6880502355582 (1014, 1352, 3)
121.69428032203977 (1014, 1352, 3)
121.69759972806742 (1014, 1352, 3)
121.69739013767803 (1014, 1352, 3)
121.69401407902774 (1014, 1352, 3)
121.68383216818583 (1014, 1352, 3)
121.69188024462262 (1014, 1352, 3)
121.6897607557314 (1014, 1352, 3)
121.70200234196592 (1014, 1352, 3)
121.69549385525717 (1014, 1352, 3)
121.70198629444191 (1014, 1352, 3)
121.68496351862875 (1014, 1352, 3)
121.6804232850546 (1014, 1352, 3)
121.67662877505845 (1014, 1352, 3)
121.67915066777151 (1014, 1352, 3)
121.68209028239752 (1014, 1352, 3)
121.67702582970563 (1014, 1352, 3)
121.68546269388327 (1014, 1352, 3)
121.67262540410583 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:13:23<00:00, 53.35s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
