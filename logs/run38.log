nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=38, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_15-15-02 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:14:04, 53.99s/it]  1% 2/150 [01:47<2:12:26, 53.69s/it]  2% 3/150 [02:41<2:11:22, 53.62s/it]  3% 4/150 [03:34<2:10:23, 53.58s/it]  3% 5/150 [04:28<2:09:27, 53.57s/it]  4% 6/150 [05:21<2:08:34, 53.57s/it]  5% 7/150 [06:15<2:07:39, 53.57s/it]  5% 8/150 [07:08<2:06:46, 53.57s/it]  6% 9/150 [08:02<2:05:54, 53.58s/it]  7% 10/150 [08:55<2:05:01, 53.58s/it]  7% 11/150 [09:49<2:04:09, 53.59s/it]  8% 12/150 [10:43<2:03:16, 53.60s/it]  9% 13/150 [11:36<2:02:23, 53.60s/it]  9% 14/150 [12:30<2:01:29, 53.60s/it] 10% 15/150 [13:24<2:00:36, 53.60s/it] 11% 16/150 [14:17<1:59:43, 53.61s/it] 11% 17/150 [15:11<1:58:50, 53.61s/it] 12% 18/150 [16:04<1:57:56, 53.61s/it] 13% 19/150 [16:58<1:57:03, 53.61s/it] 13% 20/150 [17:52<1:56:09, 53.61s/it] 14% 21/150 [18:45<1:55:15, 53.61s/it] 15% 22/150 [19:39<1:54:22, 53.61s/it] 15% 23/150 [20:32<1:53:29, 53.62s/it] 16% 24/150 [21:26<1:52:36, 53.62s/it] 17% 25/150 [22:20<1:51:42, 53.62s/it] 17% 26/150 [23:13<1:50:49, 53.62s/it] 18% 27/150 [24:07<1:49:55, 53.62s/it] 19% 28/150 [25:01<1:49:01, 53.62s/it] 19% 29/150 [25:54<1:48:08, 53.62s/it] 20% 30/150 [26:48<1:47:15, 53.63s/it] 21% 31/150 [27:41<1:46:22, 53.63s/it] 21% 32/150 [28:35<1:45:28, 53.63s/it] 22% 33/150 [29:29<1:44:33, 53.62s/it] 23% 34/150 [30:22<1:43:40, 53.62s/it] 23% 35/150 [31:16<1:42:47, 53.63s/it] 24% 36/150 [32:10<1:41:53, 53.63s/it] 25% 37/150 [33:03<1:41:00, 53.63s/it] 25% 38/150 [33:57<1:40:06, 53.63s/it] 26% 39/150 [34:51<1:39:12, 53.63s/it] 27% 40/150 [35:44<1:38:18, 53.63s/it] 27% 41/150 [36:38<1:37:25, 53.63s/it] 28% 42/150 [37:31<1:36:32, 53.63s/it] 29% 43/150 [38:25<1:35:39, 53.64s/it] 29% 44/150 [39:19<1:34:45, 53.64s/it] 30% 45/150 [40:12<1:33:52, 53.64s/it] 31% 46/150 [41:06<1:32:58, 53.64s/it] 31% 47/150 [42:00<1:32:04, 53.63s/it] 32% 48/150 [42:53<1:31:10, 53.63s/it] 33% 49/150 [43:47<1:30:17, 53.64s/it] 33% 50/150 [44:41<1:29:23, 53.64s/it] 34% 51/150 [45:34<1:28:30, 53.64s/it] 35% 52/150 [46:28<1:27:36, 53.63s/it] 35% 53/150 [47:21<1:26:42, 53.64s/it] 36% 54/150 [48:15<1:25:49, 53.64s/it] 37% 55/150 [49:09<1:24:55, 53.64s/it] 37% 56/150 [50:02<1:24:02, 53.64s/it] 38% 57/150 [50:56<1:23:08, 53.64s/it] 39% 58/150 [51:50<1:22:15, 53.64s/it] 39% 59/150 [52:43<1:21:22, 53.65s/it] 40% 60/150 [53:37<1:20:28, 53.65s/it] 41% 61/150 [54:31<1:19:34, 53.65s/it] 41% 62/150 [55:24<1:18:40, 53.65s/it] 42% 63/150 [56:18<1:17:47, 53.65s/it] 43% 64/150 [57:12<1:16:53, 53.65s/it] 43% 65/150 [58:05<1:16:00, 53.65s/it] 44% 66/150 [58:59<1:15:06, 53.65s/it] 45% 67/150 [59:52<1:14:12, 53.65s/it] 45% 68/150 [1:00:46<1:13:19, 53.65s/it] 46% 69/150 [1:01:40<1:12:25, 53.64s/it] 47% 70/150 [1:02:33<1:11:31, 53.64s/it] 47% 71/150 [1:03:27<1:10:38, 53.65s/it] 48% 72/150 [1:04:21<1:09:44, 53.65s/it] 49% 73/150 [1:05:14<1:08:51, 53.65s/it] 49% 74/150 [1:06:08<1:07:58, 53.66s/it] 50% 75/150 [1:07:02<1:07:04, 53.66s/it] 51% 76/150 [1:07:55<1:06:10, 53.66s/it] 51% 77/150 [1:08:49<1:05:16, 53.66s/it] 52% 78/150 [1:09:43<1:04:22, 53.65s/it] 53% 79/150 [1:10:36<1:03:29, 53.65s/it] 53% 80/150 [1:11:30<1:02:35, 53.65s/it] 54% 81/150 [1:12:24<1:01:41, 53.65s/it] 55% 82/150 [1:13:17<1:00:48, 53.65s/it] 55% 83/150 [1:14:11<59:54, 53.65s/it]   56% 84/150 [1:15:05<59:01, 53.66s/it] 57% 85/150 [1:15:58<58:07, 53.65s/it] 57% 86/150 [1:16:52<57:14, 53.66s/it] 58% 87/150 [1:17:46<56:20, 53.65s/it] 59% 88/150 [1:18:39<55:26, 53.65s/it] 59% 89/150 [1:19:33<54:33, 53.66s/it] 60% 90/150 [1:20:27<53:39, 53.66s/it] 61% 91/150 [1:21:20<52:45, 53.65s/it] 61% 92/150 [1:22:14<51:51, 53.65s/it] 62% 93/150 [1:23:07<50:58, 53.65s/it] 63% 94/150 [1:24:01<50:05, 53.66s/it] 63% 95/150 [1:24:55<49:11, 53.66s/it] 64% 96/150 [1:25:48<48:17, 53.66s/it] 65% 97/150 [1:26:42<47:23, 53.66s/it] 65% 98/150 [1:27:36<46:30, 53.66s/it] 66% 99/150 [1:28:29<45:37, 53.67s/it] 67% 100/150 [1:29:23<44:43, 53.66s/it] 67% 101/150 [1:30:17<43:49, 53.66s/it] 68% 102/150 [1:31:10<42:56, 53.67s/it] 69% 103/150 [1:32:04<42:02, 53.67s/it] 69% 104/150 [1:32:58<41:08, 53.67s/it] 70% 105/150 [1:33:51<40:15, 53.67s/it] 71% 106/150 [1:34:45<39:21, 53.67s/it] 71% 107/150 [1:35:39<38:27, 53.67s/it] 72% 108/150 [1:36:32<37:34, 53.67s/it] 73% 109/150 [1:37:26<36:40, 53.66s/it] 73% 110/150 [1:38:20<35:46, 53.66s/it] 74% 111/150 [1:39:13<34:52, 53.66s/it] 75% 112/150 [1:40:07<33:59, 53.67s/it] 75% 113/150 [1:41:01<33:05, 53.67s/it] 76% 114/150 [1:41:54<32:12, 53.67s/it] 77% 115/150 [1:42:48<31:18, 53.67s/it] 77% 116/150 [1:43:42<30:24, 53.67s/it] 78% 117/150 [1:44:35<29:30, 53.66s/it] 79% 118/150 [1:45:29<28:37, 53.67s/it] 79% 119/150 [1:46:23<27:43, 53.67s/it] 80% 120/150 [1:47:16<26:50, 53.67s/it] 81% 121/150 [1:48:10<25:56, 53.67s/it] 81% 122/150 [1:49:04<25:02, 53.67s/it] 82% 123/150 [1:49:58<24:09, 53.67s/it] 83% 124/150 [1:50:51<23:15, 53.67s/it] 83% 125/150 [1:51:45<22:21, 53.68s/it] 84% 126/150 [1:52:39<21:28, 53.68s/it] 85% 127/150 [1:53:32<20:34, 53.68s/it] 85% 128/150 [1:54:26<19:40, 53.68s/it] 86% 129/150 [1:55:20<18:47, 53.68s/it] 87% 130/150 [1:56:13<17:53, 53.68s/it] 87% 131/150 [1:57:07<16:59, 53.67s/it] 88% 132/150 [1:58:01<16:06, 53.67s/it] 89% 133/150 [1:58:54<15:12, 53.67s/it] 89% 134/150 [1:59:48<14:18, 53.67s/it] 90% 135/150 [2:00:42<13:25, 53.67s/it] 91% 136/150 [2:01:35<12:31, 53.67s/it] 91% 137/150 [2:02:29<11:37, 53.67s/it] 92% 138/150 [2:03:23<10:44, 53.67s/it] 93% 139/150 [2:04:16<09:50, 53.67s/it] 93% 140/150 [2:05:10<08:56, 53.67s/it] 94% 141/150 [2:06:04<08:03, 53.67s/it] 95% 142/150 [2:06:57<07:09, 53.67s/it] 95% 143/150 [2:07:51<06:15, 53.67s/it] 96% 144/150 [2:08:45<05:22, 53.67s/it] 97% 145/150 [2:09:38<04:28, 53.67s/it] 97% 146/150 [2:10:32<03:34, 53.68s/it] 98% 147/150 [2:11:26<02:41, 53.68s/it] 99% 148/150 [2:12:19<01:47, 53.67s/it] 99% 149/150 [2:13:13<00:53, 53.67s/it]100% 150/150 [2:14:07<00:00, 53.68s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x735ad80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x59e38c0] Warning: data is not aligned! This can lead to a speed loss
120.14077520239331 (1014, 1352, 3)
120.19280784013942 (1014, 1352, 3)
120.22729445553182 (1014, 1352, 3)
120.26056389054227 (1014, 1352, 3)
120.26335761858634 (1014, 1352, 3)
120.27852131305704 (1014, 1352, 3)
120.30362863695248 (1014, 1352, 3)
120.31272369275896 (1014, 1352, 3)
120.32633928745103 (1014, 1352, 3)
120.32776605822237 (1014, 1352, 3)
120.3451251026069 (1014, 1352, 3)
120.33751006617415 (1014, 1352, 3)
120.35085601383393 (1014, 1352, 3)
120.35384887706235 (1014, 1352, 3)
120.37030998953507 (1014, 1352, 3)
120.37179292664045 (1014, 1352, 3)
120.38255449350125 (1014, 1352, 3)
120.38661451707651 (1014, 1352, 3)
120.38698190811868 (1014, 1352, 3)
120.38502459647772 (1014, 1352, 3)
120.3778639967477 (1014, 1352, 3)
120.38555951394481 (1014, 1352, 3)
120.38179661270809 (1014, 1352, 3)
120.38853025104163 (1014, 1352, 3)
120.38027452936988 (1014, 1352, 3)
120.38677377659512 (1014, 1352, 3)
120.38234101280301 (1014, 1352, 3)
120.39437860096713 (1014, 1352, 3)
120.40544166676392 (1014, 1352, 3)
120.41578842944341 (1014, 1352, 3)
120.4140319549969 (1014, 1352, 3)
120.40705030947407 (1014, 1352, 3)
120.41040253998266 (1014, 1352, 3)
120.40389891615996 (1014, 1352, 3)
120.41080299865007 (1014, 1352, 3)
120.40548373072838 (1014, 1352, 3)
120.41574344774732 (1014, 1352, 3)
120.40401416655968 (1014, 1352, 3)
120.40643564067551 (1014, 1352, 3)
120.40391593626119 (1014, 1352, 3)
120.40857774198693 (1014, 1352, 3)
120.4066909421939 (1014, 1352, 3)
120.4050329411902 (1014, 1352, 3)
120.4117629323592 (1014, 1352, 3)
120.40846735447327 (1014, 1352, 3)
120.41496173881245 (1014, 1352, 3)
120.40577574703656 (1014, 1352, 3)
120.40716945018265 (1014, 1352, 3)
120.3894921299052 (1014, 1352, 3)
120.39239600231862 (1014, 1352, 3)
120.38917434030088 (1014, 1352, 3)
120.39953253076261 (1014, 1352, 3)
120.39727979879322 (1014, 1352, 3)
120.39851156783337 (1014, 1352, 3)
120.39729560317294 (1014, 1352, 3)
120.3933967842707 (1014, 1352, 3)
120.40051021400589 (1014, 1352, 3)
120.40029138413298 (1014, 1352, 3)
120.41096955249778 (1014, 1352, 3)
120.40079396340775 (1014, 1352, 3)
120.40432660698933 (1014, 1352, 3)
120.3955525016631 (1014, 1352, 3)
120.40018464378387 (1014, 1352, 3)
120.3965396675342 (1014, 1352, 3)
120.39938494217056 (1014, 1352, 3)
120.40011607709036 (1014, 1352, 3)
120.39961738812444 (1014, 1352, 3)
120.40311769351369 (1014, 1352, 3)
120.39720491034784 (1014, 1352, 3)
120.4022212204677 (1014, 1352, 3)
120.39162012884702 (1014, 1352, 3)
120.39715287746694 (1014, 1352, 3)
120.3922357702228 (1014, 1352, 3)
120.4025917723858 (1014, 1352, 3)
120.40066217919541 (1014, 1352, 3)
120.40536775089575 (1014, 1352, 3)
120.40167049862089 (1014, 1352, 3)
120.39901049994359 (1014, 1352, 3)
120.4013548973153 (1014, 1352, 3)
120.39857527164081 (1014, 1352, 3)
120.40911217316543 (1014, 1352, 3)
120.40419385019976 (1014, 1352, 3)
120.41126327081606 (1014, 1352, 3)
120.40058461616267 (1014, 1352, 3)
120.40956612357955 (1014, 1352, 3)
120.40624307038736 (1014, 1352, 3)
120.4127197051924 (1014, 1352, 3)
120.41310241432568 (1014, 1352, 3)
120.41630195021183 (1014, 1352, 3)
120.417369353703 (1014, 1352, 3)
120.41327966652273 (1014, 1352, 3)
120.41874798190229 (1014, 1352, 3)
120.41194723574104 (1014, 1352, 3)
120.41779655824377 (1014, 1352, 3)
120.41361520566117 (1014, 1352, 3)
120.42592876260946 (1014, 1352, 3)
120.42478087835393 (1014, 1352, 3)
120.43130565573101 (1014, 1352, 3)
120.42955696190221 (1014, 1352, 3)
120.43102263576205 (1014, 1352, 3)
120.43502770872479 (1014, 1352, 3)
120.4397984430984 (1014, 1352, 3)
120.45393217830063 (1014, 1352, 3)
120.4557236655268 (1014, 1352, 3)
120.46358257569568 (1014, 1352, 3)
120.45471729125575 (1014, 1352, 3)
120.45580317371396 (1014, 1352, 3)
120.44874858490016 (1014, 1352, 3)
120.45310135421651 (1014, 1352, 3)
120.45589848628083 (1014, 1352, 3)
120.45873500772227 (1014, 1352, 3)
120.46318843878015 (1014, 1352, 3)
120.46220151605336 (1014, 1352, 3)
120.46633618492972 (1014, 1352, 3)
120.45905522876961 (1014, 1352, 3)
120.46786580574131 (1014, 1352, 3)
120.46532689292702 (1014, 1352, 3)
120.4746626615937 (1014, 1352, 3)
120.46588320709282 (1014, 1352, 3)
120.46567726386797 (1014, 1352, 3)
120.45984350260068 (1014, 1352, 3)
120.45391175417916 (1014, 1352, 3)
120.45171543168811 (1014, 1352, 3)
120.45056511598956 (1014, 1352, 3)
120.46143950180705 (1014, 1352, 3)
120.45750737213527 (1014, 1352, 3)
120.46568066788822 (1014, 1352, 3)
120.46160338106742 (1014, 1352, 3)
120.4672912557528 (1014, 1352, 3)
120.46195812860583 (1014, 1352, 3)
120.46733842574763 (1014, 1352, 3)
120.46910875941941 (1014, 1352, 3)
120.47559925344973 (1014, 1352, 3)
120.47797647530237 (1014, 1352, 3)
120.47436553925516 (1014, 1352, 3)
120.47252299172531 (1014, 1352, 3)
120.46401415683391 (1014, 1352, 3)
120.47147503977841 (1014, 1352, 3)
120.4665158685698 (1014, 1352, 3)
120.47755218849325 (1014, 1352, 3)
120.47106509848317 (1014, 1352, 3)
120.47490993935008 (1014, 1352, 3)
120.46170939198363 (1014, 1352, 3)
120.45841746126224 (1014, 1352, 3)
120.45513331115858 (1014, 1352, 3)
120.45258929231392 (1014, 1352, 3)
120.45846803527732 (1014, 1352, 3)
120.45443767530705 (1014, 1352, 3)
120.46369272006504 (1014, 1352, 3)
120.44800966936265 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:14:09<00:00, 53.67s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
