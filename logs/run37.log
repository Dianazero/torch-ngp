nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=37, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_15-14-49 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:54<2:14:15, 54.06s/it]  1% 2/150 [01:47<2:12:34, 53.75s/it]  2% 3/150 [02:41<2:11:32, 53.69s/it]  3% 4/150 [03:34<2:10:34, 53.66s/it]  3% 5/150 [04:28<2:09:37, 53.64s/it]  4% 6/150 [05:22<2:08:42, 53.63s/it]  5% 7/150 [06:15<2:07:47, 53.62s/it]  5% 8/150 [07:09<2:06:55, 53.63s/it]  6% 9/150 [08:02<2:06:03, 53.64s/it]  7% 10/150 [08:56<2:05:10, 53.64s/it]  7% 11/150 [09:50<2:04:17, 53.65s/it]  8% 12/150 [10:43<2:03:23, 53.65s/it]  9% 13/150 [11:37<2:02:29, 53.65s/it]  9% 14/150 [12:31<2:01:35, 53.64s/it] 10% 15/150 [13:24<2:00:41, 53.64s/it] 11% 16/150 [14:18<1:59:48, 53.65s/it] 11% 17/150 [15:12<1:58:54, 53.65s/it] 12% 18/150 [16:05<1:58:01, 53.65s/it] 13% 19/150 [16:59<1:57:07, 53.65s/it] 13% 20/150 [17:53<1:56:14, 53.65s/it] 14% 21/150 [18:46<1:55:20, 53.64s/it] 15% 22/150 [19:40<1:54:27, 53.66s/it] 15% 23/150 [20:34<1:53:33, 53.65s/it] 16% 24/150 [21:27<1:52:40, 53.65s/it] 17% 25/150 [22:21<1:51:47, 53.66s/it] 17% 26/150 [23:15<1:50:54, 53.67s/it] 18% 27/150 [24:08<1:50:00, 53.66s/it] 19% 28/150 [25:02<1:49:05, 53.66s/it] 19% 29/150 [25:55<1:48:12, 53.65s/it] 20% 30/150 [26:49<1:47:19, 53.66s/it] 21% 31/150 [27:43<1:46:25, 53.66s/it] 21% 32/150 [28:37<1:45:32, 53.66s/it] 22% 33/150 [29:30<1:44:38, 53.66s/it] 23% 34/150 [30:24<1:43:44, 53.66s/it] 23% 35/150 [31:17<1:42:50, 53.66s/it] 24% 36/150 [32:11<1:41:57, 53.66s/it] 25% 37/150 [33:05<1:41:03, 53.66s/it] 25% 38/150 [33:58<1:40:10, 53.66s/it] 26% 39/150 [34:52<1:39:15, 53.66s/it] 27% 40/150 [35:46<1:38:21, 53.65s/it] 27% 41/150 [36:39<1:37:28, 53.65s/it] 28% 42/150 [37:33<1:36:35, 53.66s/it] 29% 43/150 [38:27<1:35:41, 53.66s/it] 29% 44/150 [39:20<1:34:48, 53.66s/it] 30% 45/150 [40:14<1:33:54, 53.66s/it] 31% 46/150 [41:08<1:33:00, 53.66s/it] 31% 47/150 [42:01<1:32:06, 53.66s/it] 32% 48/150 [42:55<1:31:13, 53.66s/it] 33% 49/150 [43:49<1:30:19, 53.65s/it] 33% 50/150 [44:42<1:29:25, 53.66s/it] 34% 51/150 [45:36<1:28:31, 53.66s/it] 35% 52/150 [46:30<1:27:38, 53.66s/it] 35% 53/150 [47:23<1:26:44, 53.66s/it] 36% 54/150 [48:17<1:25:50, 53.66s/it] 37% 55/150 [49:11<1:24:57, 53.66s/it] 37% 56/150 [50:04<1:24:04, 53.66s/it] 38% 57/150 [50:58<1:23:11, 53.67s/it] 39% 58/150 [51:52<1:22:17, 53.67s/it] 39% 59/150 [52:45<1:21:24, 53.68s/it] 40% 60/150 [53:39<1:20:30, 53.68s/it] 41% 61/150 [54:33<1:19:37, 53.68s/it] 41% 62/150 [55:26<1:18:43, 53.68s/it] 42% 63/150 [56:20<1:17:49, 53.67s/it] 43% 64/150 [57:14<1:16:56, 53.68s/it] 43% 65/150 [58:07<1:16:02, 53.68s/it] 44% 66/150 [59:01<1:15:09, 53.69s/it] 45% 67/150 [59:55<1:14:15, 53.68s/it] 45% 68/150 [1:00:48<1:13:21, 53.68s/it] 46% 69/150 [1:01:42<1:12:27, 53.68s/it] 47% 70/150 [1:02:36<1:11:34, 53.68s/it] 47% 71/150 [1:03:30<1:10:40, 53.68s/it] 48% 72/150 [1:04:23<1:09:47, 53.68s/it] 49% 73/150 [1:05:17<1:08:53, 53.68s/it] 49% 74/150 [1:06:11<1:07:59, 53.67s/it] 50% 75/150 [1:07:04<1:07:05, 53.67s/it] 51% 76/150 [1:07:58<1:06:11, 53.67s/it] 51% 77/150 [1:08:52<1:05:18, 53.67s/it] 52% 78/150 [1:09:45<1:04:24, 53.68s/it] 53% 79/150 [1:10:39<1:03:31, 53.68s/it] 53% 80/150 [1:11:33<1:02:37, 53.67s/it] 54% 81/150 [1:12:26<1:01:42, 53.67s/it] 55% 82/150 [1:13:20<1:00:50, 53.68s/it] 55% 83/150 [1:14:14<59:56, 53.67s/it]   56% 84/150 [1:15:07<59:02, 53.68s/it] 57% 85/150 [1:16:01<58:08, 53.67s/it] 57% 86/150 [1:16:55<57:14, 53.67s/it] 58% 87/150 [1:17:48<56:21, 53.67s/it] 59% 88/150 [1:18:42<55:27, 53.67s/it] 59% 89/150 [1:19:36<54:34, 53.68s/it] 60% 90/150 [1:20:29<53:40, 53.68s/it] 61% 91/150 [1:21:23<52:46, 53.68s/it] 61% 92/150 [1:22:17<51:53, 53.67s/it] 62% 93/150 [1:23:10<50:59, 53.67s/it] 63% 94/150 [1:24:04<50:05, 53.67s/it] 63% 95/150 [1:24:58<49:11, 53.67s/it] 64% 96/150 [1:25:51<48:18, 53.67s/it] 65% 97/150 [1:26:45<47:24, 53.67s/it] 65% 98/150 [1:27:39<46:30, 53.67s/it] 66% 99/150 [1:28:32<45:37, 53.67s/it] 67% 100/150 [1:29:26<44:43, 53.67s/it] 67% 101/150 [1:30:20<43:50, 53.68s/it] 68% 102/150 [1:31:13<42:56, 53.67s/it] 69% 103/150 [1:32:07<42:02, 53.67s/it] 69% 104/150 [1:33:01<41:09, 53.68s/it] 70% 105/150 [1:33:54<40:15, 53.68s/it] 71% 106/150 [1:34:48<39:21, 53.68s/it] 71% 107/150 [1:35:42<38:28, 53.67s/it] 72% 108/150 [1:36:35<37:34, 53.68s/it] 73% 109/150 [1:37:29<36:40, 53.68s/it] 73% 110/150 [1:38:23<35:47, 53.68s/it] 74% 111/150 [1:39:16<34:53, 53.68s/it] 75% 112/150 [1:40:10<34:00, 53.68s/it] 75% 113/150 [1:41:04<33:06, 53.68s/it] 76% 114/150 [1:41:58<32:12, 53.68s/it] 77% 115/150 [1:42:51<31:18, 53.68s/it] 77% 116/150 [1:43:45<30:25, 53.68s/it] 78% 117/150 [1:44:39<29:31, 53.68s/it] 79% 118/150 [1:45:32<28:37, 53.68s/it] 79% 119/150 [1:46:26<27:44, 53.68s/it] 80% 120/150 [1:47:20<26:50, 53.68s/it] 81% 121/150 [1:48:13<25:56, 53.68s/it] 81% 122/150 [1:49:07<25:02, 53.68s/it] 82% 123/150 [1:50:01<24:09, 53.68s/it] 83% 124/150 [1:50:54<23:15, 53.68s/it] 83% 125/150 [1:51:48<22:22, 53.69s/it] 84% 126/150 [1:52:42<21:28, 53.69s/it] 85% 127/150 [1:53:35<20:34, 53.69s/it] 85% 128/150 [1:54:29<19:41, 53.69s/it] 86% 129/150 [1:55:23<18:47, 53.69s/it] 87% 130/150 [1:56:17<17:53, 53.70s/it] 87% 131/150 [1:57:10<17:00, 53.70s/it] 88% 132/150 [1:58:04<16:06, 53.71s/it] 89% 133/150 [1:58:58<15:12, 53.71s/it] 89% 134/150 [1:59:51<14:19, 53.70s/it] 90% 135/150 [2:00:45<13:25, 53.70s/it] 91% 136/150 [2:01:39<12:31, 53.70s/it] 91% 137/150 [2:02:32<11:38, 53.70s/it] 92% 138/150 [2:03:26<10:44, 53.70s/it] 93% 139/150 [2:04:20<09:50, 53.70s/it] 93% 140/150 [2:05:14<08:56, 53.70s/it] 94% 141/150 [2:06:07<08:03, 53.69s/it] 95% 142/150 [2:07:01<07:09, 53.69s/it] 95% 143/150 [2:07:55<06:15, 53.69s/it] 96% 144/150 [2:08:48<05:22, 53.69s/it] 97% 145/150 [2:09:42<04:28, 53.70s/it] 97% 146/150 [2:10:36<03:34, 53.70s/it] 98% 147/150 [2:11:29<02:41, 53.70s/it] 99% 148/150 [2:12:23<01:47, 53.70s/it] 99% 149/150 [2:13:17<00:53, 53.69s/it]100% 150/150 [2:14:10<00:00, 53.69s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x58e5d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x63bf8c0] Warning: data is not aligned! This can lead to a speed loss
120.13122425101828 (1014, 1352, 3)
120.18360263996358 (1014, 1352, 3)
120.21713929056328 (1014, 1352, 3)
120.24900699866562 (1014, 1352, 3)
120.25212702636462 (1014, 1352, 3)
120.26855361234628 (1014, 1352, 3)
120.29463643118628 (1014, 1352, 3)
120.3036896661726 (1014, 1352, 3)
120.3170212683185 (1014, 1352, 3)
120.3177310065396 (1014, 1352, 3)
120.33497285536998 (1014, 1352, 3)
120.32726809868936 (1014, 1352, 3)
120.34151975887866 (1014, 1352, 3)
120.34431275748982 (1014, 1352, 3)
120.3613897544826 (1014, 1352, 3)
120.36254858023179 (1014, 1352, 3)
120.37326394967496 (1014, 1352, 3)
120.3770942018837 (1014, 1352, 3)
120.377721514186 (1014, 1352, 3)
120.3749851681975 (1014, 1352, 3)
120.36905560807473 (1014, 1352, 3)
120.3770120191092 (1014, 1352, 3)
120.37337774120887 (1014, 1352, 3)
120.38068155293348 (1014, 1352, 3)
120.37249366852234 (1014, 1352, 3)
120.37928201432412 (1014, 1352, 3)
120.3742909912118 (1014, 1352, 3)
120.38576886118989 (1014, 1352, 3)
120.39672056689581 (1014, 1352, 3)
120.4069095289225 (1014, 1352, 3)
120.40646287283748 (1014, 1352, 3)
120.39888917093629 (1014, 1352, 3)
120.40275613793479 (1014, 1352, 3)
120.39539956389638 (1014, 1352, 3)
120.40332582503724 (1014, 1352, 3)
120.39853977257255 (1014, 1352, 3)
120.40920699944368 (1014, 1352, 3)
120.39720320833771 (1014, 1352, 3)
120.39874498636446 (1014, 1352, 3)
120.39593423821917 (1014, 1352, 3)
120.40051604946916 (1014, 1352, 3)
120.39944767340079 (1014, 1352, 3)
120.39659437500244 (1014, 1352, 3)
120.40387849203849 (1014, 1352, 3)
120.39941630778567 (1014, 1352, 3)
120.4057407342569 (1014, 1352, 3)
120.39599842831522 (1014, 1352, 3)
120.39754044948629 (1014, 1352, 3)
120.37931727024808 (1014, 1352, 3)
120.38180269131567 (1014, 1352, 3)
120.37934304354422 (1014, 1352, 3)
120.38953492330256 (1014, 1352, 3)
120.38775607958016 (1014, 1352, 3)
120.38826887091567 (1014, 1352, 3)
120.3862743581963 (1014, 1352, 3)
120.38239255939529 (1014, 1352, 3)
120.38905738789103 (1014, 1352, 3)
120.38932095631573 (1014, 1352, 3)
120.40034560531261 (1014, 1352, 3)
120.39009439834429 (1014, 1352, 3)
120.39378630144448 (1014, 1352, 3)
120.38506325642193 (1014, 1352, 3)
120.39031638909313 (1014, 1352, 3)
120.38811593314894 (1014, 1352, 3)
120.39150706674603 (1014, 1352, 3)
120.39272327455076 (1014, 1352, 3)
120.39137868655392 (1014, 1352, 3)
120.39431805803562 (1014, 1352, 3)
120.38836856007998 (1014, 1352, 3)
120.39387261767212 (1014, 1352, 3)
120.38302084427482 (1014, 1352, 3)
120.38896888336465 (1014, 1352, 3)
120.38380231006539 (1014, 1352, 3)
120.39436376916463 (1014, 1352, 3)
120.39213924193442 (1014, 1352, 3)
120.39701671665713 (1014, 1352, 3)
120.39347556302495 (1014, 1352, 3)
120.3899745282028 (1014, 1352, 3)
120.39338292504542 (1014, 1352, 3)
120.39086711093994 (1014, 1352, 3)
120.40149713673269 (1014, 1352, 3)
120.39641274620791 (1014, 1352, 3)
120.40462689020382 (1014, 1352, 3)
120.39351568183498 (1014, 1352, 3)
120.40149981132002 (1014, 1352, 3)
120.39840628635007 (1014, 1352, 3)
120.40566001034823 (1014, 1352, 3)
120.40627589486829 (1014, 1352, 3)
120.40988318375096 (1014, 1352, 3)
120.41087740080685 (1014, 1352, 3)
120.40653630241705 (1014, 1352, 3)
120.41129147555525 (1014, 1352, 3)
120.40468451540367 (1014, 1352, 3)
120.4115217332104 (1014, 1352, 3)
120.40766473512832 (1014, 1352, 3)
120.41946623017401 (1014, 1352, 3)
120.41788092931698 (1014, 1352, 3)
120.42435488953468 (1014, 1352, 3)
120.4227652120802 (1014, 1352, 3)
120.4243417597423 (1014, 1352, 3)
120.4287652840509 (1014, 1352, 3)
120.43262641558613 (1014, 1352, 3)
120.44686640484888 (1014, 1352, 3)
120.44854288481963 (1014, 1352, 3)
120.4572686044295 (1014, 1352, 3)
120.44815993254204 (1014, 1352, 3)
120.44954901594637 (1014, 1352, 3)
120.44191987714404 (1014, 1352, 3)
120.44726443207327 (1014, 1352, 3)
120.45055733537185 (1014, 1352, 3)
120.45353488050917 (1014, 1352, 3)
120.45813638644772 (1014, 1352, 3)
120.45624472376862 (1014, 1352, 3)
120.46025660477186 (1014, 1352, 3)
120.45246382985346 (1014, 1352, 3)
120.46252052137919 (1014, 1352, 3)
120.46101472870932 (1014, 1352, 3)
120.46973047940276 (1014, 1352, 3)
120.46085328089197 (1014, 1352, 3)
120.46065706343927 (1014, 1352, 3)
120.45436351629456 (1014, 1352, 3)
120.44891927220102 (1014, 1352, 3)
120.4477186256317 (1014, 1352, 3)
120.44663225688487 (1014, 1352, 3)
120.45675921711425 (1014, 1352, 3)
120.45242784449657 (1014, 1352, 3)
120.4617067173963 (1014, 1352, 3)
120.45734835576097 (1014, 1352, 3)
120.4632898299546 (1014, 1352, 3)
120.45723991340172 (1014, 1352, 3)
120.46333578422791 (1014, 1352, 3)
120.46518246521092 (1014, 1352, 3)
120.47104637637182 (1014, 1352, 3)
120.47293487817498 (1014, 1352, 3)
120.46877394971386 (1014, 1352, 3)
120.4675178662434 (1014, 1352, 3)
120.45827351983473 (1014, 1352, 3)
120.46688860878665 (1014, 1352, 3)
120.46170963512793 (1014, 1352, 3)
120.47389019214235 (1014, 1352, 3)
120.46705953923183 (1014, 1352, 3)
120.47126228851309 (1014, 1352, 3)
120.45784655843828 (1014, 1352, 3)
120.45363238137476 (1014, 1352, 3)
120.45139399491926 (1014, 1352, 3)
120.44921736711677 (1014, 1352, 3)
120.45574895253434 (1014, 1352, 3)
120.45098624192275 (1014, 1352, 3)
120.46044577103976 (1014, 1352, 3)
120.44452759979615 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:14:13<00:00, 53.69s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
