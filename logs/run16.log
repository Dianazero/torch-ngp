nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=16, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_11-42-55 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:01, 53.16s/it]  1% 2/150 [01:45<2:10:26, 52.88s/it]  2% 3/150 [02:38<2:09:25, 52.82s/it]  3% 4/150 [03:31<2:08:24, 52.77s/it]  3% 5/150 [04:23<2:07:26, 52.74s/it]  4% 6/150 [05:16<2:06:32, 52.72s/it]  5% 7/150 [06:09<2:05:38, 52.71s/it]  5% 8/150 [07:02<2:04:44, 52.71s/it]  6% 9/150 [07:54<2:03:52, 52.71s/it]  7% 10/150 [08:47<2:03:00, 52.72s/it]  7% 11/150 [09:40<2:02:07, 52.72s/it]  8% 12/150 [10:33<2:01:18, 52.74s/it]  9% 13/150 [11:25<2:00:24, 52.73s/it]  9% 14/150 [12:18<1:59:30, 52.73s/it] 10% 15/150 [13:11<1:58:38, 52.73s/it] 11% 16/150 [14:03<1:57:46, 52.74s/it] 11% 17/150 [14:56<1:56:53, 52.74s/it] 12% 18/150 [15:49<1:56:00, 52.73s/it] 13% 19/150 [16:42<1:55:08, 52.74s/it] 13% 20/150 [17:34<1:54:16, 52.74s/it] 14% 21/150 [18:27<1:53:23, 52.74s/it] 15% 22/150 [19:20<1:52:30, 52.74s/it] 15% 23/150 [20:13<1:51:37, 52.74s/it] 16% 24/150 [21:05<1:50:44, 52.74s/it] 17% 25/150 [21:58<1:49:52, 52.74s/it] 17% 26/150 [22:51<1:49:01, 52.75s/it] 18% 27/150 [23:44<1:48:08, 52.75s/it] 19% 28/150 [24:36<1:47:15, 52.75s/it] 19% 29/150 [25:29<1:46:22, 52.75s/it] 20% 30/150 [26:22<1:45:30, 52.75s/it] 21% 31/150 [27:15<1:44:37, 52.75s/it] 21% 32/150 [28:07<1:43:45, 52.76s/it] 22% 33/150 [29:00<1:42:52, 52.75s/it] 23% 34/150 [29:53<1:41:59, 52.76s/it] 23% 35/150 [30:46<1:41:05, 52.75s/it] 24% 36/150 [31:38<1:40:13, 52.75s/it] 25% 37/150 [32:31<1:39:20, 52.75s/it] 25% 38/150 [33:24<1:38:26, 52.74s/it] 26% 39/150 [34:17<1:37:34, 52.74s/it] 27% 40/150 [35:09<1:36:41, 52.74s/it] 27% 41/150 [36:02<1:35:47, 52.73s/it] 28% 42/150 [36:55<1:34:54, 52.72s/it] 29% 43/150 [37:47<1:34:01, 52.73s/it] 29% 44/150 [38:40<1:33:11, 52.75s/it] 30% 45/150 [39:33<1:32:18, 52.75s/it] 31% 46/150 [40:26<1:31:24, 52.74s/it] 31% 47/150 [41:18<1:30:31, 52.73s/it] 32% 48/150 [42:11<1:29:39, 52.74s/it] 33% 49/150 [43:04<1:28:47, 52.74s/it] 33% 50/150 [43:57<1:27:54, 52.74s/it] 34% 51/150 [44:49<1:27:00, 52.73s/it] 35% 52/150 [45:42<1:26:07, 52.73s/it] 35% 53/150 [46:35<1:25:14, 52.73s/it] 36% 54/150 [47:28<1:24:23, 52.74s/it] 37% 55/150 [48:20<1:23:30, 52.74s/it] 37% 56/150 [49:13<1:22:38, 52.75s/it] 38% 57/150 [50:06<1:21:45, 52.75s/it] 39% 58/150 [50:59<1:20:52, 52.75s/it] 39% 59/150 [51:51<1:20:00, 52.75s/it] 40% 60/150 [52:44<1:19:07, 52.75s/it] 41% 61/150 [53:37<1:18:14, 52.75s/it] 41% 62/150 [54:30<1:17:21, 52.75s/it] 42% 63/150 [55:22<1:16:29, 52.75s/it] 43% 64/150 [56:15<1:15:36, 52.75s/it] 43% 65/150 [57:08<1:14:43, 52.75s/it] 44% 66/150 [58:01<1:13:52, 52.76s/it] 45% 67/150 [58:53<1:12:58, 52.75s/it] 45% 68/150 [59:46<1:12:05, 52.75s/it] 46% 69/150 [1:00:39<1:11:12, 52.74s/it] 47% 70/150 [1:01:32<1:10:19, 52.75s/it] 47% 71/150 [1:02:24<1:09:26, 52.75s/it] 48% 72/150 [1:03:17<1:08:34, 52.75s/it] 49% 73/150 [1:04:10<1:07:41, 52.74s/it] 49% 74/150 [1:05:03<1:06:49, 52.75s/it] 50% 75/150 [1:05:55<1:05:57, 52.77s/it] 51% 76/150 [1:06:48<1:05:04, 52.76s/it] 51% 77/150 [1:07:41<1:04:11, 52.76s/it] 52% 78/150 [1:08:34<1:03:18, 52.75s/it] 53% 79/150 [1:09:26<1:02:25, 52.75s/it] 53% 80/150 [1:10:19<1:01:32, 52.75s/it] 54% 81/150 [1:11:12<1:00:39, 52.75s/it] 55% 82/150 [1:12:05<59:46, 52.75s/it]   55% 83/150 [1:12:57<58:54, 52.75s/it] 56% 84/150 [1:13:50<58:02, 52.76s/it] 57% 85/150 [1:14:43<57:09, 52.76s/it] 57% 86/150 [1:15:36<56:16, 52.75s/it] 58% 87/150 [1:16:28<55:22, 52.74s/it] 59% 88/150 [1:17:21<54:30, 52.74s/it] 59% 89/150 [1:18:14<53:37, 52.74s/it] 60% 90/150 [1:19:07<52:44, 52.75s/it] 61% 91/150 [1:19:59<51:51, 52.74s/it] 61% 92/150 [1:20:52<50:59, 52.75s/it] 62% 93/150 [1:21:45<50:06, 52.75s/it] 63% 94/150 [1:22:38<49:14, 52.75s/it] 63% 95/150 [1:23:30<48:21, 52.75s/it] 64% 96/150 [1:24:23<47:29, 52.76s/it] 65% 97/150 [1:25:16<46:36, 52.77s/it] 65% 98/150 [1:26:09<45:43, 52.76s/it] 66% 99/150 [1:27:01<44:50, 52.75s/it] 67% 100/150 [1:27:54<43:57, 52.75s/it] 67% 101/150 [1:28:47<43:05, 52.76s/it] 68% 102/150 [1:29:40<42:12, 52.76s/it] 69% 103/150 [1:30:32<41:19, 52.75s/it] 69% 104/150 [1:31:25<40:26, 52.75s/it] 70% 105/150 [1:32:18<39:33, 52.75s/it] 71% 106/150 [1:33:11<38:41, 52.76s/it] 71% 107/150 [1:34:03<37:48, 52.75s/it] 72% 108/150 [1:34:56<36:55, 52.75s/it] 73% 109/150 [1:35:49<36:02, 52.74s/it] 73% 110/150 [1:36:42<35:10, 52.75s/it] 74% 111/150 [1:37:34<34:17, 52.76s/it] 75% 112/150 [1:38:27<33:24, 52.76s/it] 75% 113/150 [1:39:20<32:31, 52.75s/it] 76% 114/150 [1:40:13<31:39, 52.75s/it] 77% 115/150 [1:41:05<30:46, 52.76s/it] 77% 116/150 [1:41:58<29:53, 52.75s/it] 78% 117/150 [1:42:51<29:00, 52.74s/it] 79% 118/150 [1:43:44<28:07, 52.73s/it] 79% 119/150 [1:44:36<27:14, 52.73s/it] 80% 120/150 [1:45:29<26:22, 52.73s/it] 81% 121/150 [1:46:22<25:29, 52.74s/it] 81% 122/150 [1:47:15<24:36, 52.74s/it] 82% 123/150 [1:48:07<23:44, 52.74s/it] 83% 124/150 [1:49:00<22:51, 52.75s/it] 83% 125/150 [1:49:53<21:58, 52.75s/it] 84% 126/150 [1:50:46<21:05, 52.75s/it] 85% 127/150 [1:51:38<20:13, 52.75s/it] 85% 128/150 [1:52:31<19:20, 52.74s/it] 86% 129/150 [1:53:24<18:27, 52.74s/it] 87% 130/150 [1:54:17<17:34, 52.73s/it] 87% 131/150 [1:55:09<16:41, 52.73s/it] 88% 132/150 [1:56:02<15:49, 52.73s/it] 89% 133/150 [1:56:55<14:56, 52.75s/it] 89% 134/150 [1:57:48<14:03, 52.75s/it] 90% 135/150 [1:58:40<13:11, 52.74s/it] 91% 136/150 [1:59:33<12:18, 52.74s/it] 91% 137/150 [2:00:26<11:25, 52.74s/it] 92% 138/150 [2:01:18<10:32, 52.74s/it] 93% 139/150 [2:02:11<09:40, 52.74s/it] 93% 140/150 [2:03:04<08:47, 52.74s/it] 94% 141/150 [2:03:57<07:54, 52.74s/it] 95% 142/150 [2:04:49<07:01, 52.74s/it] 95% 143/150 [2:05:42<06:09, 52.74s/it] 96% 144/150 [2:06:35<05:16, 52.73s/it] 97% 145/150 [2:07:28<04:23, 52.74s/it] 97% 146/150 [2:08:20<03:31, 52.75s/it] 98% 147/150 [2:09:13<02:38, 52.74s/it] 99% 148/150 [2:10:06<01:45, 52.73s/it] 99% 149/150 [2:10:59<00:52, 52.73s/it]100% 150/150 [2:11:51<00:00, 52.73s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5ebfd80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x61608c0] Warning: data is not aligned! This can lead to a speed loss
120.46969206260285 (1014, 1352, 3)
120.5459878272236 (1014, 1352, 3)
120.58586081836538 (1014, 1352, 3)
120.59640379849756 (1014, 1352, 3)
120.58779357243172 (1014, 1352, 3)
120.6007324965279 (1014, 1352, 3)
120.60878032982039 (1014, 1352, 3)
120.6005139097993 (1014, 1352, 3)
120.5966705277982 (1014, 1352, 3)
120.59104319604434 (1014, 1352, 3)
120.59095615038378 (1014, 1352, 3)
120.57028353543488 (1014, 1352, 3)
120.56818690210815 (1014, 1352, 3)
120.56147782134924 (1014, 1352, 3)
120.56515124548238 (1014, 1352, 3)
120.56263810596423 (1014, 1352, 3)
120.57116469038976 (1014, 1352, 3)
120.56975907317282 (1014, 1352, 3)
120.55892140214512 (1014, 1352, 3)
120.54641527490867 (1014, 1352, 3)
120.53896071371607 (1014, 1352, 3)
120.53834020945423 (1014, 1352, 3)
120.53146408855899 (1014, 1352, 3)
120.5360852891861 (1014, 1352, 3)
120.52944866542956 (1014, 1352, 3)
120.52535581737334 (1014, 1352, 3)
120.51309721103759 (1014, 1352, 3)
120.51954418223762 (1014, 1352, 3)
120.52576332722555 (1014, 1352, 3)
120.52534657788982 (1014, 1352, 3)
120.51897546771238 (1014, 1352, 3)
120.51251463728705 (1014, 1352, 3)
120.50988867881222 (1014, 1352, 3)
120.49754424253742 (1014, 1352, 3)
120.4988620846609 (1014, 1352, 3)
120.49484850164754 (1014, 1352, 3)
120.49926205703972 (1014, 1352, 3)
120.48712575228848 (1014, 1352, 3)
120.49151936984777 (1014, 1352, 3)
120.4912499659598 (1014, 1352, 3)
120.48972447860136 (1014, 1352, 3)
120.48327069936082 (1014, 1352, 3)
120.48232316601116 (1014, 1352, 3)
120.49199520324919 (1014, 1352, 3)
120.49077559142421 (1014, 1352, 3)
120.5019599862283 (1014, 1352, 3)
120.50078219522348 (1014, 1352, 3)
120.50296028189177 (1014, 1352, 3)
120.48603962668597 (1014, 1352, 3)
120.48876940777828 (1014, 1352, 3)
120.49393622422184 (1014, 1352, 3)
120.50507636676275 (1014, 1352, 3)
120.50330943711121 (1014, 1352, 3)
120.50410889558022 (1014, 1352, 3)
120.50384581344413 (1014, 1352, 3)
120.49935031842178 (1014, 1352, 3)
120.50545226785555 (1014, 1352, 3)
120.51160527759299 (1014, 1352, 3)
120.5209741138849 (1014, 1352, 3)
120.51156394306145 (1014, 1352, 3)
120.51294597528097 (1014, 1352, 3)
120.50777502538426 (1014, 1352, 3)
120.50833717501332 (1014, 1352, 3)
120.49758703593479 (1014, 1352, 3)
120.49654346058533 (1014, 1352, 3)
120.49146368980233 (1014, 1352, 3)
120.484852109909 (1014, 1352, 3)
120.48636179288773 (1014, 1352, 3)
120.48922019731647 (1014, 1352, 3)
120.49787418935689 (1014, 1352, 3)
120.48923113881011 (1014, 1352, 3)
120.49454894786597 (1014, 1352, 3)
120.49328070718035 (1014, 1352, 3)
120.50504621686916 (1014, 1352, 3)
120.50720679714763 (1014, 1352, 3)
120.51609663916219 (1014, 1352, 3)
120.51237653132281 (1014, 1352, 3)
120.50567036829554 (1014, 1352, 3)
120.50296684678797 (1014, 1352, 3)
120.50549749269595 (1014, 1352, 3)
120.51539930130053 (1014, 1352, 3)
120.51157220996775 (1014, 1352, 3)
120.51630355496422 (1014, 1352, 3)
120.50961003544072 (1014, 1352, 3)
120.51038128917055 (1014, 1352, 3)
120.50323698010885 (1014, 1352, 3)
120.50620042287657 (1014, 1352, 3)
120.50400361409692 (1014, 1352, 3)
120.49863012499563 (1014, 1352, 3)
120.49469361872639 (1014, 1352, 3)
120.49563580290139 (1014, 1352, 3)
120.49769815288136 (1014, 1352, 3)
120.49015678917249 (1014, 1352, 3)
120.48904294511941 (1014, 1352, 3)
120.486305869698 (1014, 1352, 3)
120.49037075615934 (1014, 1352, 3)
120.49061997907013 (1014, 1352, 3)
120.50132319129816 (1014, 1352, 3)
120.50640831125583 (1014, 1352, 3)
120.5046574291283 (1014, 1352, 3)
120.50277743737576 (1014, 1352, 3)
120.50764567261496 (1014, 1352, 3)
120.51919283871946 (1014, 1352, 3)
120.5226024512836 (1014, 1352, 3)
120.53697422475871 (1014, 1352, 3)
120.54150765029236 (1014, 1352, 3)
120.54634281790631 (1014, 1352, 3)
120.53784857167311 (1014, 1352, 3)
120.54460020268509 (1014, 1352, 3)
120.54865414765278 (1014, 1352, 3)
120.55123050468977 (1014, 1352, 3)
120.55649068854576 (1014, 1352, 3)
120.56273268909818 (1014, 1352, 3)
120.56860146314516 (1014, 1352, 3)
120.56328195207918 (1014, 1352, 3)
120.57288420690219 (1014, 1352, 3)
120.57340040225793 (1014, 1352, 3)
120.58269118922851 (1014, 1352, 3)
120.57979412485557 (1014, 1352, 3)
120.5908214484398 (1014, 1352, 3)
120.59303357531054 (1014, 1352, 3)
120.58748745375395 (1014, 1352, 3)
120.58135705643672 (1014, 1352, 3)
120.57909046524203 (1014, 1352, 3)
120.58935869231158 (1014, 1352, 3)
120.59084406086 (1014, 1352, 3)
120.60763852417243 (1014, 1352, 3)
120.61212380713405 (1014, 1352, 3)
120.62014367883167 (1014, 1352, 3)
120.61262055094554 (1014, 1352, 3)
120.61958541951145 (1014, 1352, 3)
120.6231542915942 (1014, 1352, 3)
120.62784600406927 (1014, 1352, 3)
120.63229481538539 (1014, 1352, 3)
120.63132758734716 (1014, 1352, 3)
120.63047390769853 (1014, 1352, 3)
120.6173959050609 (1014, 1352, 3)
120.62346624573524 (1014, 1352, 3)
120.61616267715493 (1014, 1352, 3)
120.6230096207338 (1014, 1352, 3)
120.615308754362 (1014, 1352, 3)
120.62429561095355 (1014, 1352, 3)
120.61372612809231 (1014, 1352, 3)
120.60865486735992 (1014, 1352, 3)
120.60020876369875 (1014, 1352, 3)
120.59689130282553 (1014, 1352, 3)
120.59066607923003 (1014, 1352, 3)
120.58154889729195 (1014, 1352, 3)
120.58667316348244 (1014, 1352, 3)
120.57550992223273 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:11:54<00:00, 52.77s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
