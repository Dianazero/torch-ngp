nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=32, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_09-13-34 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:13:56, 53.93s/it]  1% 2/150 [01:47<2:12:18, 53.64s/it]  2% 3/150 [02:40<2:11:14, 53.57s/it]  3% 4/150 [03:34<2:10:17, 53.55s/it]  3% 5/150 [04:27<2:09:23, 53.54s/it]  4% 6/150 [05:21<2:08:29, 53.54s/it]  5% 7/150 [06:14<2:07:34, 53.53s/it]  5% 8/150 [07:08<2:06:40, 53.52s/it]  6% 9/150 [08:01<2:05:47, 53.53s/it]  7% 10/150 [08:55<2:04:55, 53.54s/it]  7% 11/150 [09:49<2:04:03, 53.55s/it]  8% 12/150 [10:42<2:03:09, 53.55s/it]  9% 13/150 [11:36<2:02:16, 53.55s/it]  9% 14/150 [12:29<2:01:22, 53.55s/it] 10% 15/150 [13:23<2:00:29, 53.56s/it] 11% 16/150 [14:16<1:59:35, 53.55s/it] 11% 17/150 [15:10<1:58:42, 53.55s/it] 12% 18/150 [16:03<1:57:49, 53.55s/it] 13% 19/150 [16:57<1:56:55, 53.56s/it] 13% 20/150 [17:51<1:56:02, 53.56s/it] 14% 21/150 [18:44<1:55:10, 53.57s/it] 15% 22/150 [19:38<1:54:16, 53.57s/it] 15% 23/150 [20:31<1:53:23, 53.57s/it] 16% 24/150 [21:25<1:52:29, 53.57s/it] 17% 25/150 [22:18<1:51:36, 53.57s/it] 17% 26/150 [23:12<1:50:43, 53.58s/it] 18% 27/150 [24:06<1:49:49, 53.58s/it] 19% 28/150 [24:59<1:48:56, 53.58s/it] 19% 29/150 [25:53<1:48:03, 53.58s/it] 20% 30/150 [26:46<1:47:09, 53.58s/it] 21% 31/150 [27:40<1:46:17, 53.59s/it] 21% 32/150 [28:34<1:45:24, 53.60s/it] 22% 33/150 [29:27<1:44:30, 53.59s/it] 23% 34/150 [30:21<1:43:37, 53.60s/it] 23% 35/150 [31:14<1:42:43, 53.59s/it] 24% 36/150 [32:08<1:41:49, 53.59s/it] 25% 37/150 [33:02<1:40:55, 53.59s/it] 25% 38/150 [33:55<1:40:02, 53.60s/it] 26% 39/150 [34:49<1:39:09, 53.60s/it] 27% 40/150 [35:42<1:38:14, 53.59s/it] 27% 41/150 [36:36<1:37:21, 53.59s/it] 28% 42/150 [37:30<1:36:27, 53.59s/it] 29% 43/150 [38:23<1:35:34, 53.59s/it] 29% 44/150 [39:17<1:34:40, 53.59s/it] 30% 45/150 [40:10<1:33:47, 53.59s/it] 31% 46/150 [41:04<1:32:52, 53.58s/it] 31% 47/150 [41:57<1:31:59, 53.59s/it] 32% 48/150 [42:51<1:31:05, 53.58s/it] 33% 49/150 [43:45<1:30:11, 53.58s/it] 33% 50/150 [44:38<1:29:18, 53.58s/it] 34% 51/150 [45:32<1:28:24, 53.58s/it] 35% 52/150 [46:25<1:27:31, 53.58s/it] 35% 53/150 [47:19<1:26:37, 53.59s/it] 36% 54/150 [48:13<1:25:44, 53.59s/it] 37% 55/150 [49:06<1:24:51, 53.59s/it] 37% 56/150 [50:00<1:23:57, 53.59s/it] 38% 57/150 [50:53<1:23:04, 53.59s/it] 39% 58/150 [51:47<1:22:10, 53.59s/it] 39% 59/150 [52:41<1:21:16, 53.59s/it] 40% 60/150 [53:34<1:20:23, 53.59s/it] 41% 61/150 [54:28<1:19:29, 53.59s/it] 41% 62/150 [55:21<1:18:35, 53.59s/it] 42% 63/150 [56:15<1:17:42, 53.59s/it] 43% 64/150 [57:09<1:16:49, 53.59s/it] 43% 65/150 [58:02<1:15:55, 53.59s/it] 44% 66/150 [58:56<1:15:01, 53.59s/it] 45% 67/150 [59:49<1:14:08, 53.60s/it] 45% 68/150 [1:00:43<1:13:15, 53.60s/it] 46% 69/150 [1:01:37<1:12:21, 53.60s/it] 47% 70/150 [1:02:30<1:11:28, 53.60s/it] 47% 71/150 [1:03:24<1:10:34, 53.60s/it] 48% 72/150 [1:04:17<1:09:41, 53.60s/it] 49% 73/150 [1:05:11<1:08:47, 53.61s/it] 49% 74/150 [1:06:05<1:07:54, 53.61s/it] 50% 75/150 [1:06:58<1:07:00, 53.61s/it] 51% 76/150 [1:07:52<1:06:06, 53.61s/it] 51% 77/150 [1:08:45<1:05:13, 53.60s/it] 52% 78/150 [1:09:39<1:04:19, 53.61s/it] 53% 79/150 [1:10:33<1:03:26, 53.61s/it] 53% 80/150 [1:11:26<1:02:32, 53.60s/it] 54% 81/150 [1:12:20<1:01:38, 53.60s/it] 55% 82/150 [1:13:13<1:00:45, 53.60s/it] 55% 83/150 [1:14:07<59:51, 53.61s/it]   56% 84/150 [1:15:01<58:57, 53.60s/it] 57% 85/150 [1:15:54<58:04, 53.61s/it] 57% 86/150 [1:16:48<57:11, 53.61s/it] 58% 87/150 [1:17:41<56:18, 53.62s/it] 59% 88/150 [1:18:35<55:24, 53.62s/it] 59% 89/150 [1:19:29<54:30, 53.62s/it] 60% 90/150 [1:20:22<53:36, 53.61s/it] 61% 91/150 [1:21:16<52:42, 53.60s/it] 61% 92/150 [1:22:09<51:48, 53.60s/it] 62% 93/150 [1:23:03<50:55, 53.61s/it] 63% 94/150 [1:23:57<50:01, 53.61s/it] 63% 95/150 [1:24:50<49:08, 53.60s/it] 64% 96/150 [1:25:44<48:14, 53.61s/it] 65% 97/150 [1:26:38<47:20, 53.60s/it] 65% 98/150 [1:27:31<46:27, 53.61s/it] 66% 99/150 [1:28:25<45:33, 53.61s/it] 67% 100/150 [1:29:18<44:40, 53.61s/it] 67% 101/150 [1:30:12<43:46, 53.61s/it] 68% 102/150 [1:31:06<42:53, 53.61s/it] 69% 103/150 [1:31:59<41:59, 53.61s/it] 69% 104/150 [1:32:53<41:05, 53.60s/it] 70% 105/150 [1:33:46<40:11, 53.60s/it] 71% 106/150 [1:34:40<39:18, 53.60s/it] 71% 107/150 [1:35:34<38:25, 53.61s/it] 72% 108/150 [1:36:27<37:31, 53.60s/it] 73% 109/150 [1:37:21<36:37, 53.60s/it] 73% 110/150 [1:38:14<35:44, 53.62s/it] 74% 111/150 [1:39:08<34:51, 53.62s/it] 75% 112/150 [1:40:02<33:57, 53.62s/it] 75% 113/150 [1:40:55<33:04, 53.62s/it] 76% 114/150 [1:41:49<32:10, 53.62s/it] 77% 115/150 [1:42:43<31:16, 53.62s/it] 77% 116/150 [1:43:36<30:23, 53.62s/it] 78% 117/150 [1:44:30<29:29, 53.61s/it] 79% 118/150 [1:45:23<28:35, 53.61s/it] 79% 119/150 [1:46:17<27:41, 53.61s/it] 80% 120/150 [1:47:11<26:48, 53.61s/it] 81% 121/150 [1:48:04<25:54, 53.62s/it] 81% 122/150 [1:48:58<25:01, 53.62s/it] 82% 123/150 [1:49:51<24:07, 53.62s/it] 83% 124/150 [1:50:45<23:14, 53.62s/it] 83% 125/150 [1:51:39<22:20, 53.62s/it] 84% 126/150 [1:52:32<21:26, 53.62s/it] 85% 127/150 [1:53:26<20:33, 53.62s/it] 85% 128/150 [1:54:20<19:39, 53.62s/it] 86% 129/150 [1:55:13<18:45, 53.61s/it] 87% 130/150 [1:56:07<17:52, 53.61s/it] 87% 131/150 [1:57:00<16:58, 53.61s/it] 88% 132/150 [1:57:54<16:05, 53.62s/it] 89% 133/150 [1:58:48<15:11, 53.61s/it] 89% 134/150 [1:59:41<14:17, 53.61s/it] 90% 135/150 [2:00:35<13:24, 53.62s/it] 91% 136/150 [2:01:28<12:30, 53.62s/it] 91% 137/150 [2:02:22<11:37, 53.62s/it] 92% 138/150 [2:03:16<10:43, 53.61s/it] 93% 139/150 [2:04:09<09:49, 53.61s/it] 93% 140/150 [2:05:03<08:56, 53.62s/it] 94% 141/150 [2:05:57<08:02, 53.62s/it] 95% 142/150 [2:06:50<07:08, 53.62s/it] 95% 143/150 [2:07:44<06:15, 53.62s/it] 96% 144/150 [2:08:37<05:21, 53.61s/it] 97% 145/150 [2:09:31<04:28, 53.61s/it] 97% 146/150 [2:10:25<03:34, 53.61s/it] 98% 147/150 [2:11:18<02:40, 53.61s/it] 99% 148/150 [2:12:12<01:47, 53.61s/it] 99% 149/150 [2:13:05<00:53, 53.61s/it]100% 150/150 [2:13:59<00:00, 53.61s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6ac6d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x62e48c0] Warning: data is not aligned! This can lead to a speed loss
121.55265192628643 (1014, 1352, 3)
121.61131705433594 (1014, 1352, 3)
121.64059600504184 (1014, 1352, 3)
121.65647162603238 (1014, 1352, 3)
121.64881598450101 (1014, 1352, 3)
121.65616502106602 (1014, 1352, 3)
121.6690052285751 (1014, 1352, 3)
121.66680088232205 (1014, 1352, 3)
121.67285736377112 (1014, 1352, 3)
121.66566029239561 (1014, 1352, 3)
121.6786527082385 (1014, 1352, 3)
121.6693745647717 (1014, 1352, 3)
121.68475173994064 (1014, 1352, 3)
121.68537297363538 (1014, 1352, 3)
121.70051745970612 (1014, 1352, 3)
121.69952275636163 (1014, 1352, 3)
121.71274518671537 (1014, 1352, 3)
121.71591457270793 (1014, 1352, 3)
121.72024424331548 (1014, 1352, 3)
121.72043705674794 (1014, 1352, 3)
121.71463393166283 (1014, 1352, 3)
121.72103324657945 (1014, 1352, 3)
121.71981412104307 (1014, 1352, 3)
121.73054724002039 (1014, 1352, 3)
121.72330956354625 (1014, 1352, 3)
121.73063914856701 (1014, 1352, 3)
121.72617599173698 (1014, 1352, 3)
121.74020006885847 (1014, 1352, 3)
121.75001021206073 (1014, 1352, 3)
121.76203442728819 (1014, 1352, 3)
121.7609354150376 (1014, 1352, 3)
121.75301158533976 (1014, 1352, 3)
121.75421077304327 (1014, 1352, 3)
121.74705017331326 (1014, 1352, 3)
121.75669473524503 (1014, 1352, 3)
121.75249077024225 (1014, 1352, 3)
121.76405787417963 (1014, 1352, 3)
121.75201469369654 (1014, 1352, 3)
121.7550722333096 (1014, 1352, 3)
121.75118532847823 (1014, 1352, 3)
121.75811518426448 (1014, 1352, 3)
121.75854919684573 (1014, 1352, 3)
121.7563076495143 (1014, 1352, 3)
121.76234711086214 (1014, 1352, 3)
121.75710880999343 (1014, 1352, 3)
121.76514643122518 (1014, 1352, 3)
121.7571292341149 (1014, 1352, 3)
121.76184258643293 (1014, 1352, 3)
121.74434397721835 (1014, 1352, 3)
121.74829531529008 (1014, 1352, 3)
121.74247419752655 (1014, 1352, 3)
121.75357713898906 (1014, 1352, 3)
121.75197603375231 (1014, 1352, 3)
121.75250049601438 (1014, 1352, 3)
121.74864763138545 (1014, 1352, 3)
121.74295124664947 (1014, 1352, 3)
121.75039608206995 (1014, 1352, 3)
121.74907021618446 (1014, 1352, 3)
121.76062953950414 (1014, 1352, 3)
121.74890293290385 (1014, 1352, 3)
121.75309474069147 (1014, 1352, 3)
121.74161249411591 (1014, 1352, 3)
121.74742121151998 (1014, 1352, 3)
121.74580867850099 (1014, 1352, 3)
121.75198065349409 (1014, 1352, 3)
121.7531129765142 (1014, 1352, 3)
121.75175987846676 (1014, 1352, 3)
121.75691478083945 (1014, 1352, 3)
121.75056117705185 (1014, 1352, 3)
121.75878528996417 (1014, 1352, 3)
121.75073332321853 (1014, 1352, 3)
121.76110391403974 (1014, 1352, 3)
121.7550184984186 (1014, 1352, 3)
121.76630793156168 (1014, 1352, 3)
121.76607986220526 (1014, 1352, 3)
121.77418605013052 (1014, 1352, 3)
121.77156641340756 (1014, 1352, 3)
121.76935769055706 (1014, 1352, 3)
121.77432148150741 (1014, 1352, 3)
121.7714866620761 (1014, 1352, 3)
121.78336596329882 (1014, 1352, 3)
121.7790751957798 (1014, 1352, 3)
121.7888512987796 (1014, 1352, 3)
121.77662308548176 (1014, 1352, 3)
121.78499016724437 (1014, 1352, 3)
121.77990042754494 (1014, 1352, 3)
121.78863587292695 (1014, 1352, 3)
121.78898308299196 (1014, 1352, 3)
121.79278196958556 (1014, 1352, 3)
121.79375211535543 (1014, 1352, 3)
121.78795895918677 (1014, 1352, 3)
121.79316516500745 (1014, 1352, 3)
121.78703379511299 (1014, 1352, 3)
121.79687311563166 (1014, 1352, 3)
121.7913145937156 (1014, 1352, 3)
121.80336482538348 (1014, 1352, 3)
121.80009623651522 (1014, 1352, 3)
121.80764951429494 (1014, 1352, 3)
121.80676179444386 (1014, 1352, 3)
121.80935176756182 (1014, 1352, 3)
121.8155672653852 (1014, 1352, 3)
121.81999662515707 (1014, 1352, 3)
121.83419552303258 (1014, 1352, 3)
121.83500154639776 (1014, 1352, 3)
121.84687695731164 (1014, 1352, 3)
121.83860178409564 (1014, 1352, 3)
121.8404450610584 (1014, 1352, 3)
121.83236805044953 (1014, 1352, 3)
121.8392317709853 (1014, 1352, 3)
121.84153556325836 (1014, 1352, 3)
121.84537165093036 (1014, 1352, 3)
121.85137926037449 (1014, 1352, 3)
121.84858212831017 (1014, 1352, 3)
121.85128370466332 (1014, 1352, 3)
121.84241428677022 (1014, 1352, 3)
121.85462693883268 (1014, 1352, 3)
121.85178652708238 (1014, 1352, 3)
121.860710895588 (1014, 1352, 3)
121.85162629498656 (1014, 1352, 3)
121.8550512256418 (1014, 1352, 3)
121.8480953534151 (1014, 1352, 3)
121.84555036199323 (1014, 1352, 3)
121.84579180428634 (1014, 1352, 3)
121.84813936253398 (1014, 1352, 3)
121.85808931371062 (1014, 1352, 3)
121.85327529965105 (1014, 1352, 3)
121.86297529848395 (1014, 1352, 3)
121.8567391333948 (1014, 1352, 3)
121.86327728370856 (1014, 1352, 3)
121.85601699481421 (1014, 1352, 3)
121.86284108282857 (1014, 1352, 3)
121.86225705021222 (1014, 1352, 3)
121.8682704951196 (1014, 1352, 3)
121.87097231461706 (1014, 1352, 3)
121.86589132811254 (1014, 1352, 3)
121.86203433003045 (1014, 1352, 3)
121.85104274865881 (1014, 1352, 3)
121.86006121400978 (1014, 1352, 3)
121.85519030418325 (1014, 1352, 3)
121.86981908118686 (1014, 1352, 3)
121.8635362323915 (1014, 1352, 3)
121.86900965380141 (1014, 1352, 3)
121.85278001470537 (1014, 1352, 3)
121.8507473283304 (1014, 1352, 3)
121.84986690280842 (1014, 1352, 3)
121.849609169847 (1014, 1352, 3)
121.85536804266891 (1014, 1352, 3)
121.85067365560651 (1014, 1352, 3)
121.85986815743301 (1014, 1352, 3)
121.84591167442784 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:14:02<00:00, 53.62s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
