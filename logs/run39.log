nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=39, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_15-15-14 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:54<2:14:34, 54.19s/it]  1% 2/150 [01:47<2:12:54, 53.88s/it]  2% 3/150 [02:41<2:11:46, 53.79s/it]  3% 4/150 [03:35<2:10:51, 53.78s/it]  3% 5/150 [04:29<2:09:54, 53.75s/it]  4% 6/150 [05:22<2:09:00, 53.75s/it]  5% 7/150 [06:16<2:08:06, 53.76s/it]  5% 8/150 [07:10<2:07:13, 53.76s/it]  6% 9/150 [08:04<2:06:22, 53.78s/it]  7% 10/150 [08:57<2:05:30, 53.79s/it]  7% 11/150 [09:51<2:04:37, 53.80s/it]  8% 12/150 [10:45<2:03:45, 53.81s/it]  9% 13/150 [11:39<2:02:50, 53.80s/it]  9% 14/150 [12:33<2:01:58, 53.81s/it] 10% 15/150 [13:26<2:01:03, 53.80s/it] 11% 16/150 [14:20<2:00:11, 53.82s/it] 11% 17/150 [15:14<1:59:16, 53.81s/it] 12% 18/150 [16:08<1:58:21, 53.80s/it] 13% 19/150 [17:02<1:57:29, 53.81s/it] 13% 20/150 [17:56<1:56:34, 53.80s/it] 14% 21/150 [18:49<1:55:40, 53.80s/it] 15% 22/150 [19:43<1:54:47, 53.81s/it] 15% 23/150 [20:37<1:53:55, 53.82s/it] 16% 24/150 [21:31<1:53:02, 53.83s/it] 17% 25/150 [22:25<1:52:09, 53.83s/it] 17% 26/150 [23:18<1:51:14, 53.83s/it] 18% 27/150 [24:12<1:50:21, 53.83s/it] 19% 28/150 [25:06<1:49:25, 53.82s/it] 19% 29/150 [26:00<1:48:32, 53.82s/it] 20% 30/150 [26:54<1:47:39, 53.83s/it] 21% 31/150 [27:48<1:46:44, 53.82s/it] 21% 32/150 [28:41<1:45:49, 53.81s/it] 22% 33/150 [29:35<1:44:57, 53.82s/it] 23% 34/150 [30:29<1:44:03, 53.83s/it] 23% 35/150 [31:23<1:43:11, 53.84s/it] 24% 36/150 [32:17<1:42:17, 53.84s/it] 25% 37/150 [33:11<1:41:24, 53.84s/it] 25% 38/150 [34:04<1:40:29, 53.83s/it] 26% 39/150 [34:58<1:39:36, 53.84s/it] 27% 40/150 [35:52<1:38:42, 53.84s/it] 27% 41/150 [36:46<1:37:47, 53.83s/it] 28% 42/150 [37:40<1:36:52, 53.82s/it] 29% 43/150 [38:34<1:35:59, 53.82s/it] 29% 44/150 [39:27<1:35:06, 53.84s/it] 30% 45/150 [40:21<1:34:13, 53.84s/it] 31% 46/150 [41:15<1:33:19, 53.84s/it] 31% 47/150 [42:09<1:32:25, 53.84s/it] 32% 48/150 [43:03<1:31:30, 53.83s/it] 33% 49/150 [43:57<1:30:37, 53.83s/it] 33% 50/150 [44:50<1:29:42, 53.82s/it] 34% 51/150 [45:44<1:28:47, 53.81s/it] 35% 52/150 [46:38<1:27:54, 53.82s/it] 35% 53/150 [47:32<1:27:01, 53.83s/it] 36% 54/150 [48:26<1:26:08, 53.84s/it] 37% 55/150 [49:20<1:25:15, 53.85s/it] 37% 56/150 [50:13<1:24:19, 53.83s/it] 38% 57/150 [51:07<1:23:26, 53.84s/it] 39% 58/150 [52:01<1:22:33, 53.84s/it] 39% 59/150 [52:55<1:21:38, 53.83s/it] 40% 60/150 [53:49<1:20:46, 53.85s/it] 41% 61/150 [54:43<1:19:51, 53.83s/it] 41% 62/150 [55:36<1:18:57, 53.84s/it] 42% 63/150 [56:30<1:18:02, 53.83s/it] 43% 64/150 [57:24<1:17:09, 53.83s/it] 43% 65/150 [58:18<1:16:15, 53.82s/it] 44% 66/150 [59:12<1:15:20, 53.82s/it] 45% 67/150 [1:00:06<1:14:28, 53.83s/it] 45% 68/150 [1:00:59<1:13:35, 53.84s/it] 46% 69/150 [1:01:53<1:12:40, 53.83s/it] 47% 70/150 [1:02:47<1:11:47, 53.84s/it] 47% 71/150 [1:03:41<1:10:52, 53.83s/it] 48% 72/150 [1:04:35<1:09:59, 53.84s/it] 49% 73/150 [1:05:29<1:09:05, 53.83s/it] 49% 74/150 [1:06:22<1:08:12, 53.84s/it] 50% 75/150 [1:07:16<1:07:18, 53.85s/it] 51% 76/150 [1:08:10<1:06:24, 53.85s/it] 51% 77/150 [1:09:04<1:05:31, 53.86s/it] 52% 78/150 [1:09:58<1:04:37, 53.86s/it] 53% 79/150 [1:10:52<1:03:44, 53.86s/it] 53% 80/150 [1:11:46<1:02:49, 53.86s/it] 54% 81/150 [1:12:39<1:01:55, 53.85s/it] 55% 82/150 [1:13:33<1:01:00, 53.84s/it] 55% 83/150 [1:14:27<1:00:07, 53.84s/it] 56% 84/150 [1:15:21<59:13, 53.84s/it]   57% 85/150 [1:16:15<58:18, 53.83s/it] 57% 86/150 [1:17:09<57:25, 53.84s/it] 58% 87/150 [1:18:02<56:31, 53.84s/it] 59% 88/150 [1:18:56<55:38, 53.84s/it] 59% 89/150 [1:19:50<54:44, 53.85s/it] 60% 90/150 [1:20:44<53:50, 53.85s/it] 61% 91/150 [1:21:38<52:57, 53.85s/it] 61% 92/150 [1:22:32<52:02, 53.84s/it] 62% 93/150 [1:23:26<51:09, 53.84s/it] 63% 94/150 [1:24:19<50:15, 53.85s/it] 63% 95/150 [1:25:13<49:21, 53.85s/it] 64% 96/150 [1:26:07<48:28, 53.85s/it] 65% 97/150 [1:27:01<47:34, 53.85s/it] 65% 98/150 [1:27:55<46:39, 53.84s/it] 66% 99/150 [1:28:49<45:46, 53.84s/it] 67% 100/150 [1:29:42<44:52, 53.85s/it] 67% 101/150 [1:30:36<43:58, 53.84s/it] 68% 102/150 [1:31:30<43:03, 53.83s/it] 69% 103/150 [1:32:24<42:10, 53.85s/it] 69% 104/150 [1:33:18<41:16, 53.84s/it] 70% 105/150 [1:34:12<40:23, 53.85s/it] 71% 106/150 [1:35:06<39:29, 53.85s/it] 71% 107/150 [1:35:59<38:35, 53.86s/it] 72% 108/150 [1:36:53<37:41, 53.84s/it] 73% 109/150 [1:37:47<36:47, 53.85s/it] 73% 110/150 [1:38:41<35:54, 53.86s/it] 74% 111/150 [1:39:35<35:00, 53.86s/it] 75% 112/150 [1:40:29<34:06, 53.87s/it] 75% 113/150 [1:41:23<33:13, 53.87s/it] 76% 114/150 [1:42:16<32:19, 53.87s/it] 77% 115/150 [1:43:10<31:24, 53.85s/it] 77% 116/150 [1:44:04<30:30, 53.85s/it] 78% 117/150 [1:44:58<29:37, 53.87s/it] 79% 118/150 [1:45:52<28:43, 53.86s/it] 79% 119/150 [1:46:46<27:49, 53.86s/it] 80% 120/150 [1:47:40<26:56, 53.87s/it] 81% 121/150 [1:48:33<26:02, 53.87s/it] 81% 122/150 [1:49:27<25:08, 53.87s/it] 82% 123/150 [1:50:21<24:14, 53.87s/it] 83% 124/150 [1:51:15<23:20, 53.87s/it] 83% 125/150 [1:52:09<22:26, 53.87s/it] 84% 126/150 [1:53:03<21:32, 53.85s/it] 85% 127/150 [1:53:57<20:38, 53.86s/it] 85% 128/150 [1:54:50<19:44, 53.85s/it] 86% 129/150 [1:55:44<18:50, 53.84s/it] 87% 130/150 [1:56:38<17:56, 53.84s/it] 87% 131/150 [1:57:32<17:03, 53.86s/it] 88% 132/150 [1:58:26<16:09, 53.88s/it] 89% 133/150 [1:59:20<15:15, 53.86s/it] 89% 134/150 [2:00:14<14:21, 53.85s/it] 90% 135/150 [2:01:07<13:27, 53.85s/it] 91% 136/150 [2:02:01<12:33, 53.84s/it] 91% 137/150 [2:02:55<11:39, 53.84s/it] 92% 138/150 [2:03:49<10:46, 53.85s/it] 93% 139/150 [2:04:43<09:52, 53.86s/it] 93% 140/150 [2:05:37<08:58, 53.86s/it] 94% 141/150 [2:06:31<08:04, 53.85s/it] 95% 142/150 [2:07:24<07:10, 53.85s/it] 95% 143/150 [2:08:18<06:16, 53.86s/it] 96% 144/150 [2:09:12<05:23, 53.86s/it] 97% 145/150 [2:10:06<04:29, 53.87s/it] 97% 146/150 [2:11:00<03:35, 53.85s/it] 98% 147/150 [2:11:54<02:41, 53.85s/it] 99% 148/150 [2:12:48<01:47, 53.84s/it] 99% 149/150 [2:13:41<00:53, 53.83s/it]100% 150/150 [2:14:35<00:00, 53.85s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6efad80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6cc28c0] Warning: data is not aligned! This can lead to a speed loss
120.15528313667822 (1014, 1352, 3)
120.20846049780393 (1014, 1352, 3)
120.24325687903863 (1014, 1352, 3)
120.27590410777712 (1014, 1352, 3)
120.27841943559399 (1014, 1352, 3)
120.29348271146746 (1014, 1352, 3)
120.31874345941824 (1014, 1352, 3)
120.32853050391171 (1014, 1352, 3)
120.34351524417524 (1014, 1352, 3)
120.34430303171769 (1014, 1352, 3)
120.36055066349218 (1014, 1352, 3)
120.3525339526705 (1014, 1352, 3)
120.36605617995012 (1014, 1352, 3)
120.36868602873382 (1014, 1352, 3)
120.38555562363597 (1014, 1352, 3)
120.38687589720247 (1014, 1352, 3)
120.3981979116822 (1014, 1352, 3)
120.40111758847534 (1014, 1352, 3)
120.40160071620586 (1014, 1352, 3)
120.39997481025019 (1014, 1352, 3)
120.39322123408377 (1014, 1352, 3)
120.40096416442002 (1014, 1352, 3)
120.39764329952655 (1014, 1352, 3)
120.40445401460421 (1014, 1352, 3)
120.39580658745997 (1014, 1352, 3)
120.40250667187968 (1014, 1352, 3)
120.39781933600209 (1014, 1352, 3)
120.41012243774533 (1014, 1352, 3)
120.42045752949826 (1014, 1352, 3)
120.43105813483032 (1014, 1352, 3)
120.42994453392154 (1014, 1352, 3)
120.42303899256562 (1014, 1352, 3)
120.42661418640026 (1014, 1352, 3)
120.41909203109135 (1014, 1352, 3)
120.42615585938867 (1014, 1352, 3)
120.42067976339142 (1014, 1352, 3)
120.43071189734253 (1014, 1352, 3)
120.41947814424488 (1014, 1352, 3)
120.42145369170858 (1014, 1352, 3)
120.41829451777677 (1014, 1352, 3)
120.42305042034788 (1014, 1352, 3)
120.4209805328945 (1014, 1352, 3)
120.41983313492759 (1014, 1352, 3)
120.4274841567172 (1014, 1352, 3)
120.42433543799042 (1014, 1352, 3)
120.4302871242448 (1014, 1352, 3)
120.42085020754797 (1014, 1352, 3)
120.42220111729671 (1014, 1352, 3)
120.40483575116029 (1014, 1352, 3)
120.40817242043346 (1014, 1352, 3)
120.40462251360636 (1014, 1352, 3)
120.41492623974418 (1014, 1352, 3)
120.41259521530914 (1014, 1352, 3)
120.41415133884979 (1014, 1352, 3)
120.4125548533548 (1014, 1352, 3)
120.40922158810189 (1014, 1352, 3)
120.4156444880159 (1014, 1352, 3)
120.41543100731766 (1014, 1352, 3)
120.42599757244727 (1014, 1352, 3)
120.41597637998981 (1014, 1352, 3)
120.41913458134441 (1014, 1352, 3)
120.41047305183058 (1014, 1352, 3)
120.41525861800669 (1014, 1352, 3)
120.41174153566051 (1014, 1352, 3)
120.41461939163351 (1014, 1352, 3)
120.41617405630834 (1014, 1352, 3)
120.41625016047524 (1014, 1352, 3)
120.4195705390801 (1014, 1352, 3)
120.41366383452183 (1014, 1352, 3)
120.41890578255507 (1014, 1352, 3)
120.40823879882824 (1014, 1352, 3)
120.41371294967108 (1014, 1352, 3)
120.40861615878684 (1014, 1352, 3)
120.41872464004918 (1014, 1352, 3)
120.4170238456481 (1014, 1352, 3)
120.4212210026104 (1014, 1352, 3)
120.41751280884189 (1014, 1352, 3)
120.41454158545648 (1014, 1352, 3)
120.41706031729359 (1014, 1352, 3)
120.41394782706799 (1014, 1352, 3)
120.42419830460341 (1014, 1352, 3)
120.41911634552167 (1014, 1352, 3)
120.42654464712953 (1014, 1352, 3)
120.41585578041541 (1014, 1352, 3)
120.42380951686255 (1014, 1352, 3)
120.42040938692622 (1014, 1352, 3)
120.42735869425674 (1014, 1352, 3)
120.42786394811884 (1014, 1352, 3)
120.43164994806438 (1014, 1352, 3)
120.43308231115468 (1014, 1352, 3)
120.42908088535648 (1014, 1352, 3)
120.43356884290544 (1014, 1352, 3)
120.42693538002482 (1014, 1352, 3)
120.43234947422476 (1014, 1352, 3)
120.4280110504223 (1014, 1352, 3)
120.43979771366548 (1014, 1352, 3)
120.43844583133955 (1014, 1352, 3)
120.44445173877354 (1014, 1352, 3)
120.44244822971496 (1014, 1352, 3)
120.44410598757436 (1014, 1352, 3)
120.44840818287564 (1014, 1352, 3)
120.45319472162895 (1014, 1352, 3)
120.46710962695829 (1014, 1352, 3)
120.46899715618423 (1014, 1352, 3)
120.47697034417563 (1014, 1352, 3)
120.46789935965516 (1014, 1352, 3)
120.46862976514205 (1014, 1352, 3)
120.46182464238336 (1014, 1352, 3)
120.46615163840357 (1014, 1352, 3)
120.46835379635789 (1014, 1352, 3)
120.47224410520951 (1014, 1352, 3)
120.47693654711748 (1014, 1352, 3)
120.47547500671078 (1014, 1352, 3)
120.47914381110216 (1014, 1352, 3)
120.4721531692401 (1014, 1352, 3)
120.48084436235892 (1014, 1352, 3)
120.47821499986384 (1014, 1352, 3)
120.4867515532058 (1014, 1352, 3)
120.47896315488487 (1014, 1352, 3)
120.47839614236975 (1014, 1352, 3)
120.47244421297107 (1014, 1352, 3)
120.46644268213454 (1014, 1352, 3)
120.46455320775416 (1014, 1352, 3)
120.46372846227761 (1014, 1352, 3)
120.47498045119802 (1014, 1352, 3)
120.47102133250858 (1014, 1352, 3)
120.47934586401814 (1014, 1352, 3)
120.47417856128598 (1014, 1352, 3)
120.4795763648176 (1014, 1352, 3)
120.47403000011671 (1014, 1352, 3)
120.47946767931406 (1014, 1352, 3)
120.4815961645445 (1014, 1352, 3)
120.48776449237305 (1014, 1352, 3)
120.49073839034581 (1014, 1352, 3)
120.48705888760509 (1014, 1352, 3)
120.48528587934597 (1014, 1352, 3)
120.47708024540069 (1014, 1352, 3)
120.48402590556664 (1014, 1352, 3)
120.47907208353271 (1014, 1352, 3)
120.48976775828733 (1014, 1352, 3)
120.48374191302048 (1014, 1352, 3)
120.48732148345258 (1014, 1352, 3)
120.47374722329205 (1014, 1352, 3)
120.47017470404475 (1014, 1352, 3)
120.4678869592957 (1014, 1352, 3)
120.46578497679431 (1014, 1352, 3)
120.47109087177931 (1014, 1352, 3)
120.46786142914387 (1014, 1352, 3)
120.47676245579636 (1014, 1352, 3)
120.46044309645242 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:14:38<00:00, 53.86s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
