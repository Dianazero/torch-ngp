nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=15, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_08-11-47 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:57, 53.54s/it]  1% 2/150 [01:46<2:10:59, 53.11s/it]  2% 3/150 [02:39<2:09:47, 52.98s/it]  3% 4/150 [03:32<2:08:47, 52.93s/it]  3% 5/150 [04:24<2:07:50, 52.90s/it]  4% 6/150 [05:17<2:06:54, 52.88s/it]  5% 7/150 [06:10<2:06:00, 52.87s/it]  5% 8/150 [07:03<2:05:05, 52.85s/it]  6% 9/150 [07:56<2:04:12, 52.85s/it]  7% 10/150 [08:49<2:03:19, 52.85s/it]  7% 11/150 [09:41<2:02:28, 52.87s/it]  8% 12/150 [10:34<2:01:34, 52.86s/it]  9% 13/150 [11:27<2:00:42, 52.87s/it]  9% 14/150 [12:20<1:59:49, 52.86s/it] 10% 15/150 [13:13<1:58:57, 52.87s/it] 11% 16/150 [14:06<1:58:03, 52.86s/it] 11% 17/150 [14:59<1:57:11, 52.87s/it] 12% 18/150 [15:52<1:56:18, 52.87s/it] 13% 19/150 [16:44<1:55:25, 52.87s/it] 13% 20/150 [17:37<1:54:32, 52.87s/it] 14% 21/150 [18:30<1:53:40, 52.87s/it] 15% 22/150 [19:23<1:52:47, 52.87s/it] 15% 23/150 [20:16<1:51:54, 52.87s/it] 16% 24/150 [21:09<1:51:01, 52.87s/it] 17% 25/150 [22:02<1:50:08, 52.87s/it] 17% 26/150 [22:54<1:49:15, 52.87s/it] 18% 27/150 [23:47<1:48:23, 52.87s/it] 19% 28/150 [24:40<1:47:30, 52.87s/it] 19% 29/150 [25:33<1:46:37, 52.87s/it] 20% 30/150 [26:26<1:45:44, 52.87s/it] 21% 31/150 [27:19<1:44:52, 52.88s/it] 21% 32/150 [28:12<1:43:59, 52.88s/it] 22% 33/150 [29:05<1:43:07, 52.88s/it] 23% 34/150 [29:58<1:42:14, 52.88s/it] 23% 35/150 [30:50<1:41:21, 52.89s/it] 24% 36/150 [31:43<1:40:28, 52.88s/it] 25% 37/150 [32:36<1:39:35, 52.88s/it] 25% 38/150 [33:29<1:38:42, 52.88s/it] 26% 39/150 [34:22<1:37:49, 52.88s/it] 27% 40/150 [35:15<1:36:56, 52.88s/it] 27% 41/150 [36:08<1:36:03, 52.88s/it] 28% 42/150 [37:01<1:35:10, 52.88s/it] 29% 43/150 [37:53<1:34:17, 52.88s/it] 29% 44/150 [38:46<1:33:24, 52.88s/it] 30% 45/150 [39:39<1:32:32, 52.88s/it] 31% 46/150 [40:32<1:31:38, 52.87s/it] 31% 47/150 [41:25<1:30:45, 52.87s/it] 32% 48/150 [42:18<1:29:53, 52.88s/it] 33% 49/150 [43:11<1:29:00, 52.88s/it] 33% 50/150 [44:04<1:28:07, 52.87s/it] 34% 51/150 [44:56<1:27:14, 52.87s/it] 35% 52/150 [45:49<1:26:21, 52.87s/it] 35% 53/150 [46:42<1:25:28, 52.87s/it] 36% 54/150 [47:35<1:24:35, 52.87s/it] 37% 55/150 [48:28<1:23:43, 52.88s/it] 37% 56/150 [49:21<1:22:50, 52.88s/it] 38% 57/150 [50:14<1:21:58, 52.88s/it] 39% 58/150 [51:07<1:21:05, 52.88s/it] 39% 59/150 [51:59<1:20:12, 52.89s/it] 40% 60/150 [52:52<1:19:20, 52.89s/it] 41% 61/150 [53:45<1:18:27, 52.89s/it] 41% 62/150 [54:38<1:17:34, 52.89s/it] 42% 63/150 [55:31<1:16:41, 52.89s/it] 43% 64/150 [56:24<1:15:48, 52.89s/it] 43% 65/150 [57:17<1:14:55, 52.89s/it] 44% 66/150 [58:10<1:14:02, 52.89s/it] 45% 67/150 [59:03<1:13:10, 52.90s/it] 45% 68/150 [59:56<1:12:17, 52.89s/it] 46% 69/150 [1:00:48<1:11:24, 52.89s/it] 47% 70/150 [1:01:41<1:10:31, 52.89s/it] 47% 71/150 [1:02:34<1:09:38, 52.89s/it] 48% 72/150 [1:03:27<1:08:45, 52.89s/it] 49% 73/150 [1:04:20<1:07:52, 52.89s/it] 49% 74/150 [1:05:13<1:06:59, 52.89s/it] 50% 75/150 [1:06:06<1:06:06, 52.89s/it] 51% 76/150 [1:06:59<1:05:13, 52.89s/it] 51% 77/150 [1:07:52<1:04:20, 52.89s/it] 52% 78/150 [1:08:44<1:03:27, 52.89s/it] 53% 79/150 [1:09:37<1:02:34, 52.89s/it] 53% 80/150 [1:10:30<1:01:42, 52.89s/it] 54% 81/150 [1:11:23<1:00:49, 52.90s/it] 55% 82/150 [1:12:16<59:56, 52.89s/it]   55% 83/150 [1:13:09<59:03, 52.89s/it] 56% 84/150 [1:14:02<58:09, 52.87s/it] 57% 85/150 [1:14:55<57:16, 52.88s/it] 57% 86/150 [1:15:47<56:23, 52.87s/it] 58% 87/150 [1:16:40<55:31, 52.88s/it] 59% 88/150 [1:17:33<54:38, 52.89s/it] 59% 89/150 [1:18:26<53:46, 52.89s/it] 60% 90/150 [1:19:19<52:53, 52.89s/it] 61% 91/150 [1:20:12<52:00, 52.89s/it] 61% 92/150 [1:21:05<51:07, 52.89s/it] 62% 93/150 [1:21:58<50:14, 52.89s/it] 63% 94/150 [1:22:51<49:21, 52.88s/it] 63% 95/150 [1:23:43<48:28, 52.88s/it] 64% 96/150 [1:24:36<47:35, 52.88s/it] 65% 97/150 [1:25:29<46:42, 52.88s/it] 65% 98/150 [1:26:22<45:49, 52.88s/it] 66% 99/150 [1:27:15<44:57, 52.88s/it] 67% 100/150 [1:28:08<44:04, 52.88s/it] 67% 101/150 [1:29:01<43:10, 52.87s/it] 68% 102/150 [1:29:54<42:17, 52.87s/it] 69% 103/150 [1:30:46<41:25, 52.87s/it] 69% 104/150 [1:31:39<40:31, 52.86s/it] 70% 105/150 [1:32:32<39:39, 52.87s/it] 71% 106/150 [1:33:25<38:46, 52.87s/it] 71% 107/150 [1:34:18<37:53, 52.87s/it] 72% 108/150 [1:35:11<37:00, 52.87s/it] 73% 109/150 [1:36:04<36:07, 52.87s/it] 73% 110/150 [1:36:57<35:15, 52.88s/it] 74% 111/150 [1:37:49<34:22, 52.88s/it] 75% 112/150 [1:38:42<33:29, 52.88s/it] 75% 113/150 [1:39:35<32:36, 52.87s/it] 76% 114/150 [1:40:28<31:43, 52.87s/it] 77% 115/150 [1:41:21<30:50, 52.87s/it] 77% 116/150 [1:42:14<29:57, 52.87s/it] 78% 117/150 [1:43:07<29:04, 52.87s/it] 79% 118/150 [1:44:00<28:11, 52.87s/it] 79% 119/150 [1:44:52<27:19, 52.87s/it] 80% 120/150 [1:45:45<26:26, 52.87s/it] 81% 121/150 [1:46:38<25:33, 52.88s/it] 81% 122/150 [1:47:31<24:40, 52.88s/it] 82% 123/150 [1:48:24<23:47, 52.87s/it] 83% 124/150 [1:49:17<22:54, 52.87s/it] 83% 125/150 [1:50:10<22:01, 52.87s/it] 84% 126/150 [1:51:03<21:08, 52.87s/it] 85% 127/150 [1:51:55<20:16, 52.87s/it] 85% 128/150 [1:52:48<19:23, 52.87s/it] 86% 129/150 [1:53:41<18:30, 52.87s/it] 87% 130/150 [1:54:34<17:37, 52.88s/it] 87% 131/150 [1:55:27<16:44, 52.88s/it] 88% 132/150 [1:56:20<15:51, 52.86s/it] 89% 133/150 [1:57:13<14:58, 52.87s/it] 89% 134/150 [1:58:06<14:05, 52.87s/it] 90% 135/150 [1:58:58<13:13, 52.88s/it] 91% 136/150 [1:59:51<12:20, 52.88s/it] 91% 137/150 [2:00:45<11:30, 53.09s/it] 92% 138/150 [2:01:38<10:36, 53.05s/it] 93% 139/150 [2:02:31<09:42, 53.00s/it] 93% 140/150 [2:03:24<08:49, 52.95s/it] 94% 141/150 [2:04:16<07:56, 52.92s/it] 95% 142/150 [2:05:09<07:03, 52.91s/it] 95% 143/150 [2:06:02<06:10, 52.91s/it] 96% 144/150 [2:06:55<05:17, 52.90s/it] 97% 145/150 [2:07:48<04:24, 52.89s/it] 97% 146/150 [2:08:41<03:31, 52.88s/it] 98% 147/150 [2:09:34<02:38, 52.88s/it] 99% 148/150 [2:10:27<01:45, 52.88s/it] 99% 149/150 [2:11:19<00:52, 52.88s/it]100% 150/150 [2:12:12<00:00, 52.90s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6bc8d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x55738c0] Warning: data is not aligned! This can lead to a speed loss
120.13589335107314 (1014, 1352, 3)
120.2254314838805 (1014, 1352, 3)
120.2739805931943 (1014, 1352, 3)
120.29659909200191 (1014, 1352, 3)
120.28878905383799 (1014, 1352, 3)
120.2987993048018 (1014, 1352, 3)
120.30450079556816 (1014, 1352, 3)
120.294592908356 (1014, 1352, 3)
120.29020974600174 (1014, 1352, 3)
120.28923230590277 (1014, 1352, 3)
120.29573349828243 (1014, 1352, 3)
120.2788867589448 (1014, 1352, 3)
120.27807149609608 (1014, 1352, 3)
120.27420404280896 (1014, 1352, 3)
120.28175221455831 (1014, 1352, 3)
120.27924758509079 (1014, 1352, 3)
120.2918570486561 (1014, 1352, 3)
120.29338326544745 (1014, 1352, 3)
120.28741990826651 (1014, 1352, 3)
120.27516956883707 (1014, 1352, 3)
120.2724730985143 (1014, 1352, 3)
120.27589340942778 (1014, 1352, 3)
120.27033877782057 (1014, 1352, 3)
120.2746521577598 (1014, 1352, 3)
120.26823193243311 (1014, 1352, 3)
120.26693062412225 (1014, 1352, 3)
120.25488501219611 (1014, 1352, 3)
120.26287716544317 (1014, 1352, 3)
120.26850814436158 (1014, 1352, 3)
120.26863263424484 (1014, 1352, 3)
120.26032633855802 (1014, 1352, 3)
120.25463943644986 (1014, 1352, 3)
120.2544840672401 (1014, 1352, 3)
120.24232053032691 (1014, 1352, 3)
120.24290577866476 (1014, 1352, 3)
120.2382814171617 (1014, 1352, 3)
120.24452439029135 (1014, 1352, 3)
120.23076290901734 (1014, 1352, 3)
120.23496492886571 (1014, 1352, 3)
120.23764486537586 (1014, 1352, 3)
120.23770492201876 (1014, 1352, 3)
120.23020464969714 (1014, 1352, 3)
120.22929674886889 (1014, 1352, 3)
120.24004591537022 (1014, 1352, 3)
120.2370749351291 (1014, 1352, 3)
120.24496739921182 (1014, 1352, 3)
120.24295902726718 (1014, 1352, 3)
120.24663074939019 (1014, 1352, 3)
120.22847030138223 (1014, 1352, 3)
120.23101456337119 (1014, 1352, 3)
120.2376482693961 (1014, 1352, 3)
120.24843755470746 (1014, 1352, 3)
120.24492849612331 (1014, 1352, 3)
120.2462614131936 (1014, 1352, 3)
120.24748540161603 (1014, 1352, 3)
120.24255005854914 (1014, 1352, 3)
120.24522051243149 (1014, 1352, 3)
120.24908188711102 (1014, 1352, 3)
120.25880109434388 (1014, 1352, 3)
120.24740540714028 (1014, 1352, 3)
120.24661980789655 (1014, 1352, 3)
120.24003594645379 (1014, 1352, 3)
120.24251139860493 (1014, 1352, 3)
120.22757407148053 (1014, 1352, 3)
120.22514724819004 (1014, 1352, 3)
120.21989703325048 (1014, 1352, 3)
120.21325311516482 (1014, 1352, 3)
120.21293070581874 (1014, 1352, 3)
120.21544870822295 (1014, 1352, 3)
120.22562964648763 (1014, 1352, 3)
120.21386851339628 (1014, 1352, 3)
120.21847026247914 (1014, 1352, 3)
120.21782349863255 (1014, 1352, 3)
120.23258333041561 (1014, 1352, 3)
120.2332835860089 (1014, 1352, 3)
120.24294200716595 (1014, 1352, 3)
120.24118917988399 (1014, 1352, 3)
120.2340074265996 (1014, 1352, 3)
120.22915742718314 (1014, 1352, 3)
120.23151762893455 (1014, 1352, 3)
120.24374851681975 (1014, 1352, 3)
120.23791524184105 (1014, 1352, 3)
120.24153809195911 (1014, 1352, 3)
120.23545510778101 (1014, 1352, 3)
120.23836505880202 (1014, 1352, 3)
120.22783909877106 (1014, 1352, 3)
120.23078649401477 (1014, 1352, 3)
120.2290640597707 (1014, 1352, 3)
120.22238707405981 (1014, 1352, 3)
120.21648815011923 (1014, 1352, 3)
120.21604368233294 (1014, 1352, 3)
120.22107749884263 (1014, 1352, 3)
120.21135731903256 (1014, 1352, 3)
120.20830366972834 (1014, 1352, 3)
120.20375541239218 (1014, 1352, 3)
120.21040176192088 (1014, 1352, 3)
120.20852395846707 (1014, 1352, 3)
120.2207665172788 (1014, 1352, 3)
120.2285357071998 (1014, 1352, 3)
120.22736277908103 (1014, 1352, 3)
120.22450048434345 (1014, 1352, 3)
120.22873630124995 (1014, 1352, 3)
120.24293641484698 (1014, 1352, 3)
120.24525601149975 (1014, 1352, 3)
120.2585241529825 (1014, 1352, 3)
120.26380135693972 (1014, 1352, 3)
120.27059432248326 (1014, 1352, 3)
120.25860949663294 (1014, 1352, 3)
120.26465552287696 (1014, 1352, 3)
120.26905765048687 (1014, 1352, 3)
120.27258154087353 (1014, 1352, 3)
120.27429619449988 (1014, 1352, 3)
120.27881770596268 (1014, 1352, 3)
120.28543293302056 (1014, 1352, 3)
120.27830224003984 (1014, 1352, 3)
120.28660148454186 (1014, 1352, 3)
120.28559583970372 (1014, 1352, 3)
120.29566955133068 (1014, 1352, 3)
120.28959507720317 (1014, 1352, 3)
120.30039165684364 (1014, 1352, 3)
120.3036373901474 (1014, 1352, 3)
120.29934589319546 (1014, 1352, 3)
120.28938670253531 (1014, 1352, 3)
120.28698735455107 (1014, 1352, 3)
120.29928194624371 (1014, 1352, 3)
120.30085970962735 (1014, 1352, 3)
120.31574257242782 (1014, 1352, 3)
120.31909942267816 (1014, 1352, 3)
120.32881084929332 (1014, 1352, 3)
120.31862650700839 (1014, 1352, 3)
120.32452980754643 (1014, 1352, 3)
120.33044793988695 (1014, 1352, 3)
120.33535702336908 (1014, 1352, 3)
120.33627635197958 (1014, 1352, 3)
120.3346798664846 (1014, 1352, 3)
120.33547665036627 (1014, 1352, 3)
120.32221069718224 (1014, 1352, 3)
120.32506642702364 (1014, 1352, 3)
120.31824233900929 (1014, 1352, 3)
120.32502022960603 (1014, 1352, 3)
120.31438436835 (1014, 1352, 3)
120.32107910359504 (1014, 1352, 3)
120.31267409132111 (1014, 1352, 3)
120.30734801535894 (1014, 1352, 3)
120.29736061995962 (1014, 1352, 3)
120.29439523203747 (1014, 1352, 3)
120.29041763438099 (1014, 1352, 3)
120.27999841469914 (1014, 1352, 3)
120.28216239899785 (1014, 1352, 3)
120.26884562865446 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:15<00:00, 52.90s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
