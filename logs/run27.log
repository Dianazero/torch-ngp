nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=27, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_05-48-04 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:54<2:14:45, 54.27s/it]  1% 2/150 [01:47<2:12:01, 53.52s/it]  2% 3/150 [02:40<2:10:37, 53.32s/it]  3% 4/150 [03:33<2:09:30, 53.22s/it]  3% 5/150 [04:26<2:08:30, 53.17s/it]  4% 6/150 [05:19<2:07:33, 53.15s/it]  5% 7/150 [06:12<2:06:37, 53.13s/it]  5% 8/150 [07:05<2:05:43, 53.12s/it]  6% 9/150 [07:58<2:04:49, 53.12s/it]  7% 10/150 [08:52<2:03:56, 53.12s/it]  7% 11/150 [09:45<2:03:03, 53.12s/it]  8% 12/150 [10:38<2:02:10, 53.12s/it]  9% 13/150 [11:31<2:01:18, 53.13s/it]  9% 14/150 [12:24<2:00:24, 53.12s/it] 10% 15/150 [13:17<1:59:32, 53.13s/it] 11% 16/150 [14:10<1:58:40, 53.13s/it] 11% 17/150 [15:03<1:57:47, 53.14s/it] 12% 18/150 [15:57<1:56:54, 53.14s/it] 13% 19/150 [16:50<1:56:01, 53.14s/it] 13% 20/150 [17:43<1:55:08, 53.14s/it] 14% 21/150 [18:36<1:54:15, 53.15s/it] 15% 22/150 [19:29<1:53:22, 53.15s/it] 15% 23/150 [20:22<1:52:29, 53.15s/it] 16% 24/150 [21:16<1:51:37, 53.15s/it] 17% 25/150 [22:09<1:50:43, 53.15s/it] 17% 26/150 [23:02<1:49:50, 53.15s/it] 18% 27/150 [23:55<1:48:57, 53.15s/it] 19% 28/150 [24:48<1:48:04, 53.15s/it] 19% 29/150 [25:41<1:47:11, 53.15s/it] 20% 30/150 [26:34<1:46:18, 53.15s/it] 21% 31/150 [27:28<1:45:26, 53.16s/it] 21% 32/150 [28:21<1:44:32, 53.16s/it] 22% 33/150 [29:14<1:43:39, 53.16s/it] 23% 34/150 [30:07<1:42:46, 53.16s/it] 23% 35/150 [31:00<1:41:53, 53.16s/it] 24% 36/150 [31:53<1:41:00, 53.16s/it] 25% 37/150 [32:47<1:40:07, 53.16s/it] 25% 38/150 [33:40<1:39:14, 53.16s/it] 26% 39/150 [34:33<1:38:20, 53.16s/it] 27% 40/150 [35:26<1:37:27, 53.16s/it] 27% 41/150 [36:19<1:36:34, 53.16s/it] 28% 42/150 [37:12<1:35:41, 53.16s/it] 29% 43/150 [38:06<1:34:48, 53.16s/it] 29% 44/150 [38:59<1:33:55, 53.17s/it] 30% 45/150 [39:52<1:33:02, 53.17s/it] 31% 46/150 [40:45<1:32:08, 53.16s/it] 31% 47/150 [41:38<1:31:15, 53.16s/it] 32% 48/150 [42:31<1:30:23, 53.17s/it] 33% 49/150 [43:25<1:29:29, 53.16s/it] 33% 50/150 [44:18<1:28:36, 53.16s/it] 34% 51/150 [45:11<1:27:43, 53.16s/it] 35% 52/150 [46:04<1:26:50, 53.17s/it] 35% 53/150 [46:57<1:25:56, 53.16s/it] 36% 54/150 [47:50<1:25:03, 53.16s/it] 37% 55/150 [48:43<1:24:09, 53.16s/it] 37% 56/150 [49:37<1:23:16, 53.16s/it] 38% 57/150 [50:30<1:22:23, 53.16s/it] 39% 58/150 [51:23<1:21:30, 53.16s/it] 39% 59/150 [52:16<1:20:37, 53.16s/it] 40% 60/150 [53:09<1:19:44, 53.16s/it] 41% 61/150 [54:02<1:18:51, 53.16s/it] 41% 62/150 [54:56<1:17:58, 53.16s/it] 42% 63/150 [55:49<1:17:05, 53.16s/it] 43% 64/150 [56:42<1:16:12, 53.16s/it] 43% 65/150 [57:35<1:15:19, 53.17s/it] 44% 66/150 [58:28<1:14:26, 53.17s/it] 45% 67/150 [59:21<1:13:33, 53.17s/it] 45% 68/150 [1:00:15<1:12:40, 53.17s/it] 46% 69/150 [1:01:08<1:11:47, 53.18s/it] 47% 70/150 [1:02:01<1:10:53, 53.17s/it] 47% 71/150 [1:02:54<1:10:00, 53.18s/it] 48% 72/150 [1:03:47<1:09:06, 53.16s/it] 49% 73/150 [1:04:40<1:08:13, 53.16s/it] 49% 74/150 [1:05:34<1:07:20, 53.16s/it] 50% 75/150 [1:06:27<1:06:27, 53.16s/it] 51% 76/150 [1:07:20<1:05:34, 53.17s/it] 51% 77/150 [1:08:13<1:04:40, 53.16s/it] 52% 78/150 [1:09:06<1:03:47, 53.16s/it] 53% 79/150 [1:09:59<1:02:54, 53.16s/it] 53% 80/150 [1:10:53<1:02:01, 53.17s/it] 54% 81/150 [1:11:46<1:01:08, 53.17s/it] 55% 82/150 [1:12:39<1:00:15, 53.17s/it] 55% 83/150 [1:13:32<59:22, 53.17s/it]   56% 84/150 [1:14:25<58:29, 53.17s/it] 57% 85/150 [1:15:18<57:36, 53.17s/it] 57% 86/150 [1:16:12<56:43, 53.17s/it] 58% 87/150 [1:17:05<55:49, 53.17s/it] 59% 88/150 [1:17:58<54:56, 53.17s/it] 59% 89/150 [1:18:51<54:03, 53.17s/it] 60% 90/150 [1:19:44<53:10, 53.17s/it] 61% 91/150 [1:20:38<52:17, 53.17s/it] 61% 92/150 [1:21:31<51:23, 53.16s/it] 62% 93/150 [1:22:24<50:30, 53.16s/it] 63% 94/150 [1:23:17<49:37, 53.17s/it] 63% 95/150 [1:24:10<48:44, 53.17s/it] 64% 96/150 [1:25:03<47:50, 53.17s/it] 65% 97/150 [1:25:56<46:57, 53.16s/it] 65% 98/150 [1:26:50<46:04, 53.16s/it] 66% 99/150 [1:27:43<45:11, 53.16s/it] 67% 100/150 [1:28:36<44:18, 53.16s/it] 67% 101/150 [1:29:29<43:25, 53.16s/it] 68% 102/150 [1:30:22<42:31, 53.16s/it] 69% 103/150 [1:31:15<41:38, 53.17s/it] 69% 104/150 [1:32:09<40:45, 53.17s/it] 70% 105/150 [1:33:02<39:52, 53.17s/it] 71% 106/150 [1:33:55<38:59, 53.16s/it] 71% 107/150 [1:34:48<38:05, 53.16s/it] 72% 108/150 [1:35:41<37:12, 53.16s/it] 73% 109/150 [1:36:34<36:19, 53.16s/it] 73% 110/150 [1:37:28<35:26, 53.16s/it] 74% 111/150 [1:38:21<34:33, 53.15s/it] 75% 112/150 [1:39:14<33:39, 53.16s/it] 75% 113/150 [1:40:07<32:46, 53.16s/it] 76% 114/150 [1:41:00<31:53, 53.16s/it] 77% 115/150 [1:41:53<31:00, 53.16s/it] 77% 116/150 [1:42:47<30:07, 53.16s/it] 78% 117/150 [1:43:40<29:14, 53.17s/it] 79% 118/150 [1:44:33<28:21, 53.16s/it] 79% 119/150 [1:45:26<27:27, 53.16s/it] 80% 120/150 [1:46:19<26:35, 53.17s/it] 81% 121/150 [1:47:12<25:41, 53.17s/it] 81% 122/150 [1:48:06<24:48, 53.16s/it] 82% 123/150 [1:48:59<23:55, 53.16s/it] 83% 124/150 [1:49:52<23:02, 53.16s/it] 83% 125/150 [1:50:45<22:08, 53.16s/it] 84% 126/150 [1:51:38<21:15, 53.16s/it] 85% 127/150 [1:52:31<20:22, 53.16s/it] 85% 128/150 [1:53:24<19:29, 53.16s/it] 86% 129/150 [1:54:18<18:36, 53.16s/it] 87% 130/150 [1:55:11<17:43, 53.15s/it] 87% 131/150 [1:56:04<16:49, 53.15s/it] 88% 132/150 [1:56:57<15:56, 53.15s/it] 89% 133/150 [1:57:50<15:03, 53.16s/it] 89% 134/150 [1:58:43<14:10, 53.16s/it] 90% 135/150 [1:59:37<13:17, 53.16s/it] 91% 136/150 [2:00:30<12:24, 53.16s/it] 91% 137/150 [2:01:23<11:31, 53.16s/it] 92% 138/150 [2:02:16<10:37, 53.16s/it] 93% 139/150 [2:03:09<09:44, 53.15s/it] 93% 140/150 [2:04:02<08:51, 53.16s/it] 94% 141/150 [2:04:56<07:58, 53.16s/it] 95% 142/150 [2:05:49<07:05, 53.17s/it] 95% 143/150 [2:06:42<06:12, 53.16s/it] 96% 144/150 [2:07:35<05:18, 53.16s/it] 97% 145/150 [2:08:28<04:25, 53.16s/it] 97% 146/150 [2:09:21<03:32, 53.15s/it] 98% 147/150 [2:10:14<02:39, 53.15s/it] 99% 148/150 [2:11:08<01:46, 53.14s/it] 99% 149/150 [2:12:01<00:53, 53.14s/it]100% 150/150 [2:12:54<00:00, 53.15s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5f54d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6eea8c0] Warning: data is not aligned! This can lead to a speed loss
119.9814072414209 (1014, 1352, 3)
120.03224336605084 (1014, 1352, 3)
120.05057596022549 (1014, 1352, 3)
120.05279756972406 (1014, 1352, 3)
120.04123557181704 (1014, 1352, 3)
120.04455351897887 (1014, 1352, 3)
120.05030436803878 (1014, 1352, 3)
120.03695185548281 (1014, 1352, 3)
120.02945595975865 (1014, 1352, 3)
120.01330680142696 (1014, 1352, 3)
120.01049532384876 (1014, 1352, 3)
119.99112109947909 (1014, 1352, 3)
119.99944757614307 (1014, 1352, 3)
119.99692714229583 (1014, 1352, 3)
120.0057510922042 (1014, 1352, 3)
120.00106959178989 (1014, 1352, 3)
120.01208451501465 (1014, 1352, 3)
120.01415829277687 (1014, 1352, 3)
120.01307289660726 (1014, 1352, 3)
120.00917115997339 (1014, 1352, 3)
120.00252553987761 (1014, 1352, 3)
120.00469195561935 (1014, 1352, 3)
120.00242560756898 (1014, 1352, 3)
120.01466354663897 (1014, 1352, 3)
120.01007006446241 (1014, 1352, 3)
120.01496869273952 (1014, 1352, 3)
120.0078681496524 (1014, 1352, 3)
120.02049317445312 (1014, 1352, 3)
120.0294292138853 (1014, 1352, 3)
120.03975093270155 (1014, 1352, 3)
120.03854372123602 (1014, 1352, 3)
120.03084504316298 (1014, 1352, 3)
120.02859693093535 (1014, 1352, 3)
120.0183581243265 (1014, 1352, 3)
120.02657469976542 (1014, 1352, 3)
120.02543240782886 (1014, 1352, 3)
120.03555596403798 (1014, 1352, 3)
120.0206276332528 (1014, 1352, 3)
120.02136800765612 (1014, 1352, 3)
120.01779816299616 (1014, 1352, 3)
120.02425729141136 (1014, 1352, 3)
120.02596270555419 (1014, 1352, 3)
120.0276066041883 (1014, 1352, 3)
120.03593089255357 (1014, 1352, 3)
120.0324225634023 (1014, 1352, 3)
120.04387976611463 (1014, 1352, 3)
120.0406138518337 (1014, 1352, 3)
120.04648068072625 (1014, 1352, 3)
120.02938593419931 (1014, 1352, 3)
120.03210307178787 (1014, 1352, 3)
120.02781400627896 (1014, 1352, 3)
120.0373581496135 (1014, 1352, 3)
120.03774669421006 (1014, 1352, 3)
120.0384734525324 (1014, 1352, 3)
120.03356485533887 (1014, 1352, 3)
120.02444597139066 (1014, 1352, 3)
120.03059120051041 (1014, 1352, 3)
120.03022016230369 (1014, 1352, 3)
120.04119885702725 (1014, 1352, 3)
120.03002856459274 (1014, 1352, 3)
120.03269050842447 (1014, 1352, 3)
120.0214562690382 (1014, 1352, 3)
120.02340628635007 (1014, 1352, 3)
120.01950187512887 (1014, 1352, 3)
120.02432269722894 (1014, 1352, 3)
120.02283416780458 (1014, 1352, 3)
120.01735442464278 (1014, 1352, 3)
120.02004676151239 (1014, 1352, 3)
120.01553400324451 (1014, 1352, 3)
120.02294188073091 (1014, 1352, 3)
120.01468445704904 (1014, 1352, 3)
120.02306272344961 (1014, 1352, 3)
120.01899735069968 (1014, 1352, 3)
120.03038379841976 (1014, 1352, 3)
120.03413478558562 (1014, 1352, 3)
120.04534130652132 (1014, 1352, 3)
120.04500673996009 (1014, 1352, 3)
120.04016598002715 (1014, 1352, 3)
120.0433122673109 (1014, 1352, 3)
120.04134668876362 (1014, 1352, 3)
120.05312119479166 (1014, 1352, 3)
120.04844552984062 (1014, 1352, 3)
120.05755006827492 (1014, 1352, 3)
120.04524477823294 (1014, 1352, 3)
120.05048891456492 (1014, 1352, 3)
120.04603378149692 (1014, 1352, 3)
120.05444560181132 (1014, 1352, 3)
120.05727264062494 (1014, 1352, 3)
120.0589051114768 (1014, 1352, 3)
120.05998418589452 (1014, 1352, 3)
120.05391360207587 (1014, 1352, 3)
120.05810468043057 (1014, 1352, 3)
120.05081788880719 (1014, 1352, 3)
120.0588598866364 (1014, 1352, 3)
120.05516555209319 (1014, 1352, 3)
120.06459760590393 (1014, 1352, 3)
120.06153933685795 (1014, 1352, 3)
120.06854943026427 (1014, 1352, 3)
120.06991152465095 (1014, 1352, 3)
120.0709106045929 (1014, 1352, 3)
120.07668625437174 (1014, 1352, 3)
120.08136580963162 (1014, 1352, 3)
120.09585477866088 (1014, 1352, 3)
120.09708970857696 (1014, 1352, 3)
120.11007653210088 (1014, 1352, 3)
120.10454791693412 (1014, 1352, 3)
120.10636517745644 (1014, 1352, 3)
120.09623748779416 (1014, 1352, 3)
120.10292346984427 (1014, 1352, 3)
120.10571087613646 (1014, 1352, 3)
120.10969868585367 (1014, 1352, 3)
120.11516967582057 (1014, 1352, 3)
120.11275428031232 (1014, 1352, 3)
120.11283476107668 (1014, 1352, 3)
120.10220570786115 (1014, 1352, 3)
120.11291013581068 (1014, 1352, 3)
120.11028320475863 (1014, 1352, 3)
120.11966468455431 (1014, 1352, 3)
120.10926686157114 (1014, 1352, 3)
120.1131447700633 (1014, 1352, 3)
120.10642985384109 (1014, 1352, 3)
120.10306741127178 (1014, 1352, 3)
120.10043707619948 (1014, 1352, 3)
120.10169243023704 (1014, 1352, 3)
120.10984092527106 (1014, 1352, 3)
120.10457879626064 (1014, 1352, 3)
120.11331618679706 (1014, 1352, 3)
120.11081058475233 (1014, 1352, 3)
120.11775891950562 (1014, 1352, 3)
120.10968725807142 (1014, 1352, 3)
120.11823791378298 (1014, 1352, 3)
120.12153373481321 (1014, 1352, 3)
120.12954339445008 (1014, 1352, 3)
120.13314193013784 (1014, 1352, 3)
120.13321560286171 (1014, 1352, 3)
120.12945805079966 (1014, 1352, 3)
120.11822599971212 (1014, 1352, 3)
120.12558524833787 (1014, 1352, 3)
120.12251214748939 (1014, 1352, 3)
120.13514714120655 (1014, 1352, 3)
120.12793864204879 (1014, 1352, 3)
120.13475032970368 (1014, 1352, 3)
120.11662124731082 (1014, 1352, 3)
120.11250286910278 (1014, 1352, 3)
120.10846788939074 (1014, 1352, 3)
120.11046872386198 (1014, 1352, 3)
120.11315571155694 (1014, 1352, 3)
120.10546821812184 (1014, 1352, 3)
120.11183154768158 (1014, 1352, 3)
120.09759398986185 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:57<00:00, 53.18s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
