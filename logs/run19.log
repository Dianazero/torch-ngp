nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=19, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_01-29-47 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [01:19<3:17:43, 79.62s/it]  1% 2/150 [02:12<2:37:14, 63.74s/it]  2% 3/150 [03:04<2:23:42, 58.66s/it]  3% 4/150 [03:57<2:16:57, 56.29s/it]  3% 5/150 [04:50<2:12:52, 54.98s/it]  4% 6/150 [05:42<2:10:04, 54.20s/it]  5% 7/150 [06:35<2:07:58, 53.70s/it]  5% 8/150 [07:28<2:06:19, 53.37s/it]  6% 9/150 [08:20<2:04:54, 53.15s/it]  7% 10/150 [09:13<2:03:41, 53.01s/it]  7% 11/150 [10:06<2:02:35, 52.91s/it]  8% 12/150 [10:58<2:01:32, 52.85s/it]  9% 13/150 [11:51<2:00:35, 52.81s/it]  9% 14/150 [12:44<1:59:37, 52.77s/it] 10% 15/150 [13:37<1:58:40, 52.75s/it] 11% 16/150 [14:29<1:57:46, 52.73s/it] 11% 17/150 [15:22<1:56:52, 52.72s/it] 12% 18/150 [16:15<1:55:58, 52.72s/it] 13% 19/150 [17:07<1:55:06, 52.72s/it] 13% 20/150 [18:00<1:54:13, 52.72s/it] 14% 21/150 [18:53<1:53:19, 52.71s/it] 15% 22/150 [19:45<1:52:27, 52.71s/it] 15% 23/150 [20:38<1:51:35, 52.72s/it] 16% 24/150 [21:31<1:50:43, 52.72s/it] 17% 25/150 [22:24<1:49:50, 52.72s/it] 17% 26/150 [23:16<1:48:57, 52.72s/it] 18% 27/150 [24:09<1:48:04, 52.72s/it] 19% 28/150 [25:02<1:47:11, 52.72s/it] 19% 29/150 [25:55<1:46:18, 52.72s/it] 20% 30/150 [26:47<1:45:26, 52.72s/it] 21% 31/150 [27:40<1:44:33, 52.71s/it] 21% 32/150 [28:33<1:43:40, 52.72s/it] 22% 33/150 [29:25<1:42:47, 52.71s/it] 23% 34/150 [30:18<1:41:55, 52.72s/it] 23% 35/150 [31:11<1:41:02, 52.71s/it] 24% 36/150 [32:04<1:40:09, 52.71s/it] 25% 37/150 [32:56<1:39:16, 52.71s/it] 25% 38/150 [33:49<1:38:24, 52.72s/it] 26% 39/150 [34:42<1:37:32, 52.73s/it] 27% 40/150 [35:34<1:36:40, 52.73s/it] 27% 41/150 [36:27<1:35:47, 52.73s/it] 28% 42/150 [37:20<1:34:53, 52.72s/it] 29% 43/150 [38:13<1:34:01, 52.73s/it] 29% 44/150 [39:05<1:33:08, 52.72s/it] 30% 45/150 [39:58<1:32:16, 52.73s/it] 31% 46/150 [40:51<1:31:23, 52.72s/it] 31% 47/150 [41:44<1:30:30, 52.72s/it] 32% 48/150 [42:36<1:29:37, 52.72s/it] 33% 49/150 [43:29<1:28:45, 52.72s/it] 33% 50/150 [44:22<1:27:52, 52.72s/it] 34% 51/150 [45:14<1:26:59, 52.73s/it] 35% 52/150 [46:07<1:26:07, 52.73s/it] 35% 53/150 [47:00<1:25:14, 52.73s/it] 36% 54/150 [47:53<1:24:22, 52.73s/it] 37% 55/150 [48:45<1:23:29, 52.73s/it] 37% 56/150 [49:38<1:22:36, 52.73s/it] 38% 57/150 [50:31<1:21:44, 52.73s/it] 39% 58/150 [51:24<1:20:51, 52.73s/it] 39% 59/150 [52:16<1:19:57, 52.72s/it] 40% 60/150 [53:09<1:19:04, 52.72s/it] 41% 61/150 [54:02<1:18:11, 52.72s/it] 41% 62/150 [54:54<1:17:19, 52.72s/it] 42% 63/150 [55:47<1:16:26, 52.72s/it] 43% 64/150 [56:40<1:15:33, 52.72s/it] 43% 65/150 [57:33<1:14:41, 52.72s/it] 44% 66/150 [58:25<1:13:48, 52.72s/it] 45% 67/150 [59:18<1:12:55, 52.72s/it] 45% 68/150 [1:00:11<1:12:02, 52.71s/it] 46% 69/150 [1:01:03<1:11:10, 52.72s/it] 47% 70/150 [1:01:56<1:10:17, 52.72s/it] 47% 71/150 [1:02:49<1:09:24, 52.72s/it] 48% 72/150 [1:03:42<1:08:32, 52.72s/it] 49% 73/150 [1:04:34<1:07:39, 52.72s/it] 49% 74/150 [1:05:27<1:06:47, 52.72s/it] 50% 75/150 [1:06:20<1:05:54, 52.73s/it] 51% 76/150 [1:07:13<1:05:01, 52.72s/it] 51% 77/150 [1:08:05<1:04:08, 52.72s/it] 52% 78/150 [1:08:58<1:03:16, 52.72s/it] 53% 79/150 [1:09:51<1:02:23, 52.72s/it] 53% 80/150 [1:10:43<1:01:30, 52.73s/it] 54% 81/150 [1:11:36<1:00:38, 52.73s/it] 55% 82/150 [1:12:29<59:45, 52.72s/it]   55% 83/150 [1:13:22<58:52, 52.73s/it] 56% 84/150 [1:14:14<57:59, 52.73s/it] 57% 85/150 [1:15:07<57:07, 52.73s/it] 57% 86/150 [1:16:00<56:14, 52.72s/it] 58% 87/150 [1:16:52<55:21, 52.72s/it] 59% 88/150 [1:17:45<54:28, 52.72s/it] 59% 89/150 [1:18:38<53:35, 52.72s/it] 60% 90/150 [1:19:31<52:43, 52.72s/it] 61% 91/150 [1:20:23<51:50, 52.72s/it] 61% 92/150 [1:21:16<50:57, 52.72s/it] 62% 93/150 [1:22:09<50:05, 52.72s/it] 63% 94/150 [1:23:02<49:12, 52.72s/it] 63% 95/150 [1:23:54<48:19, 52.72s/it] 64% 96/150 [1:24:47<47:27, 52.72s/it] 65% 97/150 [1:25:40<46:34, 52.72s/it] 65% 98/150 [1:26:32<45:41, 52.73s/it] 66% 99/150 [1:27:25<44:49, 52.73s/it] 67% 100/150 [1:28:18<43:55, 52.71s/it] 67% 101/150 [1:29:11<43:03, 52.72s/it] 68% 102/150 [1:30:03<42:10, 52.72s/it] 69% 103/150 [1:30:56<41:17, 52.71s/it] 69% 104/150 [1:31:49<40:24, 52.71s/it] 70% 105/150 [1:32:41<39:31, 52.71s/it] 71% 106/150 [1:33:34<38:39, 52.71s/it] 71% 107/150 [1:34:27<37:46, 52.71s/it] 72% 108/150 [1:35:20<36:54, 52.71s/it] 73% 109/150 [1:36:12<36:01, 52.72s/it] 73% 110/150 [1:37:05<35:08, 52.71s/it] 74% 111/150 [1:37:58<34:15, 52.71s/it] 75% 112/150 [1:38:50<33:22, 52.71s/it] 75% 113/150 [1:39:43<32:30, 52.71s/it] 76% 114/150 [1:40:36<31:37, 52.71s/it] 77% 115/150 [1:41:29<30:44, 52.71s/it] 77% 116/150 [1:42:21<29:52, 52.71s/it] 78% 117/150 [1:43:14<28:59, 52.70s/it] 79% 118/150 [1:44:07<28:06, 52.71s/it] 79% 119/150 [1:44:59<27:13, 52.71s/it] 80% 120/150 [1:45:52<26:21, 52.71s/it] 81% 121/150 [1:46:45<25:28, 52.71s/it] 81% 122/150 [1:47:37<24:35, 52.71s/it] 82% 123/150 [1:48:30<23:43, 52.71s/it] 83% 124/150 [1:49:23<22:50, 52.71s/it] 83% 125/150 [1:50:16<21:57, 52.72s/it] 84% 126/150 [1:51:08<21:05, 52.72s/it] 85% 127/150 [1:52:01<20:12, 52.72s/it] 85% 128/150 [1:52:54<19:19, 52.72s/it] 86% 129/150 [1:53:46<18:26, 52.71s/it] 87% 130/150 [1:54:39<17:34, 52.72s/it] 87% 131/150 [1:55:32<16:41, 52.72s/it] 88% 132/150 [1:56:25<15:48, 52.71s/it] 89% 133/150 [1:57:17<14:56, 52.71s/it] 89% 134/150 [1:58:10<14:03, 52.71s/it] 90% 135/150 [1:59:03<13:10, 52.72s/it] 91% 136/150 [1:59:55<12:18, 52.72s/it] 91% 137/150 [2:00:48<11:25, 52.72s/it] 92% 138/150 [2:01:41<10:32, 52.72s/it] 93% 139/150 [2:02:34<09:39, 52.73s/it] 93% 140/150 [2:03:26<08:47, 52.72s/it] 94% 141/150 [2:04:19<07:54, 52.73s/it] 95% 142/150 [2:05:12<07:01, 52.74s/it] 95% 143/150 [2:06:05<06:09, 52.74s/it] 96% 144/150 [2:06:57<05:16, 52.73s/it] 97% 145/150 [2:07:50<04:23, 52.73s/it] 97% 146/150 [2:08:43<03:30, 52.72s/it] 98% 147/150 [2:09:35<02:38, 52.72s/it] 99% 148/150 [2:10:28<01:45, 52.72s/it] 99% 149/150 [2:11:21<00:52, 52.72s/it]100% 150/150 [2:12:14<00:00, 52.72s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x723dd80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x681c8c0] Warning: data is not aligned! This can lead to a speed loss
121.6599617193609 (1014, 1352, 3)
121.74189138063171 (1014, 1352, 3)
121.77255406556726 (1014, 1352, 3)
121.77735616555599 (1014, 1352, 3)
121.7693613377216 (1014, 1352, 3)
121.77446615236784 (1014, 1352, 3)
121.77554692879568 (1014, 1352, 3)
121.76237288415827 (1014, 1352, 3)
121.75471554061677 (1014, 1352, 3)
121.74549040260807 (1014, 1352, 3)
121.74073839034581 (1014, 1352, 3)
121.725769454462 (1014, 1352, 3)
121.73037752529673 (1014, 1352, 3)
121.72631458398982 (1014, 1352, 3)
121.73165038572412 (1014, 1352, 3)
121.72993937926232 (1014, 1352, 3)
121.74211458710207 (1014, 1352, 3)
121.74153760567052 (1014, 1352, 3)
121.73694193519523 (1014, 1352, 3)
121.7269090718112 (1014, 1352, 3)
121.72105172554649 (1014, 1352, 3)
121.720931855405 (1014, 1352, 3)
121.72080517722301 (1014, 1352, 3)
121.73025036082615 (1014, 1352, 3)
121.72510907453443 (1014, 1352, 3)
121.72243011060148 (1014, 1352, 3)
121.71257984858919 (1014, 1352, 3)
121.7194160938187 (1014, 1352, 3)
121.72474727581123 (1014, 1352, 3)
121.72792298355566 (1014, 1352, 3)
121.72187817303316 (1014, 1352, 3)
121.7120758104486 (1014, 1352, 3)
121.70516467677369 (1014, 1352, 3)
121.69143358853759 (1014, 1352, 3)
121.69283361343557 (1014, 1352, 3)
121.68866757894409 (1014, 1352, 3)
121.69320586736382 (1014, 1352, 3)
121.68041088469514 (1014, 1352, 3)
121.68124754424254 (1014, 1352, 3)
121.67984435846861 (1014, 1352, 3)
121.68171462444903 (1014, 1352, 3)
121.67730179848978 (1014, 1352, 3)
121.67905827293629 (1014, 1352, 3)
121.68896056782948 (1014, 1352, 3)
121.6915177164665 (1014, 1352, 3)
121.70347044726881 (1014, 1352, 3)
121.7063786962797 (1014, 1352, 3)
121.70964801458088 (1014, 1352, 3)
121.69328610498387 (1014, 1352, 3)
121.69450523052025 (1014, 1352, 3)
121.697508792098 (1014, 1352, 3)
121.71001978222051 (1014, 1352, 3)
121.70906471139743 (1014, 1352, 3)
121.71188226758322 (1014, 1352, 3)
121.71018974008847 (1014, 1352, 3)
121.7057905302102 (1014, 1352, 3)
121.71093303222342 (1014, 1352, 3)
121.71559702624792 (1014, 1352, 3)
121.72396362172192 (1014, 1352, 3)
121.71518805752989 (1014, 1352, 3)
121.71570011943248 (1014, 1352, 3)
121.70628970546471 (1014, 1352, 3)
121.70664348042591 (1014, 1352, 3)
121.69580897027414 (1014, 1352, 3)
121.69488161790164 (1014, 1352, 3)
121.6885698349342 (1014, 1352, 3)
121.68492680383896 (1014, 1352, 3)
121.68665410096908 (1014, 1352, 3)
121.6896102494077 (1014, 1352, 3)
121.69675917821115 (1014, 1352, 3)
121.68986166061724 (1014, 1352, 3)
121.69418671148303 (1014, 1352, 3)
121.69125852463927 (1014, 1352, 3)
121.7017144591109 (1014, 1352, 3)
121.70489186886547 (1014, 1352, 3)
121.71331560325075 (1014, 1352, 3)
121.7069889884808 (1014, 1352, 3)
121.69993683111002 (1014, 1352, 3)
121.6959254363954 (1014, 1352, 3)
121.69867904562943 (1014, 1352, 3)
121.70776948169416 (1014, 1352, 3)
121.70701427548833 (1014, 1352, 3)
121.71091139238044 (1014, 1352, 3)
121.7031531439531 (1014, 1352, 3)
121.70477491645562 (1014, 1352, 3)
121.69824308789374 (1014, 1352, 3)
121.70326401775537 (1014, 1352, 3)
121.69973040159658 (1014, 1352, 3)
121.69632784021724 (1014, 1352, 3)
121.69136283354536 (1014, 1352, 3)
121.69186176565557 (1014, 1352, 3)
121.69346238460372 (1014, 1352, 3)
121.68870307801237 (1014, 1352, 3)
121.6875223692759 (1014, 1352, 3)
121.68230984170333 (1014, 1352, 3)
121.68622154725364 (1014, 1352, 3)
121.68514806515489 (1014, 1352, 3)
121.69609442168614 (1014, 1352, 3)
121.69918600150166 (1014, 1352, 3)
121.69857741131068 (1014, 1352, 3)
121.69648004855105 (1014, 1352, 3)
121.70110416690981 (1014, 1352, 3)
121.71189661309711 (1014, 1352, 3)
121.71659172959241 (1014, 1352, 3)
121.7297791471665 (1014, 1352, 3)
121.73153926877755 (1014, 1352, 3)
121.73372489291926 (1014, 1352, 3)
121.72324245571856 (1014, 1352, 3)
121.72875672537143 (1014, 1352, 3)
121.73093821605997 (1014, 1352, 3)
121.73443633315048 (1014, 1352, 3)
121.73899796342332 (1014, 1352, 3)
121.74573233118977 (1014, 1352, 3)
121.74974615734743 (1014, 1352, 3)
121.74413900657073 (1014, 1352, 3)
121.75309838785601 (1014, 1352, 3)
121.75170565728713 (1014, 1352, 3)
121.75824599589961 (1014, 1352, 3)
121.75319248470136 (1014, 1352, 3)
121.76211344918673 (1014, 1352, 3)
121.76071196542293 (1014, 1352, 3)
121.75615495489187 (1014, 1352, 3)
121.74958300751997 (1014, 1352, 3)
121.75024436002474 (1014, 1352, 3)
121.75770086637178 (1014, 1352, 3)
121.76082745896697 (1014, 1352, 3)
121.7785852600088 (1014, 1352, 3)
121.78289061618602 (1014, 1352, 3)
121.7906359779653 (1014, 1352, 3)
121.78237417768597 (1014, 1352, 3)
121.7880960925738 (1014, 1352, 3)
121.78664889768099 (1014, 1352, 3)
121.79364659072783 (1014, 1352, 3)
121.79618380153201 (1014, 1352, 3)
121.79664674828534 (1014, 1352, 3)
121.79014069301962 (1014, 1352, 3)
121.77812766243012 (1014, 1352, 3)
121.78486762251555 (1014, 1352, 3)
121.78176291290765 (1014, 1352, 3)
121.78957343736019 (1014, 1352, 3)
121.78532473380562 (1014, 1352, 3)
121.79202676337974 (1014, 1352, 3)
121.77855438068228 (1014, 1352, 3)
121.77136484678019 (1014, 1352, 3)
121.76262259335769 (1014, 1352, 3)
121.75978485619473 (1014, 1352, 3)
121.75023609311843 (1014, 1352, 3)
121.74082835373801 (1014, 1352, 3)
121.74252744612895 (1014, 1352, 3)
121.73183468910597 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:16<00:00, 52.91s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
