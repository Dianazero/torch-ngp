nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=22, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_01-30-20 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:11:53, 53.11s/it]  1% 2/150 [01:45<2:10:11, 52.78s/it]  2% 3/150 [02:38<2:09:07, 52.70s/it]  3% 4/150 [03:30<2:08:10, 52.67s/it]  3% 5/150 [04:23<2:07:13, 52.64s/it]  4% 6/150 [05:16<2:06:20, 52.64s/it]  5% 7/150 [06:08<2:05:28, 52.65s/it]  5% 8/150 [07:01<2:04:33, 52.63s/it]  6% 9/150 [07:54<2:03:42, 52.64s/it]  7% 10/150 [08:46<2:02:51, 52.65s/it]  7% 11/150 [09:39<2:01:59, 52.66s/it]  8% 12/150 [10:32<2:01:07, 52.66s/it]  9% 13/150 [11:24<2:00:13, 52.65s/it]  9% 14/150 [12:17<1:59:21, 52.66s/it] 10% 15/150 [13:10<1:58:28, 52.65s/it] 11% 16/150 [14:02<1:57:37, 52.67s/it] 11% 17/150 [14:55<1:56:45, 52.67s/it] 12% 18/150 [15:48<1:55:53, 52.68s/it] 13% 19/150 [16:40<1:55:01, 52.68s/it] 13% 20/150 [17:33<1:54:08, 52.68s/it] 14% 21/150 [18:26<1:53:14, 52.67s/it] 15% 22/150 [19:18<1:52:22, 52.68s/it] 15% 23/150 [20:11<1:51:31, 52.69s/it] 16% 24/150 [21:04<1:50:36, 52.67s/it] 17% 25/150 [21:56<1:49:45, 52.68s/it] 17% 26/150 [22:49<1:48:53, 52.69s/it] 18% 27/150 [23:42<1:47:59, 52.68s/it] 19% 28/150 [24:34<1:47:07, 52.68s/it] 19% 29/150 [25:27<1:46:15, 52.69s/it] 20% 30/150 [26:20<1:45:22, 52.69s/it] 21% 31/150 [27:13<1:44:30, 52.69s/it] 21% 32/150 [28:05<1:43:36, 52.68s/it] 22% 33/150 [28:58<1:42:42, 52.67s/it] 23% 34/150 [29:51<1:41:51, 52.68s/it] 23% 35/150 [30:43<1:40:58, 52.68s/it] 24% 36/150 [31:36<1:40:06, 52.69s/it] 25% 37/150 [32:29<1:39:14, 52.69s/it] 25% 38/150 [33:21<1:38:20, 52.68s/it] 26% 39/150 [34:14<1:37:28, 52.69s/it] 27% 40/150 [35:07<1:36:36, 52.69s/it] 27% 41/150 [35:59<1:35:43, 52.70s/it] 28% 42/150 [36:52<1:34:51, 52.70s/it] 29% 43/150 [37:45<1:33:59, 52.70s/it] 29% 44/150 [38:38<1:33:07, 52.71s/it] 30% 45/150 [39:30<1:32:14, 52.71s/it] 31% 46/150 [40:23<1:31:19, 52.69s/it] 31% 47/150 [41:16<1:30:27, 52.69s/it] 32% 48/150 [42:08<1:29:35, 52.70s/it] 33% 49/150 [43:01<1:28:42, 52.70s/it] 33% 50/150 [43:54<1:27:50, 52.71s/it] 34% 51/150 [44:46<1:26:58, 52.71s/it] 35% 52/150 [45:39<1:26:05, 52.71s/it] 35% 53/150 [46:32<1:25:10, 52.69s/it] 36% 54/150 [47:24<1:24:18, 52.70s/it] 37% 55/150 [48:17<1:23:24, 52.68s/it] 37% 56/150 [49:10<1:22:32, 52.69s/it] 38% 57/150 [50:03<1:21:41, 52.70s/it] 39% 58/150 [50:55<1:20:49, 52.71s/it] 39% 59/150 [51:48<1:19:56, 52.71s/it] 40% 60/150 [52:41<1:19:02, 52.70s/it] 41% 61/150 [53:33<1:18:10, 52.70s/it] 41% 62/150 [54:26<1:17:17, 52.70s/it] 42% 63/150 [55:19<1:16:25, 52.71s/it] 43% 64/150 [56:11<1:15:32, 52.70s/it] 43% 65/150 [57:04<1:14:40, 52.71s/it] 44% 66/150 [57:57<1:13:47, 52.71s/it] 45% 67/150 [58:50<1:12:54, 52.70s/it] 45% 68/150 [59:42<1:11:59, 52.68s/it] 46% 69/150 [1:00:35<1:11:08, 52.70s/it] 47% 70/150 [1:01:28<1:10:15, 52.70s/it] 47% 71/150 [1:02:20<1:09:23, 52.71s/it] 48% 72/150 [1:03:13<1:08:30, 52.70s/it] 49% 73/150 [1:04:06<1:07:38, 52.71s/it] 49% 74/150 [1:04:59<1:06:46, 52.72s/it] 50% 75/150 [1:05:51<1:05:53, 52.71s/it] 51% 76/150 [1:06:44<1:05:00, 52.71s/it] 51% 77/150 [1:07:37<1:04:07, 52.71s/it] 52% 78/150 [1:08:29<1:03:14, 52.71s/it] 53% 79/150 [1:09:22<1:02:22, 52.71s/it] 53% 80/150 [1:10:15<1:01:29, 52.71s/it] 54% 81/150 [1:11:08<1:00:37, 52.71s/it] 55% 82/150 [1:12:00<59:44, 52.72s/it]   55% 83/150 [1:12:53<58:52, 52.73s/it] 56% 84/150 [1:13:46<58:00, 52.73s/it] 57% 85/150 [1:14:38<57:07, 52.73s/it] 57% 86/150 [1:15:31<56:14, 52.73s/it] 58% 87/150 [1:16:24<55:21, 52.72s/it] 59% 88/150 [1:17:17<54:29, 52.73s/it] 59% 89/150 [1:18:09<53:36, 52.74s/it] 60% 90/150 [1:19:02<52:43, 52.73s/it] 61% 91/150 [1:19:55<51:51, 52.74s/it] 61% 92/150 [1:20:48<50:58, 52.73s/it] 62% 93/150 [1:21:40<50:05, 52.73s/it] 63% 94/150 [1:22:33<49:12, 52.72s/it] 63% 95/150 [1:23:26<48:20, 52.73s/it] 64% 96/150 [1:24:19<47:27, 52.73s/it] 65% 97/150 [1:25:11<46:34, 52.73s/it] 65% 98/150 [1:26:04<45:41, 52.73s/it] 66% 99/150 [1:26:57<44:49, 52.73s/it] 67% 100/150 [1:27:49<43:56, 52.73s/it] 67% 101/150 [1:28:42<43:03, 52.73s/it] 68% 102/150 [1:29:35<42:10, 52.73s/it] 69% 103/150 [1:30:28<41:18, 52.73s/it] 69% 104/150 [1:31:20<40:25, 52.73s/it] 70% 105/150 [1:32:13<39:32, 52.73s/it] 71% 106/150 [1:33:06<38:40, 52.73s/it] 71% 107/150 [1:33:59<37:47, 52.73s/it] 72% 108/150 [1:34:51<36:54, 52.73s/it] 73% 109/150 [1:35:44<36:01, 52.73s/it] 73% 110/150 [1:36:37<35:09, 52.74s/it] 74% 111/150 [1:37:29<34:16, 52.73s/it] 75% 112/150 [1:38:22<33:22, 52.71s/it] 75% 113/150 [1:39:15<32:29, 52.70s/it] 76% 114/150 [1:40:07<31:36, 52.69s/it] 77% 115/150 [1:41:00<30:44, 52.70s/it] 77% 116/150 [1:41:53<29:52, 52.71s/it] 78% 117/150 [1:42:46<28:59, 52.71s/it] 79% 118/150 [1:43:38<28:06, 52.72s/it] 79% 119/150 [1:44:31<27:13, 52.70s/it] 80% 120/150 [1:45:24<26:21, 52.71s/it] 81% 121/150 [1:46:16<25:28, 52.69s/it] 81% 122/150 [1:47:09<24:35, 52.71s/it] 82% 123/150 [1:48:02<23:43, 52.71s/it] 83% 124/150 [1:48:55<22:50, 52.70s/it] 83% 125/150 [1:49:47<21:57, 52.71s/it] 84% 126/150 [1:50:40<21:05, 52.71s/it] 85% 127/150 [1:51:33<20:12, 52.71s/it] 85% 128/150 [1:52:25<19:19, 52.70s/it] 86% 129/150 [1:53:18<18:26, 52.70s/it] 87% 130/150 [1:54:11<17:34, 52.71s/it] 87% 131/150 [1:55:04<16:41, 52.71s/it] 88% 132/150 [1:55:56<15:48, 52.70s/it] 89% 133/150 [1:56:49<14:56, 52.71s/it] 89% 134/150 [1:57:42<14:03, 52.71s/it] 90% 135/150 [1:58:34<13:10, 52.71s/it] 91% 136/150 [1:59:27<12:18, 52.72s/it] 91% 137/150 [2:00:20<11:25, 52.71s/it] 92% 138/150 [2:01:13<10:32, 52.72s/it] 93% 139/150 [2:02:05<09:39, 52.72s/it] 93% 140/150 [2:02:58<08:47, 52.73s/it] 94% 141/150 [2:03:51<07:54, 52.73s/it] 95% 142/150 [2:04:43<07:01, 52.74s/it] 95% 143/150 [2:05:36<06:09, 52.74s/it] 96% 144/150 [2:06:29<05:16, 52.72s/it] 97% 145/150 [2:07:22<04:23, 52.72s/it] 97% 146/150 [2:08:14<03:30, 52.72s/it] 98% 147/150 [2:09:07<02:38, 52.72s/it] 99% 148/150 [2:10:00<01:45, 52.72s/it] 99% 149/150 [2:10:52<00:52, 52.71s/it]100% 150/150 [2:11:45<00:00, 52.71s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x7093d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x56028c0] Warning: data is not aligned! This can lead to a speed loss
120.27583310964057 (1014, 1352, 3)
120.33516664137966 (1014, 1352, 3)
120.35501524028493 (1014, 1352, 3)
120.34554890312742 (1014, 1352, 3)
120.32432216231146 (1014, 1352, 3)
120.32549241584289 (1014, 1352, 3)
120.32471265206244 (1014, 1352, 3)
120.3092066104128 (1014, 1352, 3)
120.30301469758685 (1014, 1352, 3)
120.29567660251547 (1014, 1352, 3)
120.29521778921529 (1014, 1352, 3)
120.27736759333824 (1014, 1352, 3)
120.28604735867481 (1014, 1352, 3)
120.28024739446565 (1014, 1352, 3)
120.28355075296928 (1014, 1352, 3)
120.28000522273963 (1014, 1352, 3)
120.29520757715456 (1014, 1352, 3)
120.29290427117009 (1014, 1352, 3)
120.2852094834059 (1014, 1352, 3)
120.27684604880781 (1014, 1352, 3)
120.27157468031388 (1014, 1352, 3)
120.27221342039844 (1014, 1352, 3)
120.27115015036044 (1014, 1352, 3)
120.28612200397589 (1014, 1352, 3)
120.28314129796264 (1014, 1352, 3)
120.2819481888667 (1014, 1352, 3)
120.27293823356636 (1014, 1352, 3)
120.28492232998377 (1014, 1352, 3)
120.2916700706869 (1014, 1352, 3)
120.2966428579765 (1014, 1352, 3)
120.29120396305763 (1014, 1352, 3)
120.28183342475559 (1014, 1352, 3)
120.27319353508474 (1014, 1352, 3)
120.25981865325288 (1014, 1352, 3)
120.26493586825858 (1014, 1352, 3)
120.26353924738085 (1014, 1352, 3)
120.26787742803901 (1014, 1352, 3)
120.25440723364028 (1014, 1352, 3)
120.25762889565803 (1014, 1352, 3)
120.25689338414077 (1014, 1352, 3)
120.26061397826874 (1014, 1352, 3)
120.25960736085338 (1014, 1352, 3)
120.26208767589058 (1014, 1352, 3)
120.26971316752837 (1014, 1352, 3)
120.27022133912212 (1014, 1352, 3)
120.28601550677108 (1014, 1352, 3)
120.2894603752592 (1014, 1352, 3)
120.29300639177744 (1014, 1352, 3)
120.2775081307455 (1014, 1352, 3)
120.28053503417637 (1014, 1352, 3)
120.28266011538656 (1014, 1352, 3)
120.29430964524273 (1014, 1352, 3)
120.29649867340468 (1014, 1352, 3)
120.29908937595556 (1014, 1352, 3)
120.29476019163661 (1014, 1352, 3)
120.28711330330015 (1014, 1352, 3)
120.29263243583908 (1014, 1352, 3)
120.29682740450265 (1014, 1352, 3)
120.30493602387094 (1014, 1352, 3)
120.29642038093904 (1014, 1352, 3)
120.29831471820548 (1014, 1352, 3)
120.28955447210454 (1014, 1352, 3)
120.28897797696159 (1014, 1352, 3)
120.28329472201798 (1014, 1352, 3)
120.28573540453377 (1014, 1352, 3)
120.27926655034643 (1014, 1352, 3)
120.27231967445896 (1014, 1352, 3)
120.27654309100599 (1014, 1352, 3)
120.27940198172332 (1014, 1352, 3)
120.28672767643523 (1014, 1352, 3)
120.2781860170629 (1014, 1352, 3)
120.28497168827734 (1014, 1352, 3)
120.28113195344078 (1014, 1352, 3)
120.29021752661944 (1014, 1352, 3)
120.29498437068419 (1014, 1352, 3)
120.30648339421667 (1014, 1352, 3)
120.3025140634665 (1014, 1352, 3)
120.29268860217313 (1014, 1352, 3)
120.29194239230652 (1014, 1352, 3)
120.29287995673977 (1014, 1352, 3)
120.30228064493541 (1014, 1352, 3)
120.29965492960486 (1014, 1352, 3)
120.30796389987901 (1014, 1352, 3)
120.29893449303441 (1014, 1352, 3)
120.29927854222346 (1014, 1352, 3)
120.2925283700773 (1014, 1352, 3)
120.29844650241783 (1014, 1352, 3)
120.29658158561209 (1014, 1352, 3)
120.2919180778762 (1014, 1352, 3)
120.28882187831891 (1014, 1352, 3)
120.28680572575657 (1014, 1352, 3)
120.28888509583776 (1014, 1352, 3)
120.2804103011488 (1014, 1352, 3)
120.2819851468008 (1014, 1352, 3)
120.27824096767543 (1014, 1352, 3)
120.28250742076413 (1014, 1352, 3)
120.2814193500072 (1014, 1352, 3)
120.29240582534847 (1014, 1352, 3)
120.29560171407007 (1014, 1352, 3)
120.2929353936409 (1014, 1352, 3)
120.29249603188497 (1014, 1352, 3)
120.29758382642999 (1014, 1352, 3)
120.30805751043576 (1014, 1352, 3)
120.31065915448028 (1014, 1352, 3)
120.32463873619426 (1014, 1352, 3)
120.32536792595964 (1014, 1352, 3)
120.32530130442056 (1014, 1352, 3)
120.31510334605464 (1014, 1352, 3)
120.32096506891682 (1014, 1352, 3)
120.32451497574392 (1014, 1352, 3)
120.327354414917 (1014, 1352, 3)
120.33352371532276 (1014, 1352, 3)
120.33698803535513 (1014, 1352, 3)
120.33822563985855 (1014, 1352, 3)
120.33000104065762 (1014, 1352, 3)
120.33921329201826 (1014, 1352, 3)
120.33923687701567 (1014, 1352, 3)
120.34560166544122 (1014, 1352, 3)
120.33975623324736 (1014, 1352, 3)
120.3482913277235 (1014, 1352, 3)
120.34801098234189 (1014, 1352, 3)
120.34318626993297 (1014, 1352, 3)
120.34137581745115 (1014, 1352, 3)
120.34149957790149 (1014, 1352, 3)
120.35068921684193 (1014, 1352, 3)
120.35058806881179 (1014, 1352, 3)
120.36912806507709 (1014, 1352, 3)
120.37558938179102 (1014, 1352, 3)
120.38540098385911 (1014, 1352, 3)
120.37634531742975 (1014, 1352, 3)
120.38447095689926 (1014, 1352, 3)
120.38650607471727 (1014, 1352, 3)
120.39280472789235 (1014, 1352, 3)
120.39698219016607 (1014, 1352, 3)
120.39896843597913 (1014, 1352, 3)
120.39320202568382 (1014, 1352, 3)
120.37855574229037 (1014, 1352, 3)
120.38474789826064 (1014, 1352, 3)
120.3823111060537 (1014, 1352, 3)
120.39012819540244 (1014, 1352, 3)
120.38408605946726 (1014, 1352, 3)
120.39225570805566 (1014, 1352, 3)
120.3770426552914 (1014, 1352, 3)
120.36775429976386 (1014, 1352, 3)
120.36067247878809 (1014, 1352, 3)
120.35796992985773 (1014, 1352, 3)
120.35166860209532 (1014, 1352, 3)
120.3389908149808 (1014, 1352, 3)
120.34282228291104 (1014, 1352, 3)
120.32967741559003 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:11:48<00:00, 52.72s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
