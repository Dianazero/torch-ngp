nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=18, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_11-43-24 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:11:59, 53.15s/it]  1% 2/150 [01:45<2:10:18, 52.83s/it]  2% 3/150 [02:38<2:09:14, 52.75s/it]  3% 4/150 [03:31<2:08:16, 52.71s/it]  3% 5/150 [04:23<2:07:21, 52.70s/it]  4% 6/150 [05:16<2:06:28, 52.70s/it]  5% 7/150 [06:09<2:05:37, 52.71s/it]  5% 8/150 [07:01<2:04:44, 52.71s/it]  6% 9/150 [07:54<2:03:50, 52.70s/it]  7% 10/150 [08:47<2:02:57, 52.70s/it]  7% 11/150 [09:39<2:02:05, 52.70s/it]  8% 12/150 [10:32<2:01:13, 52.70s/it]  9% 13/150 [11:25<2:00:20, 52.70s/it]  9% 14/150 [12:18<1:59:27, 52.70s/it] 10% 15/150 [13:10<1:58:34, 52.70s/it] 11% 16/150 [14:03<1:57:42, 52.71s/it] 11% 17/150 [14:56<1:56:50, 52.71s/it] 12% 18/150 [15:48<1:55:59, 52.72s/it] 13% 19/150 [16:41<1:55:07, 52.73s/it] 13% 20/150 [17:34<1:54:14, 52.72s/it] 14% 21/150 [18:27<1:53:22, 52.74s/it] 15% 22/150 [19:19<1:52:30, 52.74s/it] 15% 23/150 [20:12<1:51:39, 52.75s/it] 16% 24/150 [21:05<1:50:47, 52.75s/it] 17% 25/150 [21:58<1:49:53, 52.75s/it] 17% 26/150 [22:50<1:49:00, 52.75s/it] 18% 27/150 [23:43<1:48:07, 52.74s/it] 19% 28/150 [24:36<1:47:13, 52.74s/it] 19% 29/150 [25:29<1:46:25, 52.78s/it] 20% 30/150 [26:22<1:45:33, 52.78s/it] 21% 31/150 [27:14<1:44:39, 52.77s/it] 21% 32/150 [28:07<1:43:46, 52.76s/it] 22% 33/150 [29:00<1:42:52, 52.76s/it] 23% 34/150 [29:53<1:41:59, 52.76s/it] 23% 35/150 [30:45<1:41:06, 52.75s/it] 24% 36/150 [31:38<1:40:13, 52.75s/it] 25% 37/150 [32:31<1:39:19, 52.74s/it] 25% 38/150 [33:24<1:38:27, 52.74s/it] 26% 39/150 [34:16<1:37:33, 52.73s/it] 27% 40/150 [35:09<1:36:40, 52.73s/it] 27% 41/150 [36:02<1:35:47, 52.73s/it] 28% 42/150 [36:54<1:34:54, 52.73s/it] 29% 43/150 [37:47<1:34:02, 52.73s/it] 29% 44/150 [38:40<1:33:09, 52.73s/it] 30% 45/150 [39:33<1:32:16, 52.73s/it] 31% 46/150 [40:25<1:31:23, 52.73s/it] 31% 47/150 [41:18<1:30:32, 52.74s/it] 32% 48/150 [42:11<1:29:38, 52.74s/it] 33% 49/150 [43:04<1:28:45, 52.73s/it] 33% 50/150 [43:56<1:27:53, 52.73s/it] 34% 51/150 [44:49<1:26:59, 52.72s/it] 35% 52/150 [45:42<1:26:08, 52.73s/it] 35% 53/150 [46:34<1:25:15, 52.74s/it] 36% 54/150 [47:27<1:24:22, 52.74s/it] 37% 55/150 [48:20<1:23:29, 52.74s/it] 37% 56/150 [49:13<1:22:36, 52.73s/it] 38% 57/150 [50:05<1:21:44, 52.73s/it] 39% 58/150 [50:58<1:20:51, 52.74s/it] 39% 59/150 [51:51<1:19:58, 52.73s/it] 40% 60/150 [52:44<1:19:05, 52.73s/it] 41% 61/150 [53:36<1:18:13, 52.73s/it] 41% 62/150 [54:29<1:17:21, 52.74s/it] 42% 63/150 [55:22<1:16:28, 52.74s/it] 43% 64/150 [56:15<1:15:35, 52.74s/it] 43% 65/150 [57:07<1:14:42, 52.74s/it] 44% 66/150 [58:00<1:13:48, 52.73s/it] 45% 67/150 [58:53<1:12:56, 52.73s/it] 45% 68/150 [59:45<1:12:04, 52.73s/it] 46% 69/150 [1:00:38<1:11:11, 52.73s/it] 47% 70/150 [1:01:31<1:10:19, 52.75s/it] 47% 71/150 [1:02:24<1:09:26, 52.74s/it] 48% 72/150 [1:03:16<1:08:32, 52.73s/it] 49% 73/150 [1:04:09<1:07:39, 52.73s/it] 49% 74/150 [1:05:02<1:06:47, 52.73s/it] 50% 75/150 [1:05:55<1:05:54, 52.72s/it] 51% 76/150 [1:06:47<1:05:01, 52.72s/it] 51% 77/150 [1:07:40<1:04:09, 52.73s/it] 52% 78/150 [1:08:33<1:03:16, 52.73s/it] 53% 79/150 [1:09:26<1:02:24, 52.74s/it] 53% 80/150 [1:10:18<1:01:32, 52.74s/it] 54% 81/150 [1:11:11<1:00:39, 52.75s/it] 55% 82/150 [1:12:04<59:47, 52.75s/it]   55% 83/150 [1:12:57<58:54, 52.75s/it] 56% 84/150 [1:13:49<58:00, 52.74s/it] 57% 85/150 [1:14:42<57:08, 52.74s/it] 57% 86/150 [1:15:35<56:14, 52.73s/it] 58% 87/150 [1:16:27<55:22, 52.73s/it] 59% 88/150 [1:17:20<54:30, 52.75s/it] 59% 89/150 [1:18:13<53:37, 52.75s/it] 60% 90/150 [1:19:06<52:45, 52.75s/it] 61% 91/150 [1:19:58<51:51, 52.74s/it] 61% 92/150 [1:20:51<50:59, 52.74s/it] 62% 93/150 [1:21:44<50:06, 52.74s/it] 63% 94/150 [1:22:37<49:13, 52.74s/it] 63% 95/150 [1:23:29<48:20, 52.74s/it] 64% 96/150 [1:24:22<47:27, 52.73s/it] 65% 97/150 [1:25:15<46:34, 52.73s/it] 65% 98/150 [1:26:08<45:41, 52.73s/it] 66% 99/150 [1:27:00<44:49, 52.73s/it] 67% 100/150 [1:27:53<43:56, 52.73s/it] 67% 101/150 [1:28:46<43:04, 52.74s/it] 68% 102/150 [1:29:39<42:11, 52.74s/it] 69% 103/150 [1:30:31<41:18, 52.73s/it] 69% 104/150 [1:31:24<40:25, 52.72s/it] 70% 105/150 [1:32:17<39:32, 52.73s/it] 71% 106/150 [1:33:09<38:40, 52.73s/it] 71% 107/150 [1:34:02<37:47, 52.73s/it] 72% 108/150 [1:34:55<36:54, 52.72s/it] 73% 109/150 [1:35:48<36:01, 52.72s/it] 73% 110/150 [1:36:40<35:09, 52.73s/it] 74% 111/150 [1:37:33<34:16, 52.73s/it] 75% 112/150 [1:38:26<33:23, 52.73s/it] 75% 113/150 [1:39:19<32:30, 52.73s/it] 76% 114/150 [1:40:11<31:37, 52.72s/it] 77% 115/150 [1:41:04<30:44, 52.71s/it] 77% 116/150 [1:41:57<29:52, 52.71s/it] 78% 117/150 [1:42:49<28:59, 52.71s/it] 79% 118/150 [1:43:42<28:06, 52.72s/it] 79% 119/150 [1:44:35<27:14, 52.73s/it] 80% 120/150 [1:45:28<26:21, 52.73s/it] 81% 121/150 [1:46:20<25:28, 52.72s/it] 81% 122/150 [1:47:13<24:35, 52.71s/it] 82% 123/150 [1:48:06<23:43, 52.72s/it] 83% 124/150 [1:48:58<22:50, 52.72s/it] 83% 125/150 [1:49:51<21:57, 52.72s/it] 84% 126/150 [1:50:44<21:05, 52.71s/it] 85% 127/150 [1:51:37<20:12, 52.71s/it] 85% 128/150 [1:52:29<19:19, 52.72s/it] 86% 129/150 [1:53:22<18:27, 52.72s/it] 87% 130/150 [1:54:15<17:34, 52.71s/it] 87% 131/150 [1:55:07<16:41, 52.71s/it] 88% 132/150 [1:56:00<15:48, 52.71s/it] 89% 133/150 [1:56:53<14:56, 52.72s/it] 89% 134/150 [1:57:46<14:03, 52.72s/it] 90% 135/150 [1:58:38<13:10, 52.71s/it] 91% 136/150 [1:59:31<12:17, 52.71s/it] 91% 137/150 [2:00:24<11:25, 52.71s/it] 92% 138/150 [2:01:16<10:32, 52.71s/it] 93% 139/150 [2:02:09<09:39, 52.71s/it] 93% 140/150 [2:03:02<08:47, 52.71s/it] 94% 141/150 [2:03:55<07:54, 52.73s/it] 95% 142/150 [2:04:47<07:01, 52.73s/it] 95% 143/150 [2:05:40<06:09, 52.73s/it] 96% 144/150 [2:06:33<05:16, 52.72s/it] 97% 145/150 [2:07:25<04:23, 52.72s/it] 97% 146/150 [2:08:18<03:30, 52.72s/it] 98% 147/150 [2:09:11<02:38, 52.72s/it] 99% 148/150 [2:10:04<01:45, 52.71s/it] 99% 149/150 [2:10:56<00:52, 52.71s/it]100% 150/150 [2:11:49<00:00, 52.72s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5e26d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5f0b8c0] Warning: data is not aligned! This can lead to a speed loss
121.27431953635299 (1014, 1352, 3)
121.35896414691362 (1014, 1352, 3)
121.39145649273095 (1014, 1352, 3)
121.388979581714 (1014, 1352, 3)
121.37633121506016 (1014, 1352, 3)
121.37835101478706 (1014, 1352, 3)
121.38051159506553 (1014, 1352, 3)
121.36866827919968 (1014, 1352, 3)
121.36422092674937 (1014, 1352, 3)
121.35451290415446 (1014, 1352, 3)
121.35068046364701 (1014, 1352, 3)
121.33341454353061 (1014, 1352, 3)
121.33805179168174 (1014, 1352, 3)
121.33296399713673 (1014, 1352, 3)
121.33801434745905 (1014, 1352, 3)
121.33475621379581 (1014, 1352, 3)
121.34559753198806 (1014, 1352, 3)
121.34478081027353 (1014, 1352, 3)
121.33961399382997 (1014, 1352, 3)
121.32955000797513 (1014, 1352, 3)
121.32376827958872 (1014, 1352, 3)
121.32456141630584 (1014, 1352, 3)
121.32171784367961 (1014, 1352, 3)
121.33226252582193 (1014, 1352, 3)
121.32754114974188 (1014, 1352, 3)
121.32598210846959 (1014, 1352, 3)
121.31709469789807 (1014, 1352, 3)
121.3249876482694 (1014, 1352, 3)
121.33418506782753 (1014, 1352, 3)
121.33724163486339 (1014, 1352, 3)
121.3326680905197 (1014, 1352, 3)
121.32427329030652 (1014, 1352, 3)
121.31970096168435 (1014, 1352, 3)
121.3062144766173 (1014, 1352, 3)
121.30839742617167 (1014, 1352, 3)
121.30400332232377 (1014, 1352, 3)
121.30868141871784 (1014, 1352, 3)
121.29517499581792 (1014, 1352, 3)
121.29704647751986 (1014, 1352, 3)
121.29586941594793 (1014, 1352, 3)
121.29653441561726 (1014, 1352, 3)
121.29153512559863 (1014, 1352, 3)
121.2917221035678 (1014, 1352, 3)
121.30271295550654 (1014, 1352, 3)
121.30290892981493 (1014, 1352, 3)
121.31411131729747 (1014, 1352, 3)
121.31314238724913 (1014, 1352, 3)
121.31517799135574 (1014, 1352, 3)
121.29823059027656 (1014, 1352, 3)
121.29950345070395 (1014, 1352, 3)
121.30308812716642 (1014, 1352, 3)
121.31574621959237 (1014, 1352, 3)
121.3165704787803 (1014, 1352, 3)
121.31868875195002 (1014, 1352, 3)
121.31779398091415 (1014, 1352, 3)
121.31226050286132 (1014, 1352, 3)
121.3196224260744 (1014, 1352, 3)
121.32413275289925 (1014, 1352, 3)
121.33364966407183 (1014, 1352, 3)
121.32390055008968 (1014, 1352, 3)
121.3254702897113 (1014, 1352, 3)
121.31611628522188 (1014, 1352, 3)
121.31665582243075 (1014, 1352, 3)
121.30774045026435 (1014, 1352, 3)
121.30847353033857 (1014, 1352, 3)
121.30283987683282 (1014, 1352, 3)
121.2982332648639 (1014, 1352, 3)
121.3008105944781 (1014, 1352, 3)
121.30395299145299 (1014, 1352, 3)
121.31119893483344 (1014, 1352, 3)
121.3030190741843 (1014, 1352, 3)
121.30786931674506 (1014, 1352, 3)
121.30370425483079 (1014, 1352, 3)
121.31372034125789 (1014, 1352, 3)
121.31558647378516 (1014, 1352, 3)
121.32446975090352 (1014, 1352, 3)
121.31939216841926 (1014, 1352, 3)
121.312190477302 (1014, 1352, 3)
121.30895714435769 (1014, 1352, 3)
121.31075373761423 (1014, 1352, 3)
121.32071730487183 (1014, 1352, 3)
121.31801451279718 (1014, 1352, 3)
121.32401701621092 (1014, 1352, 3)
121.31692084972126 (1014, 1352, 3)
121.31844317620376 (1014, 1352, 3)
121.31183889063952 (1014, 1352, 3)
121.3154245396792 (1014, 1352, 3)
121.31259750086559 (1014, 1352, 3)
121.3092666670557 (1014, 1352, 3)
121.30643987138639 (1014, 1352, 3)
121.30744843395617 (1014, 1352, 3)
121.31014247283592 (1014, 1352, 3)
121.30238738528452 (1014, 1352, 3)
121.30209342382192 (1014, 1352, 3)
121.29829745495995 (1014, 1352, 3)
121.30186073472373 (1014, 1352, 3)
121.30149285739294 (1014, 1352, 3)
121.31071872483456 (1014, 1352, 3)
121.31476294403012 (1014, 1352, 3)
121.31191888511529 (1014, 1352, 3)
121.31022125159016 (1014, 1352, 3)
121.31435956763107 (1014, 1352, 3)
121.32481793354575 (1014, 1352, 3)
121.3284546428891 (1014, 1352, 3)
121.34225672926173 (1014, 1352, 3)
121.34407690751569 (1014, 1352, 3)
121.34630459562185 (1014, 1352, 3)
121.33696274834759 (1014, 1352, 3)
121.34160850654933 (1014, 1352, 3)
121.343942448716 (1014, 1352, 3)
121.34598242942008 (1014, 1352, 3)
121.35241894541508 (1014, 1352, 3)
121.35758819330167 (1014, 1352, 3)
121.3623085968045 (1014, 1352, 3)
121.35668564164808 (1014, 1352, 3)
121.36668957086003 (1014, 1352, 3)
121.36686390532545 (1014, 1352, 3)
121.37446702768733 (1014, 1352, 3)
121.37095651023735 (1014, 1352, 3)
121.38104481052251 (1014, 1352, 3)
121.38196462542162 (1014, 1352, 3)
121.37767045388233 (1014, 1352, 3)
121.3721216577384 (1014, 1352, 3)
121.37124487938097 (1014, 1352, 3)
121.3809086497127 (1014, 1352, 3)
121.3828452940879 (1014, 1352, 3)
121.40182392267621 (1014, 1352, 3)
121.40543753331077 (1014, 1352, 3)
121.41508015008812 (1014, 1352, 3)
121.4072492015141 (1014, 1352, 3)
121.41532985928752 (1014, 1352, 3)
121.41540839489747 (1014, 1352, 3)
121.42082759512778 (1014, 1352, 3)
121.42463353290617 (1014, 1352, 3)
121.42386860092823 (1014, 1352, 3)
121.42089956584154 (1014, 1352, 3)
121.40850017895421 (1014, 1352, 3)
121.41445964582628 (1014, 1352, 3)
121.410006701057 (1014, 1352, 3)
121.41741603740921 (1014, 1352, 3)
121.41136928173228 (1014, 1352, 3)
121.42030678003027 (1014, 1352, 3)
121.40772673692564 (1014, 1352, 3)
121.40037429634039 (1014, 1352, 3)
121.39230701150365 (1014, 1352, 3)
121.38837877214073 (1014, 1352, 3)
121.38002773790211 (1014, 1352, 3)
121.37073695093153 (1014, 1352, 3)
121.37476050286132 (1014, 1352, 3)
121.36209365724045 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:11:52<00:00, 52.75s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
