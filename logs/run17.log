nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=17, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_11-43-10 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:14, 53.25s/it]  1% 2/150 [01:46<2:10:44, 53.01s/it]  2% 3/150 [02:38<2:09:37, 52.91s/it]  3% 4/150 [03:31<2:08:38, 52.87s/it]  3% 5/150 [04:24<2:07:39, 52.83s/it]  4% 6/150 [05:17<2:06:46, 52.82s/it]  5% 7/150 [06:10<2:05:55, 52.84s/it]  5% 8/150 [07:02<2:05:01, 52.83s/it]  6% 9/150 [07:55<2:04:07, 52.82s/it]  7% 10/150 [08:48<2:03:13, 52.81s/it]  7% 11/150 [09:41<2:02:22, 52.82s/it]  8% 12/150 [10:34<2:01:31, 52.84s/it]  9% 13/150 [11:27<2:00:39, 52.84s/it]  9% 14/150 [12:19<1:59:46, 52.84s/it] 10% 15/150 [13:12<1:58:53, 52.84s/it] 11% 16/150 [14:05<1:58:02, 52.86s/it] 11% 17/150 [14:58<1:57:09, 52.85s/it] 12% 18/150 [15:51<1:56:17, 52.86s/it] 13% 19/150 [16:44<1:55:24, 52.86s/it] 13% 20/150 [17:37<1:54:48, 52.99s/it] 14% 21/150 [18:30<1:53:53, 52.97s/it] 15% 22/150 [19:23<1:52:56, 52.94s/it] 15% 23/150 [20:16<1:52:00, 52.92s/it] 16% 24/150 [21:09<1:51:05, 52.90s/it] 17% 25/150 [22:01<1:50:12, 52.90s/it] 17% 26/150 [22:54<1:49:18, 52.89s/it] 18% 27/150 [23:47<1:48:24, 52.88s/it] 19% 28/150 [24:40<1:47:30, 52.87s/it] 19% 29/150 [25:33<1:46:54, 53.02s/it] 20% 30/150 [26:26<1:45:58, 52.99s/it] 21% 31/150 [27:19<1:45:00, 52.95s/it] 21% 32/150 [28:12<1:44:04, 52.92s/it] 22% 33/150 [29:05<1:43:09, 52.90s/it] 23% 34/150 [29:58<1:42:15, 52.89s/it] 23% 35/150 [30:51<1:41:21, 52.88s/it] 24% 36/150 [31:43<1:40:25, 52.86s/it] 25% 37/150 [32:36<1:39:32, 52.85s/it] 25% 38/150 [33:30<1:38:55, 52.99s/it] 26% 39/150 [34:22<1:37:59, 52.97s/it] 27% 40/150 [35:15<1:37:02, 52.93s/it] 27% 41/150 [36:08<1:36:06, 52.90s/it] 28% 42/150 [37:01<1:35:11, 52.88s/it] 29% 43/150 [37:54<1:34:19, 52.90s/it] 29% 44/150 [38:47<1:33:26, 52.89s/it] 30% 45/150 [39:40<1:32:31, 52.87s/it] 31% 46/150 [40:32<1:31:38, 52.87s/it] 31% 47/150 [41:26<1:30:58, 52.99s/it] 32% 48/150 [42:19<1:30:03, 52.97s/it] 33% 49/150 [43:12<1:29:06, 52.94s/it] 33% 50/150 [44:04<1:28:11, 52.91s/it] 34% 51/150 [44:57<1:27:16, 52.89s/it] 35% 52/150 [45:50<1:26:23, 52.90s/it] 35% 53/150 [46:43<1:25:29, 52.88s/it] 36% 54/150 [47:36<1:24:34, 52.86s/it] 37% 55/150 [48:29<1:23:41, 52.86s/it] 37% 56/150 [49:22<1:22:56, 52.94s/it] 38% 57/150 [50:15<1:22:00, 52.91s/it] 39% 58/150 [51:08<1:21:06, 52.89s/it] 39% 59/150 [52:00<1:20:11, 52.88s/it] 40% 60/150 [52:53<1:19:17, 52.86s/it] 41% 61/150 [53:46<1:18:25, 52.87s/it] 41% 62/150 [54:39<1:17:31, 52.86s/it] 42% 63/150 [55:32<1:16:38, 52.86s/it] 43% 64/150 [56:25<1:15:44, 52.85s/it] 43% 65/150 [57:17<1:14:53, 52.86s/it] 44% 66/150 [58:10<1:13:59, 52.85s/it] 45% 67/150 [59:03<1:13:06, 52.85s/it] 45% 68/150 [59:56<1:12:14, 52.86s/it] 46% 69/150 [1:00:49<1:11:20, 52.85s/it] 47% 70/150 [1:01:42<1:10:30, 52.88s/it] 47% 71/150 [1:02:35<1:09:36, 52.87s/it] 48% 72/150 [1:03:28<1:08:44, 52.88s/it] 49% 73/150 [1:04:20<1:07:51, 52.87s/it] 49% 74/150 [1:05:13<1:06:58, 52.88s/it] 50% 75/150 [1:06:06<1:06:04, 52.86s/it] 51% 76/150 [1:06:59<1:05:11, 52.86s/it] 51% 77/150 [1:07:52<1:04:17, 52.84s/it] 52% 78/150 [1:08:45<1:03:25, 52.86s/it] 53% 79/150 [1:09:38<1:02:34, 52.88s/it] 53% 80/150 [1:10:30<1:01:41, 52.88s/it] 54% 81/150 [1:11:23<1:00:48, 52.87s/it] 55% 82/150 [1:12:16<59:54, 52.86s/it]   55% 83/150 [1:13:09<59:02, 52.87s/it] 56% 84/150 [1:14:02<58:08, 52.85s/it] 57% 85/150 [1:14:55<57:14, 52.84s/it] 57% 86/150 [1:15:48<56:21, 52.84s/it] 58% 87/150 [1:16:41<55:37, 52.98s/it] 59% 88/150 [1:17:34<54:43, 52.95s/it] 59% 89/150 [1:18:27<53:48, 52.93s/it] 60% 90/150 [1:19:19<52:54, 52.91s/it] 61% 91/150 [1:20:12<52:00, 52.89s/it] 61% 92/150 [1:21:05<51:07, 52.89s/it] 62% 93/150 [1:21:58<50:13, 52.88s/it] 63% 94/150 [1:22:51<49:20, 52.86s/it] 63% 95/150 [1:23:44<48:26, 52.85s/it] 64% 96/150 [1:24:37<47:34, 52.86s/it] 65% 97/150 [1:25:29<46:40, 52.84s/it] 65% 98/150 [1:26:22<45:46, 52.83s/it] 66% 99/150 [1:27:15<44:54, 52.83s/it] 67% 100/150 [1:28:08<44:08, 52.98s/it] 67% 101/150 [1:29:01<43:15, 52.97s/it] 68% 102/150 [1:29:54<42:20, 52.93s/it] 69% 103/150 [1:30:47<41:26, 52.90s/it] 69% 104/150 [1:31:40<40:32, 52.88s/it] 70% 105/150 [1:32:33<39:39, 52.88s/it] 71% 106/150 [1:33:26<38:46, 52.87s/it] 71% 107/150 [1:34:18<37:52, 52.86s/it] 72% 108/150 [1:35:11<36:59, 52.85s/it] 73% 109/150 [1:36:04<36:06, 52.83s/it] 73% 110/150 [1:36:57<35:14, 52.86s/it] 74% 111/150 [1:37:50<34:21, 52.86s/it] 75% 112/150 [1:38:43<33:28, 52.85s/it] 75% 113/150 [1:39:35<32:35, 52.85s/it] 76% 114/150 [1:40:28<31:42, 52.85s/it] 77% 115/150 [1:41:21<30:50, 52.86s/it] 77% 116/150 [1:42:14<29:56, 52.84s/it] 78% 117/150 [1:43:07<29:03, 52.83s/it] 79% 118/150 [1:44:00<28:14, 52.94s/it] 79% 119/150 [1:44:53<27:20, 52.93s/it] 80% 120/150 [1:45:46<26:27, 52.90s/it] 81% 121/150 [1:46:39<25:33, 52.89s/it] 81% 122/150 [1:47:31<24:40, 52.88s/it] 82% 123/150 [1:48:24<23:47, 52.87s/it] 83% 124/150 [1:49:17<22:54, 52.86s/it] 83% 125/150 [1:50:10<22:01, 52.86s/it] 84% 126/150 [1:51:03<21:08, 52.85s/it] 85% 127/150 [1:51:56<20:17, 52.93s/it] 85% 128/150 [1:52:49<19:23, 52.89s/it] 86% 129/150 [1:53:42<18:30, 52.88s/it] 87% 130/150 [1:54:34<17:37, 52.85s/it] 87% 131/150 [1:55:27<16:44, 52.85s/it] 88% 132/150 [1:56:20<15:51, 52.87s/it] 89% 133/150 [1:57:13<14:58, 52.88s/it] 89% 134/150 [1:58:06<14:05, 52.87s/it] 90% 135/150 [1:58:59<13:12, 52.87s/it] 91% 136/150 [1:59:52<12:19, 52.86s/it] 91% 137/150 [2:00:44<11:26, 52.84s/it] 92% 138/150 [2:01:37<10:34, 52.84s/it] 93% 139/150 [2:02:30<09:41, 52.84s/it] 93% 140/150 [2:03:23<08:49, 52.98s/it] 94% 141/150 [2:04:16<07:56, 52.95s/it] 95% 142/150 [2:05:09<07:03, 52.92s/it] 95% 143/150 [2:06:02<06:10, 52.88s/it] 96% 144/150 [2:06:55<05:17, 52.85s/it] 97% 145/150 [2:07:48<04:24, 52.86s/it] 97% 146/150 [2:08:40<03:31, 52.85s/it] 98% 147/150 [2:09:33<02:38, 52.83s/it] 99% 148/150 [2:10:26<01:45, 52.83s/it] 99% 149/150 [2:11:19<00:52, 52.92s/it]100% 150/150 [2:12:12<00:00, 52.90s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5dded80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5b078c0] Warning: data is not aligned! This can lead to a speed loss
120.44991908157589 (1014, 1352, 3)
120.53059338880914 (1014, 1352, 3)
120.56854140650226 (1014, 1352, 3)
120.57371454469771 (1014, 1352, 3)
120.56526430758338 (1014, 1352, 3)
120.57067645662889 (1014, 1352, 3)
120.57189144871211 (1014, 1352, 3)
120.55809811553439 (1014, 1352, 3)
120.55057304249384 (1014, 1352, 3)
120.53882309404044 (1014, 1352, 3)
120.53182296955055 (1014, 1352, 3)
120.50882078903244 (1014, 1352, 3)
120.50776627218934 (1014, 1352, 3)
120.49970068936273 (1014, 1352, 3)
120.50362795614843 (1014, 1352, 3)
120.49956598741875 (1014, 1352, 3)
120.50751777871145 (1014, 1352, 3)
120.5049740030111 (1014, 1352, 3)
120.49940526903431 (1014, 1352, 3)
120.48858291609771 (1014, 1352, 3)
120.48327750740131 (1014, 1352, 3)
120.48447645196052 (1014, 1352, 3)
120.48161585923306 (1014, 1352, 3)
120.48894811884115 (1014, 1352, 3)
120.48231733054787 (1014, 1352, 3)
120.48001402456342 (1014, 1352, 3)
120.47101039101494 (1014, 1352, 3)
120.47863831409576 (1014, 1352, 3)
120.48679240144875 (1014, 1352, 3)
120.48966126108252 (1014, 1352, 3)
120.4841951340017 (1014, 1352, 3)
120.47664842111816 (1014, 1352, 3)
120.47333509369808 (1014, 1352, 3)
120.46144679613614 (1014, 1352, 3)
120.46315974775237 (1014, 1352, 3)
120.45868224540847 (1014, 1352, 3)
120.46382085711285 (1014, 1352, 3)
120.45042603744811 (1014, 1352, 3)
120.45292337258655 (1014, 1352, 3)
120.4518951153282 (1014, 1352, 3)
120.4511785690666 (1014, 1352, 3)
120.44540486444218 (1014, 1352, 3)
120.44529569265003 (1014, 1352, 3)
120.45543918669203 (1014, 1352, 3)
120.45584280623538 (1014, 1352, 3)
120.46700118459904 (1014, 1352, 3)
120.46581853070815 (1014, 1352, 3)
120.46752953716995 (1014, 1352, 3)
120.4505763006275 (1014, 1352, 3)
120.45213145159094 (1014, 1352, 3)
120.4565591093527 (1014, 1352, 3)
120.46857773226117 (1014, 1352, 3)
120.46738438002093 (1014, 1352, 3)
120.4691539842598 (1014, 1352, 3)
120.46746729222833 (1014, 1352, 3)
120.46370147325996 (1014, 1352, 3)
120.47091143128353 (1014, 1352, 3)
120.47701167870717 (1014, 1352, 3)
120.48692564452692 (1014, 1352, 3)
120.47849412952394 (1014, 1352, 3)
120.4802017319655 (1014, 1352, 3)
120.472506701057 (1014, 1352, 3)
120.4735918540823 (1014, 1352, 3)
120.46221804986598 (1014, 1352, 3)
120.46159754560415 (1014, 1352, 3)
120.45432801722629 (1014, 1352, 3)
120.44900656100587 (1014, 1352, 3)
120.45029084921552 (1014, 1352, 3)
120.45216913895794 (1014, 1352, 3)
120.46009515695451 (1014, 1352, 3)
120.45215211885672 (1014, 1352, 3)
120.45789129699007 (1014, 1352, 3)
120.45584839855437 (1014, 1352, 3)
120.46904238102464 (1014, 1352, 3)
120.47156305801617 (1014, 1352, 3)
120.48181839843765 (1014, 1352, 3)
120.47658155643477 (1014, 1352, 3)
120.47023938042942 (1014, 1352, 3)
120.4668917696626 (1014, 1352, 3)
120.46940077572758 (1014, 1352, 3)
120.47869059012095 (1014, 1352, 3)
120.47581784017834 (1014, 1352, 3)
120.4803750938537 (1014, 1352, 3)
120.4725514396088 (1014, 1352, 3)
120.47524815307587 (1014, 1352, 3)
120.46704738201666 (1014, 1352, 3)
120.47174420052208 (1014, 1352, 3)
120.46841215099067 (1014, 1352, 3)
120.4656191523795 (1014, 1352, 3)
120.46094300113987 (1014, 1352, 3)
120.46183047784663 (1014, 1352, 3)
120.4659277025003 (1014, 1352, 3)
120.4588894043548 (1014, 1352, 3)
120.45869464576793 (1014, 1352, 3)
120.45288349692082 (1014, 1352, 3)
120.45870388525145 (1014, 1352, 3)
120.45789591673183 (1014, 1352, 3)
120.4691384230244 (1014, 1352, 3)
120.4726039587783 (1014, 1352, 3)
120.46981898392913 (1014, 1352, 3)
120.46687450641707 (1014, 1352, 3)
120.47077867449397 (1014, 1352, 3)
120.48238443837556 (1014, 1352, 3)
120.48561825760846 (1014, 1352, 3)
120.49914340261974 (1014, 1352, 3)
120.50125608347047 (1014, 1352, 3)
120.50515903582586 (1014, 1352, 3)
120.49472936093896 (1014, 1352, 3)
120.50060178215048 (1014, 1352, 3)
120.50232275752872 (1014, 1352, 3)
120.50455457908804 (1014, 1352, 3)
120.5090965146723 (1014, 1352, 3)
120.51325185081444 (1014, 1352, 3)
120.51820421398254 (1014, 1352, 3)
120.51211928465001 (1014, 1352, 3)
120.52098505537855 (1014, 1352, 3)
120.51998500285937 (1014, 1352, 3)
120.52838685425736 (1014, 1352, 3)
120.52484205346063 (1014, 1352, 3)
120.53557590187084 (1014, 1352, 3)
120.53560726748597 (1014, 1352, 3)
120.53132962975931 (1014, 1352, 3)
120.52456341008913 (1014, 1352, 3)
120.5226469466911 (1014, 1352, 3)
120.53151660772849 (1014, 1352, 3)
120.53397528292271 (1014, 1352, 3)
120.55151279522582 (1014, 1352, 3)
120.554300201518 (1014, 1352, 3)
120.56355573256461 (1014, 1352, 3)
120.55660545265688 (1014, 1352, 3)
120.56674019350396 (1014, 1352, 3)
120.56918038973114 (1014, 1352, 3)
120.57706312804173 (1014, 1352, 3)
120.58150148415282 (1014, 1352, 3)
120.5813864768974 (1014, 1352, 3)
120.57929592217826 (1014, 1352, 3)
120.56876047951947 (1014, 1352, 3)
120.5778061770324 (1014, 1352, 3)
120.57312978264845 (1014, 1352, 3)
120.58177623721548 (1014, 1352, 3)
120.57603170990745 (1014, 1352, 3)
120.58671206657097 (1014, 1352, 3)
120.57492564647207 (1014, 1352, 3)
120.57040073098904 (1014, 1352, 3)
120.56274046971589 (1014, 1352, 3)
120.55937146225038 (1014, 1352, 3)
120.5515718792915 (1014, 1352, 3)
120.54269735536805 (1014, 1352, 3)
120.54800276406444 (1014, 1352, 3)
120.53603860547989 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:15<00:00, 52.90s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
