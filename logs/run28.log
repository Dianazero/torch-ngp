nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=28, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_09-12-54 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:13:11, 53.64s/it]  1% 2/150 [01:46<2:11:33, 53.33s/it]  2% 3/150 [02:39<2:10:27, 53.24s/it]  3% 4/150 [03:33<2:09:30, 53.22s/it]  3% 5/150 [04:26<2:08:34, 53.21s/it]  4% 6/150 [05:19<2:07:41, 53.20s/it]  5% 7/150 [06:12<2:06:46, 53.19s/it]  5% 8/150 [07:05<2:05:54, 53.20s/it]  6% 9/150 [07:59<2:05:01, 53.20s/it]  7% 10/150 [08:52<2:04:08, 53.20s/it]  7% 11/150 [09:45<2:03:16, 53.21s/it]  8% 12/150 [10:38<2:02:24, 53.22s/it]  9% 13/150 [11:31<2:01:31, 53.22s/it]  9% 14/150 [12:25<2:00:37, 53.22s/it] 10% 15/150 [13:18<1:59:45, 53.23s/it] 11% 16/150 [14:11<1:58:52, 53.22s/it] 11% 17/150 [15:04<1:57:58, 53.22s/it] 12% 18/150 [15:58<1:57:05, 53.23s/it] 13% 19/150 [16:51<1:56:12, 53.23s/it] 13% 20/150 [17:44<1:55:19, 53.23s/it] 14% 21/150 [18:37<1:54:26, 53.23s/it] 15% 22/150 [19:30<1:53:33, 53.23s/it] 15% 23/150 [20:24<1:52:40, 53.23s/it] 16% 24/150 [21:17<1:51:47, 53.24s/it] 17% 25/150 [22:10<1:50:53, 53.23s/it] 17% 26/150 [23:03<1:50:01, 53.24s/it] 18% 27/150 [23:57<1:49:09, 53.25s/it] 19% 28/150 [24:50<1:48:15, 53.24s/it] 19% 29/150 [25:43<1:47:22, 53.24s/it] 20% 30/150 [26:36<1:46:28, 53.24s/it] 21% 31/150 [27:30<1:45:36, 53.25s/it] 21% 32/150 [28:23<1:44:43, 53.25s/it] 22% 33/150 [29:16<1:43:51, 53.26s/it] 23% 34/150 [30:09<1:42:58, 53.26s/it] 23% 35/150 [31:03<1:42:05, 53.27s/it] 24% 36/150 [31:56<1:41:12, 53.27s/it] 25% 37/150 [32:49<1:40:18, 53.26s/it] 25% 38/150 [33:43<1:39:24, 53.25s/it] 26% 39/150 [34:36<1:38:30, 53.25s/it] 27% 40/150 [35:29<1:37:37, 53.25s/it] 27% 41/150 [36:22<1:36:44, 53.25s/it] 28% 42/150 [37:16<1:35:50, 53.25s/it] 29% 43/150 [38:09<1:34:57, 53.25s/it] 29% 44/150 [39:02<1:34:04, 53.25s/it] 30% 45/150 [39:55<1:33:11, 53.25s/it] 31% 46/150 [40:49<1:32:18, 53.25s/it] 31% 47/150 [41:42<1:31:25, 53.25s/it] 32% 48/150 [42:35<1:30:32, 53.26s/it] 33% 49/150 [43:28<1:29:38, 53.26s/it] 33% 50/150 [44:22<1:28:45, 53.25s/it] 34% 51/150 [45:15<1:27:52, 53.25s/it] 35% 52/150 [46:08<1:26:59, 53.26s/it] 35% 53/150 [47:01<1:26:05, 53.25s/it] 36% 54/150 [47:55<1:25:12, 53.25s/it] 37% 55/150 [48:48<1:24:19, 53.26s/it] 37% 56/150 [49:41<1:23:26, 53.26s/it] 38% 57/150 [50:34<1:22:32, 53.25s/it] 39% 58/150 [51:28<1:21:39, 53.26s/it] 39% 59/150 [52:21<1:20:46, 53.26s/it] 40% 60/150 [53:14<1:19:53, 53.27s/it] 41% 61/150 [54:07<1:19:00, 53.26s/it] 41% 62/150 [55:01<1:18:06, 53.26s/it] 42% 63/150 [55:54<1:17:13, 53.26s/it] 43% 64/150 [56:47<1:16:20, 53.26s/it] 43% 65/150 [57:40<1:15:27, 53.27s/it] 44% 66/150 [58:34<1:14:34, 53.26s/it] 45% 67/150 [59:27<1:13:41, 53.27s/it] 45% 68/150 [1:00:20<1:12:47, 53.26s/it] 46% 69/150 [1:01:14<1:11:54, 53.26s/it] 47% 70/150 [1:02:07<1:11:01, 53.26s/it] 47% 71/150 [1:03:00<1:10:08, 53.27s/it] 48% 72/150 [1:03:53<1:09:15, 53.27s/it] 49% 73/150 [1:04:47<1:08:21, 53.27s/it] 49% 74/150 [1:05:40<1:07:28, 53.27s/it] 50% 75/150 [1:06:33<1:06:34, 53.26s/it] 51% 76/150 [1:07:26<1:05:41, 53.27s/it] 51% 77/150 [1:08:20<1:04:48, 53.27s/it] 52% 78/150 [1:09:13<1:03:55, 53.27s/it] 53% 79/150 [1:10:06<1:03:02, 53.27s/it] 53% 80/150 [1:10:59<1:02:08, 53.27s/it] 54% 81/150 [1:11:53<1:01:14, 53.26s/it] 55% 82/150 [1:12:46<1:00:21, 53.26s/it] 55% 83/150 [1:13:39<59:28, 53.26s/it]   56% 84/150 [1:14:32<58:35, 53.26s/it] 57% 85/150 [1:15:26<57:42, 53.26s/it] 57% 86/150 [1:16:19<56:49, 53.27s/it] 58% 87/150 [1:17:12<55:55, 53.27s/it] 59% 88/150 [1:18:06<55:02, 53.27s/it] 59% 89/150 [1:18:59<54:09, 53.27s/it] 60% 90/150 [1:19:52<53:16, 53.27s/it] 61% 91/150 [1:20:45<52:23, 53.27s/it] 61% 92/150 [1:21:39<51:29, 53.28s/it] 62% 93/150 [1:22:32<50:36, 53.27s/it] 63% 94/150 [1:23:25<49:43, 53.27s/it] 63% 95/150 [1:24:19<48:50, 53.28s/it] 64% 96/150 [1:25:12<47:56, 53.28s/it] 65% 97/150 [1:26:05<47:03, 53.28s/it] 65% 98/150 [1:26:58<46:10, 53.28s/it] 66% 99/150 [1:27:52<45:16, 53.27s/it] 67% 100/150 [1:28:45<44:22, 53.26s/it] 67% 101/150 [1:29:38<43:29, 53.26s/it] 68% 102/150 [1:30:31<42:36, 53.27s/it] 69% 103/150 [1:31:25<41:43, 53.26s/it] 69% 104/150 [1:32:18<40:50, 53.27s/it] 70% 105/150 [1:33:11<39:56, 53.26s/it] 71% 106/150 [1:34:04<39:03, 53.26s/it] 71% 107/150 [1:34:58<38:10, 53.26s/it] 72% 108/150 [1:35:51<37:16, 53.26s/it] 73% 109/150 [1:36:44<36:23, 53.26s/it] 73% 110/150 [1:37:37<35:30, 53.26s/it] 74% 111/150 [1:38:31<34:36, 53.26s/it] 75% 112/150 [1:39:24<33:44, 53.27s/it] 75% 113/150 [1:40:17<32:51, 53.29s/it] 76% 114/150 [1:41:11<31:58, 53.29s/it] 77% 115/150 [1:42:04<31:04, 53.28s/it] 77% 116/150 [1:42:57<30:11, 53.28s/it] 78% 117/150 [1:43:50<29:18, 53.28s/it] 79% 118/150 [1:44:44<28:24, 53.27s/it] 79% 119/150 [1:45:37<27:31, 53.27s/it] 80% 120/150 [1:46:30<26:38, 53.27s/it] 81% 121/150 [1:47:23<25:44, 53.27s/it] 81% 122/150 [1:48:17<24:51, 53.27s/it] 82% 123/150 [1:49:10<23:58, 53.26s/it] 83% 124/150 [1:50:03<23:04, 53.26s/it] 83% 125/150 [1:50:57<22:11, 53.27s/it] 84% 126/150 [1:51:50<21:18, 53.27s/it] 85% 127/150 [1:52:43<20:25, 53.27s/it] 85% 128/150 [1:53:36<19:32, 53.27s/it] 86% 129/150 [1:54:30<18:38, 53.27s/it] 87% 130/150 [1:55:23<17:45, 53.26s/it] 87% 131/150 [1:56:16<16:51, 53.26s/it] 88% 132/150 [1:57:09<15:58, 53.26s/it] 89% 133/150 [1:58:03<15:05, 53.27s/it] 89% 134/150 [1:58:56<14:12, 53.27s/it] 90% 135/150 [1:59:49<13:19, 53.27s/it] 91% 136/150 [2:00:42<12:25, 53.27s/it] 91% 137/150 [2:01:36<11:32, 53.27s/it] 92% 138/150 [2:02:29<10:39, 53.28s/it] 93% 139/150 [2:03:22<09:46, 53.28s/it] 93% 140/150 [2:04:16<08:52, 53.27s/it] 94% 141/150 [2:05:09<07:59, 53.27s/it] 95% 142/150 [2:06:02<07:06, 53.27s/it] 95% 143/150 [2:06:55<06:12, 53.27s/it] 96% 144/150 [2:07:49<05:19, 53.27s/it] 97% 145/150 [2:08:42<04:26, 53.27s/it] 97% 146/150 [2:09:35<03:33, 53.27s/it] 98% 147/150 [2:10:28<02:39, 53.26s/it] 99% 148/150 [2:11:22<01:46, 53.26s/it] 99% 149/150 [2:12:15<00:53, 53.26s/it]100% 150/150 [2:13:08<00:00, 53.26s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5b04d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x63e28c0] Warning: data is not aligned! This can lead to a speed loss
120.71212419616494 (1014, 1352, 3)
120.7709439639913 (1014, 1352, 3)
120.79882969783971 (1014, 1352, 3)
120.80501261432646 (1014, 1352, 3)
120.79269054732755 (1014, 1352, 3)
120.79809102544651 (1014, 1352, 3)
120.80504981540484 (1014, 1352, 3)
120.79259134445184 (1014, 1352, 3)
120.78760299592685 (1014, 1352, 3)
120.77362414364576 (1014, 1352, 3)
120.77587590303794 (1014, 1352, 3)
120.75912228796844 (1014, 1352, 3)
120.7702721562815 (1014, 1352, 3)
120.768275941552 (1014, 1352, 3)
120.77821397865776 (1014, 1352, 3)
120.77394825500197 (1014, 1352, 3)
120.78718794860124 (1014, 1352, 3)
120.79048693050741 (1014, 1352, 3)
120.79117794661718 (1014, 1352, 3)
120.78741358651463 (1014, 1352, 3)
120.7806505277204 (1014, 1352, 3)
120.78342358849869 (1014, 1352, 3)
120.78006090278507 (1014, 1352, 3)
120.79267595866936 (1014, 1352, 3)
120.78776736147583 (1014, 1352, 3)
120.79238734638143 (1014, 1352, 3)
120.78414475450207 (1014, 1352, 3)
120.79720573703847 (1014, 1352, 3)
120.80699934642811 (1014, 1352, 3)
120.81801378336426 (1014, 1352, 3)
120.81781999735459 (1014, 1352, 3)
120.81100709397819 (1014, 1352, 3)
120.8087237258266 (1014, 1352, 3)
120.79877790810312 (1014, 1352, 3)
120.80619478192874 (1014, 1352, 3)
120.80474904590176 (1014, 1352, 3)
120.81404931550016 (1014, 1352, 3)
120.79941324416745 (1014, 1352, 3)
120.80076026360733 (1014, 1352, 3)
120.79741848830379 (1014, 1352, 3)
120.80215591190785 (1014, 1352, 3)
120.80241218600345 (1014, 1352, 3)
120.80323158230532 (1014, 1352, 3)
120.81083786554315 (1014, 1352, 3)
120.80666964275294 (1014, 1352, 3)
120.81807286742995 (1014, 1352, 3)
120.81469462048092 (1014, 1352, 3)
120.82041215877129 (1014, 1352, 3)
120.80290236491875 (1014, 1352, 3)
120.80529295970807 (1014, 1352, 3)
120.80110674423942 (1014, 1352, 3)
120.81096697516816 (1014, 1352, 3)
120.81134360569385 (1014, 1352, 3)
120.8122665814689 (1014, 1352, 3)
120.80886134550222 (1014, 1352, 3)
120.79951025874445 (1014, 1352, 3)
120.80534304743453 (1014, 1352, 3)
120.8057624713576 (1014, 1352, 3)
120.8172933467938 (1014, 1352, 3)
120.8068318200032 (1014, 1352, 3)
120.80993239615793 (1014, 1352, 3)
120.80000311224708 (1014, 1352, 3)
120.80340154017327 (1014, 1352, 3)
120.80010815058607 (1014, 1352, 3)
120.80610481853654 (1014, 1352, 3)
120.8057549338842 (1014, 1352, 3)
120.80098176806757 (1014, 1352, 3)
120.80511959781987 (1014, 1352, 3)
120.80135231998568 (1014, 1352, 3)
120.80921463417481 (1014, 1352, 3)
120.7999065839587 (1014, 1352, 3)
120.8090106361044 (1014, 1352, 3)
120.80389487996452 (1014, 1352, 3)
120.81499368797388 (1014, 1352, 3)
120.81784042147606 (1014, 1352, 3)
120.83071953207366 (1014, 1352, 3)
120.83026606794813 (1014, 1352, 3)
120.82575355282457 (1014, 1352, 3)
120.82862970678742 (1014, 1352, 3)
120.82718956307941 (1014, 1352, 3)
120.83777071686721 (1014, 1352, 3)
120.8323960120444 (1014, 1352, 3)
120.84183074044249 (1014, 1352, 3)
120.82971413037981 (1014, 1352, 3)
120.83485128321837 (1014, 1352, 3)
120.82897035195624 (1014, 1352, 3)
120.83821226692187 (1014, 1352, 3)
120.84072248870838 (1014, 1352, 3)
120.8427133542632 (1014, 1352, 3)
120.84382646888336 (1014, 1352, 3)
120.83950141801758 (1014, 1352, 3)
120.844733883423 (1014, 1352, 3)
120.83629045434917 (1014, 1352, 3)
120.84413453271556 (1014, 1352, 3)
120.84017735918054 (1014, 1352, 3)
120.84949489202448 (1014, 1352, 3)
120.84564980801326 (1014, 1352, 3)
120.85375405078409 (1014, 1352, 3)
120.85457174507584 (1014, 1352, 3)
120.85505876311521 (1014, 1352, 3)
120.86070578955763 (1014, 1352, 3)
120.86593825496305 (1014, 1352, 3)
120.88071826772328 (1014, 1352, 3)
120.88090184167221 (1014, 1352, 3)
120.89451695007567 (1014, 1352, 3)
120.88914735128321 (1014, 1352, 3)
120.89011287731132 (1014, 1352, 3)
120.87995382203393 (1014, 1352, 3)
120.8862519889204 (1014, 1352, 3)
120.88908632206311 (1014, 1352, 3)
120.89265300584714 (1014, 1352, 3)
120.89902460231318 (1014, 1352, 3)
120.8966972250427 (1014, 1352, 3)
120.89708114989749 (1014, 1352, 3)
120.88580387396955 (1014, 1352, 3)
120.89687010064229 (1014, 1352, 3)
120.89463074160957 (1014, 1352, 3)
120.90237002478126 (1014, 1352, 3)
120.89310452481823 (1014, 1352, 3)
120.8975414220635 (1014, 1352, 3)
120.89235928752883 (1014, 1352, 3)
120.88793406121012 (1014, 1352, 3)
120.88699649677687 (1014, 1352, 3)
120.89000783897234 (1014, 1352, 3)
120.89730873296531 (1014, 1352, 3)
120.89158438663445 (1014, 1352, 3)
120.90076162521542 (1014, 1352, 3)
120.89872553482022 (1014, 1352, 3)
120.90483137456283 (1014, 1352, 3)
120.8963808943042 (1014, 1352, 3)
120.90510418247105 (1014, 1352, 3)
120.90631722939985 (1014, 1352, 3)
120.91454863664126 (1014, 1352, 3)
120.91891015915253 (1014, 1352, 3)
120.91998266867407 (1014, 1352, 3)
120.91627155717393 (1014, 1352, 3)
120.9049203653778 (1014, 1352, 3)
120.9125468295928 (1014, 1352, 3)
120.91058246676704 (1014, 1352, 3)
120.92271634007524 (1014, 1352, 3)
120.91515285023478 (1014, 1352, 3)
120.9205353356753 (1014, 1352, 3)
120.90260733362122 (1014, 1352, 3)
120.89863143797486 (1014, 1352, 3)
120.89560866799715 (1014, 1352, 3)
120.89736027955759 (1014, 1352, 3)
120.90039836762641 (1014, 1352, 3)
120.89369706748519 (1014, 1352, 3)
120.90116524475879 (1014, 1352, 3)
120.88836053631798 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:13:11<00:00, 53.28s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
