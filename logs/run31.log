nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=31, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_09-13-23 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:54<2:14:20, 54.10s/it]  1% 2/150 [01:47<2:12:40, 53.79s/it]  2% 3/150 [02:41<2:11:34, 53.71s/it]  3% 4/150 [03:34<2:10:37, 53.68s/it]  3% 5/150 [04:28<2:09:41, 53.66s/it]  4% 6/150 [05:22<2:08:45, 53.65s/it]  5% 7/150 [06:15<2:07:50, 53.64s/it]  5% 8/150 [07:09<2:06:55, 53.63s/it]  6% 9/150 [08:03<2:06:04, 53.65s/it]  7% 10/150 [08:56<2:05:10, 53.64s/it]  7% 11/150 [09:50<2:04:15, 53.64s/it]  8% 12/150 [10:44<2:03:24, 53.66s/it]  9% 13/150 [11:37<2:02:32, 53.67s/it]  9% 14/150 [12:31<2:01:39, 53.67s/it] 10% 15/150 [13:25<2:00:46, 53.68s/it] 11% 16/150 [14:18<1:59:52, 53.68s/it] 11% 17/150 [15:12<1:58:59, 53.68s/it] 12% 18/150 [16:06<1:58:03, 53.67s/it] 13% 19/150 [16:59<1:57:10, 53.67s/it] 13% 20/150 [17:53<1:56:17, 53.68s/it] 14% 21/150 [18:47<1:55:24, 53.68s/it] 15% 22/150 [19:40<1:54:32, 53.69s/it] 15% 23/150 [20:34<1:53:39, 53.70s/it] 16% 24/150 [21:28<1:52:46, 53.70s/it] 17% 25/150 [22:22<1:51:53, 53.71s/it] 17% 26/150 [23:15<1:51:00, 53.71s/it] 18% 27/150 [24:09<1:50:07, 53.72s/it] 19% 28/150 [25:03<1:49:13, 53.72s/it] 19% 29/150 [25:56<1:48:18, 53.70s/it] 20% 30/150 [26:50<1:47:25, 53.71s/it] 21% 31/150 [27:44<1:46:32, 53.72s/it] 21% 32/150 [28:38<1:45:39, 53.72s/it] 22% 33/150 [29:31<1:44:46, 53.73s/it] 23% 34/150 [30:25<1:43:51, 53.72s/it] 23% 35/150 [31:19<1:42:57, 53.72s/it] 24% 36/150 [32:12<1:42:03, 53.72s/it] 25% 37/150 [33:06<1:41:09, 53.71s/it] 25% 38/150 [34:00<1:40:13, 53.69s/it] 26% 39/150 [34:53<1:39:20, 53.69s/it] 27% 40/150 [35:47<1:38:27, 53.70s/it] 27% 41/150 [36:41<1:37:34, 53.71s/it] 28% 42/150 [37:35<1:36:40, 53.71s/it] 29% 43/150 [38:28<1:35:45, 53.70s/it] 29% 44/150 [39:22<1:34:50, 53.69s/it] 30% 45/150 [40:16<1:33:58, 53.70s/it] 31% 46/150 [41:09<1:33:06, 53.71s/it] 31% 47/150 [42:03<1:32:12, 53.72s/it] 32% 48/150 [42:57<1:31:17, 53.70s/it] 33% 49/150 [43:51<1:30:24, 53.71s/it] 33% 50/150 [44:44<1:29:31, 53.72s/it] 34% 51/150 [45:38<1:28:38, 53.72s/it] 35% 52/150 [46:32<1:27:45, 53.73s/it] 35% 53/150 [47:26<1:26:51, 53.73s/it] 36% 54/150 [48:19<1:25:56, 53.71s/it] 37% 55/150 [49:13<1:25:01, 53.70s/it] 37% 56/150 [50:07<1:24:08, 53.71s/it] 38% 57/150 [51:00<1:23:16, 53.72s/it] 39% 58/150 [51:54<1:22:22, 53.72s/it] 39% 59/150 [52:48<1:21:27, 53.71s/it] 40% 60/150 [53:41<1:20:32, 53.70s/it] 41% 61/150 [54:35<1:19:39, 53.71s/it] 41% 62/150 [55:29<1:18:47, 53.72s/it] 42% 63/150 [56:23<1:17:53, 53.72s/it] 43% 64/150 [57:16<1:17:00, 53.72s/it] 43% 65/150 [58:10<1:16:06, 53.73s/it] 44% 66/150 [59:04<1:15:13, 53.73s/it] 45% 67/150 [59:58<1:14:19, 53.73s/it] 45% 68/150 [1:00:51<1:13:25, 53.73s/it] 46% 69/150 [1:01:45<1:12:31, 53.73s/it] 47% 70/150 [1:02:39<1:11:37, 53.72s/it] 47% 71/150 [1:03:32<1:10:43, 53.72s/it] 48% 72/150 [1:04:26<1:09:49, 53.71s/it] 49% 73/150 [1:05:20<1:08:54, 53.69s/it] 49% 74/150 [1:06:14<1:08:01, 53.71s/it] 50% 75/150 [1:07:07<1:07:08, 53.71s/it] 51% 76/150 [1:08:01<1:06:14, 53.71s/it] 51% 77/150 [1:08:55<1:05:20, 53.70s/it] 52% 78/150 [1:09:48<1:04:27, 53.71s/it] 53% 79/150 [1:10:42<1:03:33, 53.72s/it] 53% 80/150 [1:11:36<1:02:40, 53.72s/it] 54% 81/150 [1:12:29<1:01:45, 53.71s/it] 55% 82/150 [1:13:23<1:00:52, 53.71s/it] 55% 83/150 [1:14:17<59:57, 53.70s/it]   56% 84/150 [1:15:11<59:04, 53.71s/it] 57% 85/150 [1:16:04<58:11, 53.71s/it] 57% 86/150 [1:16:58<57:17, 53.72s/it] 58% 87/150 [1:17:52<56:24, 53.73s/it] 59% 88/150 [1:18:46<55:30, 53.73s/it] 59% 89/150 [1:19:39<54:37, 53.72s/it] 60% 90/150 [1:20:33<53:43, 53.73s/it] 61% 91/150 [1:21:27<52:49, 53.73s/it] 61% 92/150 [1:22:20<51:56, 53.73s/it] 62% 93/150 [1:23:14<51:02, 53.73s/it] 63% 94/150 [1:24:08<50:09, 53.74s/it] 63% 95/150 [1:25:02<49:15, 53.74s/it] 64% 96/150 [1:25:55<48:20, 53.72s/it] 65% 97/150 [1:26:49<47:27, 53.72s/it] 65% 98/150 [1:27:43<46:33, 53.71s/it] 66% 99/150 [1:28:37<45:39, 53.72s/it] 67% 100/150 [1:29:30<44:46, 53.72s/it] 67% 101/150 [1:30:24<43:51, 53.71s/it] 68% 102/150 [1:31:18<42:57, 53.70s/it] 69% 103/150 [1:32:11<42:03, 53.68s/it] 69% 104/150 [1:33:05<41:09, 53.69s/it] 70% 105/150 [1:33:59<40:15, 53.68s/it] 71% 106/150 [1:34:52<39:22, 53.69s/it] 71% 107/150 [1:35:46<38:28, 53.68s/it] 72% 108/150 [1:36:40<37:35, 53.70s/it] 73% 109/150 [1:37:33<36:41, 53.71s/it] 73% 110/150 [1:38:27<35:48, 53.72s/it] 74% 111/150 [1:39:21<34:55, 53.73s/it] 75% 112/150 [1:40:15<34:02, 53.74s/it] 75% 113/150 [1:41:08<33:07, 53.72s/it] 76% 114/150 [1:42:02<32:13, 53.70s/it] 77% 115/150 [1:42:56<31:19, 53.71s/it] 77% 116/150 [1:43:49<30:25, 53.70s/it] 78% 117/150 [1:44:43<29:32, 53.71s/it] 79% 118/150 [1:45:37<28:38, 53.71s/it] 79% 119/150 [1:46:31<27:45, 53.72s/it] 80% 120/150 [1:47:24<26:51, 53.72s/it] 81% 121/150 [1:48:18<25:57, 53.72s/it] 81% 122/150 [1:49:12<25:03, 53.71s/it] 82% 123/150 [1:50:05<24:10, 53.70s/it] 83% 124/150 [1:50:59<23:16, 53.70s/it] 83% 125/150 [1:51:53<22:22, 53.71s/it] 84% 126/150 [1:52:47<21:28, 53.70s/it] 85% 127/150 [1:53:40<20:35, 53.71s/it] 85% 128/150 [1:54:34<19:41, 53.70s/it] 86% 129/150 [1:55:28<18:47, 53.69s/it] 87% 130/150 [1:56:21<17:54, 53.70s/it] 87% 131/150 [1:57:15<17:00, 53.72s/it] 88% 132/150 [1:58:09<16:06, 53.72s/it] 89% 133/150 [1:59:03<15:13, 53.71s/it] 89% 134/150 [1:59:56<14:19, 53.70s/it] 90% 135/150 [2:00:50<13:25, 53.70s/it] 91% 136/150 [2:01:44<12:31, 53.69s/it] 91% 137/150 [2:02:37<11:38, 53.71s/it] 92% 138/150 [2:03:31<10:44, 53.69s/it] 93% 139/150 [2:04:25<09:50, 53.71s/it] 93% 140/150 [2:05:18<08:57, 53.70s/it] 94% 141/150 [2:06:12<08:03, 53.69s/it] 95% 142/150 [2:07:06<07:09, 53.69s/it] 95% 143/150 [2:07:59<06:15, 53.68s/it] 96% 144/150 [2:08:53<05:22, 53.68s/it] 97% 145/150 [2:09:47<04:28, 53.70s/it] 97% 146/150 [2:10:40<03:34, 53.69s/it] 98% 147/150 [2:11:34<02:41, 53.70s/it] 99% 148/150 [2:12:28<01:47, 53.69s/it] 99% 149/150 [2:13:22<00:53, 53.70s/it]100% 150/150 [2:14:15<00:00, 53.70s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x64ffd80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x56408c0] Warning: data is not aligned! This can lead to a speed loss
121.91218284257087 (1014, 1352, 3)
121.97457634536606 (1014, 1352, 3)
122.00376411695825 (1014, 1352, 3)
122.0195872187793 (1014, 1352, 3)
122.01205241996662 (1014, 1352, 3)
122.0192103451093 (1014, 1352, 3)
122.0282536111792 (1014, 1352, 3)
122.02422009033297 (1014, 1352, 3)
122.02587079700757 (1014, 1352, 3)
122.0162420394555 (1014, 1352, 3)
122.02245510583585 (1014, 1352, 3)
122.01174848958759 (1014, 1352, 3)
122.02820011943248 (1014, 1352, 3)
122.02800292940256 (1014, 1352, 3)
122.04377326890982 (1014, 1352, 3)
122.0416459994009 (1014, 1352, 3)
122.05574447867916 (1014, 1352, 3)
122.05827415200993 (1014, 1352, 3)
122.06227800925116 (1014, 1352, 3)
122.05927542025061 (1014, 1352, 3)
122.05231492828216 (1014, 1352, 3)
122.05649239055589 (1014, 1352, 3)
122.05460413189704 (1014, 1352, 3)
122.06663223743332 (1014, 1352, 3)
122.06054584923497 (1014, 1352, 3)
122.06832281977366 (1014, 1352, 3)
122.06376678181981 (1014, 1352, 3)
122.07694957965212 (1014, 1352, 3)
122.08601472870932 (1014, 1352, 3)
122.09854249578873 (1014, 1352, 3)
122.09898599099783 (1014, 1352, 3)
122.09234207291217 (1014, 1352, 3)
122.09172594524779 (1014, 1352, 3)
122.08389523981809 (1014, 1352, 3)
122.09280939626296 (1014, 1352, 3)
122.08976644530809 (1014, 1352, 3)
122.0998440472439 (1014, 1352, 3)
122.08711690183584 (1014, 1352, 3)
122.09006429707955 (1014, 1352, 3)
122.08568040529238 (1014, 1352, 3)
122.09221369272007 (1014, 1352, 3)
122.09287334321472 (1014, 1352, 3)
122.09242255367654 (1014, 1352, 3)
122.09830299865007 (1014, 1352, 3)
122.09339488774513 (1014, 1352, 3)
122.10278050099397 (1014, 1352, 3)
122.09630386618893 (1014, 1352, 3)
122.1018397756848 (1014, 1352, 3)
122.08521405451879 (1014, 1352, 3)
122.08962177444768 (1014, 1352, 3)
122.08375689070955 (1014, 1352, 3)
122.09388117635159 (1014, 1352, 3)
122.09337081645911 (1014, 1352, 3)
122.09449608829445 (1014, 1352, 3)
122.0905804924353 (1014, 1352, 3)
122.0842650623033 (1014, 1352, 3)
122.09092405533575 (1014, 1352, 3)
122.08915177650954 (1014, 1352, 3)
122.09917369839991 (1014, 1352, 3)
122.08872870542193 (1014, 1352, 3)
122.09397575948555 (1014, 1352, 3)
122.08345004259888 (1014, 1352, 3)
122.089729487374 (1014, 1352, 3)
122.08758422518663 (1014, 1352, 3)
122.09454982318546 (1014, 1352, 3)
122.09507185400449 (1014, 1352, 3)
122.09335258063638 (1014, 1352, 3)
122.09712569393385 (1014, 1352, 3)
122.09265037988865 (1014, 1352, 3)
122.10080933012772 (1014, 1352, 3)
122.09222244591498 (1014, 1352, 3)
122.10182324187217 (1014, 1352, 3)
122.09588128138994 (1014, 1352, 3)
122.10732535430988 (1014, 1352, 3)
122.10705230325736 (1014, 1352, 3)
122.11709878272237 (1014, 1352, 3)
122.11451391563476 (1014, 1352, 3)
122.1128508086007 (1014, 1352, 3)
122.11633847048617 (1014, 1352, 3)
122.11414385000525 (1014, 1352, 3)
122.12483976790418 (1014, 1352, 3)
122.1202287793378 (1014, 1352, 3)
122.13128260565107 (1014, 1352, 3)
122.11993846503974 (1014, 1352, 3)
122.12756906270789 (1014, 1352, 3)
122.12295637213138 (1014, 1352, 3)
122.13269794864014 (1014, 1352, 3)
122.13365399204042 (1014, 1352, 3)
122.13662959202331 (1014, 1352, 3)
122.13829342849029 (1014, 1352, 3)
122.13431048165914 (1014, 1352, 3)
122.13954294706457 (1014, 1352, 3)
122.13370724064283 (1014, 1352, 3)
122.14316117744087 (1014, 1352, 3)
122.1379552147645 (1014, 1352, 3)
122.14872966827336 (1014, 1352, 3)
122.1459439639913 (1014, 1352, 3)
122.15501640737759 (1014, 1352, 3)
122.15425001653381 (1014, 1352, 3)
122.1575351392147 (1014, 1352, 3)
122.16339394434524 (1014, 1352, 3)
122.16829257262233 (1014, 1352, 3)
122.18115952600476 (1014, 1352, 3)
122.18145373061168 (1014, 1352, 3)
122.19336245229509 (1014, 1352, 3)
122.18532458791904 (1014, 1352, 3)
122.18736238032437 (1014, 1352, 3)
122.17879202992425 (1014, 1352, 3)
122.18538853487078 (1014, 1352, 3)
122.18570364988777 (1014, 1352, 3)
122.18912420394555 (1014, 1352, 3)
122.19516269271618 (1014, 1352, 3)
122.19391706445074 (1014, 1352, 3)
122.19538152258907 (1014, 1352, 3)
122.18530781096212 (1014, 1352, 3)
122.19722455640753 (1014, 1352, 3)
122.19410258355411 (1014, 1352, 3)
122.20367784935947 (1014, 1352, 3)
122.19397541908351 (1014, 1352, 3)
122.19749833689296 (1014, 1352, 3)
122.19012522904194 (1014, 1352, 3)
122.18801668164436 (1014, 1352, 3)
122.18892895907005 (1014, 1352, 3)
122.19151528502348 (1014, 1352, 3)
122.19926721169894 (1014, 1352, 3)
122.19386624729137 (1014, 1352, 3)
122.2032895479072 (1014, 1352, 3)
122.19892243307696 (1014, 1352, 3)
122.20703858991865 (1014, 1352, 3)
122.19941723173403 (1014, 1352, 3)
122.20712733758933 (1014, 1352, 3)
122.20485734237441 (1014, 1352, 3)
122.21138673949325 (1014, 1352, 3)
122.21429450221554 (1014, 1352, 3)
122.2127699874343 (1014, 1352, 3)
122.20804569362262 (1014, 1352, 3)
122.19650849643453 (1014, 1352, 3)
122.2062274605231 (1014, 1352, 3)
122.20077616524476 (1014, 1352, 3)
122.21460451120214 (1014, 1352, 3)
122.2074336994114 (1014, 1352, 3)
122.21449874343024 (1014, 1352, 3)
122.19712267894448 (1014, 1352, 3)
122.1938905617217 (1014, 1352, 3)
122.19287956770889 (1014, 1352, 3)
122.19506810958222 (1014, 1352, 3)
122.19998132651752 (1014, 1352, 3)
122.19587656439045 (1014, 1352, 3)
122.2047576532101 (1014, 1352, 3)
122.19080724881249 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:14:18<00:00, 53.72s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
