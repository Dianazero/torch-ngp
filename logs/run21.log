nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=21, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_01-31-08 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:13:08, 53.62s/it]  1% 2/150 [01:46<2:10:33, 52.93s/it]  2% 3/150 [02:38<2:09:12, 52.74s/it]  3% 4/150 [03:31<2:08:06, 52.65s/it]  3% 5/150 [04:23<2:07:07, 52.60s/it]  4% 6/150 [05:16<2:06:12, 52.59s/it]  5% 7/150 [06:08<2:05:18, 52.58s/it]  5% 8/150 [07:01<2:04:25, 52.58s/it]  6% 9/150 [07:53<2:03:32, 52.57s/it]  7% 10/150 [08:46<2:02:39, 52.57s/it]  7% 11/150 [09:38<2:01:47, 52.57s/it]  8% 12/150 [10:31<2:00:56, 52.58s/it]  9% 13/150 [11:24<2:00:03, 52.58s/it]  9% 14/150 [12:16<1:59:09, 52.57s/it] 10% 15/150 [13:09<1:58:18, 52.58s/it] 11% 16/150 [14:01<1:57:26, 52.59s/it] 11% 17/150 [14:54<1:56:33, 52.58s/it] 12% 18/150 [15:47<1:55:40, 52.58s/it] 13% 19/150 [16:39<1:54:49, 52.59s/it] 13% 20/150 [17:32<1:53:56, 52.59s/it] 14% 21/150 [18:24<1:53:03, 52.58s/it] 15% 22/150 [19:17<1:52:11, 52.59s/it] 15% 23/150 [20:10<1:51:18, 52.59s/it] 16% 24/150 [21:02<1:50:25, 52.58s/it] 17% 25/150 [21:55<1:49:31, 52.57s/it] 17% 26/150 [22:47<1:48:38, 52.57s/it] 18% 27/150 [23:40<1:47:46, 52.57s/it] 19% 28/150 [24:32<1:46:54, 52.58s/it] 19% 29/150 [25:25<1:46:01, 52.58s/it] 20% 30/150 [26:18<1:45:08, 52.57s/it] 21% 31/150 [27:10<1:44:17, 52.58s/it] 21% 32/150 [28:03<1:43:23, 52.57s/it] 22% 33/150 [28:55<1:42:30, 52.57s/it] 23% 34/150 [29:48<1:41:37, 52.56s/it] 23% 35/150 [30:40<1:40:45, 52.57s/it] 24% 36/150 [31:33<1:39:53, 52.57s/it] 25% 37/150 [32:26<1:39:00, 52.57s/it] 25% 38/150 [33:18<1:38:08, 52.57s/it] 26% 39/150 [34:11<1:37:16, 52.58s/it] 27% 40/150 [35:03<1:36:22, 52.57s/it] 27% 41/150 [35:56<1:35:29, 52.56s/it] 28% 42/150 [36:48<1:34:37, 52.57s/it] 29% 43/150 [37:41<1:33:45, 52.57s/it] 29% 44/150 [38:34<1:32:53, 52.58s/it] 30% 45/150 [39:26<1:32:00, 52.58s/it] 31% 46/150 [40:19<1:31:09, 52.59s/it] 31% 47/150 [41:11<1:30:16, 52.58s/it] 32% 48/150 [42:04<1:29:24, 52.59s/it] 33% 49/150 [42:56<1:28:31, 52.59s/it] 33% 50/150 [43:49<1:27:39, 52.59s/it] 34% 51/150 [44:42<1:26:46, 52.59s/it] 35% 52/150 [45:34<1:25:54, 52.60s/it] 35% 53/150 [46:27<1:25:01, 52.59s/it] 36% 54/150 [47:19<1:24:09, 52.60s/it] 37% 55/150 [48:12<1:23:16, 52.59s/it] 37% 56/150 [49:05<1:22:23, 52.59s/it] 38% 57/150 [49:57<1:21:30, 52.59s/it] 39% 58/150 [50:50<1:20:37, 52.58s/it] 39% 59/150 [51:42<1:19:45, 52.58s/it] 40% 60/150 [52:35<1:18:52, 52.58s/it] 41% 61/150 [53:28<1:17:59, 52.58s/it] 41% 62/150 [54:20<1:17:07, 52.58s/it] 42% 63/150 [55:13<1:16:14, 52.58s/it] 43% 64/150 [56:05<1:15:21, 52.58s/it] 43% 65/150 [56:58<1:14:29, 52.58s/it] 44% 66/150 [57:50<1:13:36, 52.58s/it] 45% 67/150 [58:43<1:12:44, 52.58s/it] 45% 68/150 [59:36<1:11:52, 52.59s/it] 46% 69/150 [1:00:28<1:10:59, 52.58s/it] 47% 70/150 [1:01:21<1:10:06, 52.58s/it] 47% 71/150 [1:02:13<1:09:14, 52.59s/it] 48% 72/150 [1:03:06<1:08:21, 52.58s/it] 49% 73/150 [1:03:59<1:07:28, 52.58s/it] 49% 74/150 [1:04:51<1:06:36, 52.59s/it] 50% 75/150 [1:05:44<1:05:43, 52.59s/it] 51% 76/150 [1:06:36<1:04:51, 52.59s/it] 51% 77/150 [1:07:29<1:03:59, 52.59s/it] 52% 78/150 [1:08:22<1:03:06, 52.59s/it] 53% 79/150 [1:09:14<1:02:13, 52.58s/it] 53% 80/150 [1:10:07<1:01:20, 52.58s/it] 54% 81/150 [1:10:59<1:00:28, 52.58s/it] 55% 82/150 [1:11:52<59:36, 52.59s/it]   55% 83/150 [1:12:44<58:43, 52.59s/it] 56% 84/150 [1:13:37<57:51, 52.59s/it] 57% 85/150 [1:14:30<56:58, 52.59s/it] 57% 86/150 [1:15:22<56:05, 52.59s/it] 58% 87/150 [1:16:15<55:13, 52.59s/it] 59% 88/150 [1:17:07<54:20, 52.59s/it] 59% 89/150 [1:18:00<53:27, 52.59s/it] 60% 90/150 [1:18:53<52:34, 52.58s/it] 61% 91/150 [1:19:45<51:42, 52.58s/it] 61% 92/150 [1:20:38<50:50, 52.59s/it] 62% 93/150 [1:21:30<49:57, 52.59s/it] 63% 94/150 [1:22:23<49:04, 52.58s/it] 63% 95/150 [1:23:15<48:12, 52.58s/it] 64% 96/150 [1:24:08<47:19, 52.58s/it] 65% 97/150 [1:25:01<46:27, 52.59s/it] 65% 98/150 [1:25:53<45:34, 52.59s/it] 66% 99/150 [1:26:46<44:41, 52.58s/it] 67% 100/150 [1:27:38<43:49, 52.58s/it] 67% 101/150 [1:28:31<42:56, 52.58s/it] 68% 102/150 [1:29:24<42:03, 52.58s/it] 69% 103/150 [1:30:16<41:11, 52.57s/it] 69% 104/150 [1:31:09<40:18, 52.58s/it] 70% 105/150 [1:32:01<39:26, 52.58s/it] 71% 106/150 [1:32:54<38:33, 52.58s/it] 71% 107/150 [1:33:46<37:41, 52.59s/it] 72% 108/150 [1:34:39<36:48, 52.58s/it] 73% 109/150 [1:35:32<35:55, 52.58s/it] 73% 110/150 [1:36:24<35:03, 52.58s/it] 74% 111/150 [1:37:17<34:10, 52.58s/it] 75% 112/150 [1:38:09<33:18, 52.58s/it] 75% 113/150 [1:39:02<32:25, 52.59s/it] 76% 114/150 [1:39:55<31:33, 52.59s/it] 77% 115/150 [1:40:47<30:40, 52.59s/it] 77% 116/150 [1:41:40<29:48, 52.59s/it] 78% 117/150 [1:42:32<28:55, 52.59s/it] 79% 118/150 [1:43:25<28:02, 52.59s/it] 79% 119/150 [1:44:18<27:10, 52.59s/it] 80% 120/150 [1:45:10<26:17, 52.59s/it] 81% 121/150 [1:46:03<25:25, 52.59s/it] 81% 122/150 [1:46:55<24:32, 52.59s/it] 82% 123/150 [1:47:48<23:39, 52.59s/it] 83% 124/150 [1:48:40<22:47, 52.58s/it] 83% 125/150 [1:49:33<21:54, 52.58s/it] 84% 126/150 [1:50:26<21:02, 52.58s/it] 85% 127/150 [1:51:18<20:09, 52.59s/it] 85% 128/150 [1:52:11<19:16, 52.59s/it] 86% 129/150 [1:53:03<18:24, 52.58s/it] 87% 130/150 [1:53:56<17:31, 52.58s/it] 87% 131/150 [1:54:49<16:38, 52.57s/it] 88% 132/150 [1:55:41<15:46, 52.58s/it] 89% 133/150 [1:56:34<14:53, 52.58s/it] 89% 134/150 [1:57:26<14:01, 52.58s/it] 90% 135/150 [1:58:19<13:08, 52.58s/it] 91% 136/150 [1:59:11<12:16, 52.59s/it] 91% 137/150 [2:00:04<11:23, 52.59s/it] 92% 138/150 [2:00:57<10:31, 52.59s/it] 93% 139/150 [2:01:49<09:38, 52.59s/it] 93% 140/150 [2:02:42<08:45, 52.59s/it] 94% 141/150 [2:03:34<07:53, 52.60s/it] 95% 142/150 [2:04:27<07:00, 52.60s/it] 95% 143/150 [2:05:20<06:08, 52.60s/it] 96% 144/150 [2:06:12<05:15, 52.60s/it] 97% 145/150 [2:07:05<04:23, 52.60s/it] 97% 146/150 [2:07:57<03:30, 52.61s/it] 98% 147/150 [2:08:50<02:37, 52.61s/it] 99% 148/150 [2:09:43<01:45, 52.61s/it] 99% 149/150 [2:10:35<00:52, 52.60s/it]100% 150/150 [2:11:28<00:00, 52.61s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5716d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6f818c0] Warning: data is not aligned! This can lead to a speed loss
120.794789368953 (1014, 1352, 3)
120.86988400071581 (1014, 1352, 3)
120.90497701800047 (1014, 1352, 3)
120.90917733583869 (1014, 1352, 3)
120.89336177149104 (1014, 1352, 3)
120.88866203525397 (1014, 1352, 3)
120.88284456465499 (1014, 1352, 3)
120.86211189306319 (1014, 1352, 3)
120.85266865461449 (1014, 1352, 3)
120.84290397939692 (1014, 1352, 3)
120.83897452431249 (1014, 1352, 3)
120.8202925317741 (1014, 1352, 3)
120.82668747009325 (1014, 1352, 3)
120.8245212974958 (1014, 1352, 3)
120.82968033332166 (1014, 1352, 3)
120.8280770397862 (1014, 1352, 3)
120.84268320436959 (1014, 1352, 3)
120.8427216211695 (1014, 1352, 3)
120.83615964271404 (1014, 1352, 3)
120.82803619154325 (1014, 1352, 3)
120.82475982205727 (1014, 1352, 3)
120.82580485627254 (1014, 1352, 3)
120.82591135347735 (1014, 1352, 3)
120.83909439445398 (1014, 1352, 3)
120.83791101113017 (1014, 1352, 3)
120.83719859832172 (1014, 1352, 3)
120.83017537512303 (1014, 1352, 3)
120.83939103050392 (1014, 1352, 3)
120.84739631354333 (1014, 1352, 3)
120.8507543795152 (1014, 1352, 3)
120.84464853977258 (1014, 1352, 3)
120.83643804294123 (1014, 1352, 3)
120.82847287871184 (1014, 1352, 3)
120.81348400499516 (1014, 1352, 3)
120.81544131663613 (1014, 1352, 3)
120.8132092519325 (1014, 1352, 3)
120.81749296826675 (1014, 1352, 3)
120.80455550303638 (1014, 1352, 3)
120.80782676649198 (1014, 1352, 3)
120.8075704923964 (1014, 1352, 3)
120.8098327069936 (1014, 1352, 3)
120.8077285361935 (1014, 1352, 3)
120.8126057677719 (1014, 1352, 3)
120.822169605795 (1014, 1352, 3)
120.8231788977977 (1014, 1352, 3)
120.83727372991142 (1014, 1352, 3)
120.84149082470657 (1014, 1352, 3)
120.84494663468833 (1014, 1352, 3)
120.82976008465312 (1014, 1352, 3)
120.8328788966306 (1014, 1352, 3)
120.83637166454645 (1014, 1352, 3)
120.84805839548102 (1014, 1352, 3)
120.84935581348303 (1014, 1352, 3)
120.85381362113839 (1014, 1352, 3)
120.85167249240418 (1014, 1352, 3)
120.84468209368642 (1014, 1352, 3)
120.84955324665725 (1014, 1352, 3)
120.8530455282845 (1014, 1352, 3)
120.86064500348182 (1014, 1352, 3)
120.85174640827235 (1014, 1352, 3)
120.85557666048108 (1014, 1352, 3)
120.8472586938677 (1014, 1352, 3)
120.84745199358878 (1014, 1352, 3)
120.8399181673533 (1014, 1352, 3)
120.84268101607087 (1014, 1352, 3)
120.83861029414625 (1014, 1352, 3)
120.83307171006307 (1014, 1352, 3)
120.83710498776497 (1014, 1352, 3)
120.84077038813611 (1014, 1352, 3)
120.8483739967866 (1014, 1352, 3)
120.83982917653833 (1014, 1352, 3)
120.84629000696366 (1014, 1352, 3)
120.8421108426798 (1014, 1352, 3)
120.85120249446604 (1014, 1352, 3)
120.85348367431891 (1014, 1352, 3)
120.8630839839875 (1014, 1352, 3)
120.85891576119728 (1014, 1352, 3)
120.8495868005711 (1014, 1352, 3)
120.84811310294924 (1014, 1352, 3)
120.84831880302977 (1014, 1352, 3)
120.85728304720112 (1014, 1352, 3)
120.85343723375699 (1014, 1352, 3)
120.86188820030422 (1014, 1352, 3)
120.85391136514828 (1014, 1352, 3)
120.85463301744025 (1014, 1352, 3)
120.84620125929297 (1014, 1352, 3)
120.85116140307879 (1014, 1352, 3)
120.84945331434862 (1014, 1352, 3)
120.84402657664492 (1014, 1352, 3)
120.84182198724757 (1014, 1352, 3)
120.84102228563425 (1014, 1352, 3)
120.84291103058172 (1014, 1352, 3)
120.83407419402526 (1014, 1352, 3)
120.8353132573945 (1014, 1352, 3)
120.83147230683645 (1014, 1352, 3)
120.83463002190244 (1014, 1352, 3)
120.83233206509264 (1014, 1352, 3)
120.84308123159397 (1014, 1352, 3)
120.84641887344436 (1014, 1352, 3)
120.84281790631358 (1014, 1352, 3)
120.84182976786528 (1014, 1352, 3)
120.84638872355076 (1014, 1352, 3)
120.85557593104816 (1014, 1352, 3)
120.85706081330797 (1014, 1352, 3)
120.87149677687911 (1014, 1352, 3)
120.87354964423126 (1014, 1352, 3)
120.87428321059409 (1014, 1352, 3)
120.86343800209299 (1014, 1352, 3)
120.86828873094235 (1014, 1352, 3)
120.87128159417077 (1014, 1352, 3)
120.87268259164595 (1014, 1352, 3)
120.87860874774849 (1014, 1352, 3)
120.88442378690445 (1014, 1352, 3)
120.88620311691545 (1014, 1352, 3)
120.87798192173477 (1014, 1352, 3)
120.88630280607977 (1014, 1352, 3)
120.88644601807438 (1014, 1352, 3)
120.89296495998818 (1014, 1352, 3)
120.88769650922586 (1014, 1352, 3)
120.89831291893763 (1014, 1352, 3)
120.8980087454143 (1014, 1352, 3)
120.89247259277414 (1014, 1352, 3)
120.88884998580038 (1014, 1352, 3)
120.89073313842886 (1014, 1352, 3)
120.90074776599015 (1014, 1352, 3)
120.90239263720147 (1014, 1352, 3)
120.92178339538376 (1014, 1352, 3)
120.9283356480671 (1014, 1352, 3)
120.9389087780929 (1014, 1352, 3)
120.9297531793549 (1014, 1352, 3)
120.93826493197795 (1014, 1352, 3)
120.93973741387829 (1014, 1352, 3)
120.94607983302794 (1014, 1352, 3)
120.95017170850694 (1014, 1352, 3)
120.95440071737295 (1014, 1352, 3)
120.94956093001723 (1014, 1352, 3)
120.93588406296075 (1014, 1352, 3)
120.94103847904485 (1014, 1352, 3)
120.93892895907005 (1014, 1352, 3)
120.94630401207552 (1014, 1352, 3)
120.94129912973791 (1014, 1352, 3)
120.94999372687698 (1014, 1352, 3)
120.9350354893425 (1014, 1352, 3)
120.92513392388221 (1014, 1352, 3)
120.9160361934884 (1014, 1352, 3)
120.91303311819925 (1014, 1352, 3)
120.90453327964707 (1014, 1352, 3)
120.89197463324113 (1014, 1352, 3)
120.89457360269832 (1014, 1352, 3)
120.883116399986 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:11:31<00:00, 52.61s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
