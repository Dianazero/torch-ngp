nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=13, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_08-11-23 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:31, 53.36s/it]  1% 2/150 [01:46<2:10:54, 53.07s/it]  2% 3/150 [02:39<2:09:49, 52.99s/it]  3% 4/150 [03:32<2:08:53, 52.97s/it]  3% 5/150 [04:24<2:07:58, 52.95s/it]  4% 6/150 [05:17<2:07:04, 52.95s/it]  5% 7/150 [06:10<2:06:12, 52.95s/it]  5% 8/150 [07:03<2:05:18, 52.95s/it]  6% 9/150 [07:56<2:04:28, 52.97s/it]  7% 10/150 [08:49<2:03:36, 52.97s/it]  7% 11/150 [09:42<2:02:43, 52.98s/it]  8% 12/150 [10:35<2:01:50, 52.98s/it]  9% 13/150 [11:28<2:00:59, 52.99s/it]  9% 14/150 [12:21<2:00:06, 52.99s/it] 10% 15/150 [13:14<1:59:14, 52.99s/it] 11% 16/150 [14:07<1:58:20, 52.99s/it] 11% 17/150 [15:00<1:57:26, 52.98s/it] 12% 18/150 [15:53<1:56:34, 52.99s/it] 13% 19/150 [16:46<1:55:41, 52.99s/it] 13% 20/150 [17:39<1:54:47, 52.98s/it] 14% 21/150 [18:32<1:53:54, 52.98s/it] 15% 22/150 [19:25<1:53:02, 52.99s/it] 15% 23/150 [20:18<1:52:09, 52.99s/it] 16% 24/150 [21:11<1:51:17, 52.99s/it] 17% 25/150 [22:04<1:50:23, 52.99s/it] 17% 26/150 [22:57<1:49:30, 52.99s/it] 18% 27/150 [23:50<1:48:38, 52.99s/it] 19% 28/150 [24:43<1:47:45, 53.00s/it] 19% 29/150 [25:36<1:46:51, 52.99s/it] 20% 30/150 [26:29<1:45:58, 52.99s/it] 21% 31/150 [27:22<1:45:05, 52.99s/it] 21% 32/150 [28:15<1:44:13, 53.00s/it] 22% 33/150 [29:08<1:43:20, 53.00s/it] 23% 34/150 [30:01<1:42:27, 52.99s/it] 23% 35/150 [30:54<1:41:34, 53.00s/it] 24% 36/150 [31:47<1:40:40, 52.99s/it] 25% 37/150 [32:40<1:39:47, 52.99s/it] 25% 38/150 [33:33<1:38:54, 52.99s/it] 26% 39/150 [34:26<1:38:01, 52.99s/it] 27% 40/150 [35:19<1:37:08, 52.99s/it] 27% 41/150 [36:12<1:36:15, 52.99s/it] 28% 42/150 [37:05<1:35:22, 52.99s/it] 29% 43/150 [37:58<1:34:29, 52.99s/it] 29% 44/150 [38:51<1:33:36, 52.99s/it] 30% 45/150 [39:44<1:32:44, 53.00s/it] 31% 46/150 [40:37<1:31:51, 52.99s/it] 31% 47/150 [41:30<1:30:59, 53.00s/it] 32% 48/150 [42:23<1:30:06, 53.00s/it] 33% 49/150 [43:16<1:29:12, 53.00s/it] 33% 50/150 [44:09<1:28:19, 52.99s/it] 34% 51/150 [45:02<1:27:26, 53.00s/it] 35% 52/150 [45:55<1:26:33, 53.00s/it] 35% 53/150 [46:48<1:25:40, 53.00s/it] 36% 54/150 [47:41<1:24:47, 53.00s/it] 37% 55/150 [48:34<1:23:55, 53.00s/it] 37% 56/150 [49:27<1:23:02, 53.00s/it] 38% 57/150 [50:20<1:22:09, 53.00s/it] 39% 58/150 [51:13<1:21:16, 53.01s/it] 39% 59/150 [52:06<1:20:24, 53.01s/it] 40% 60/150 [52:59<1:19:30, 53.01s/it] 41% 61/150 [53:52<1:18:38, 53.02s/it] 41% 62/150 [54:45<1:17:44, 53.01s/it] 42% 63/150 [55:38<1:16:51, 53.01s/it] 43% 64/150 [56:31<1:15:59, 53.01s/it] 43% 65/150 [57:24<1:15:06, 53.02s/it] 44% 66/150 [58:17<1:14:13, 53.02s/it] 45% 67/150 [59:10<1:13:19, 53.01s/it] 45% 68/150 [1:00:03<1:12:26, 53.01s/it] 46% 69/150 [1:00:56<1:11:35, 53.03s/it] 47% 70/150 [1:01:49<1:10:42, 53.03s/it] 47% 71/150 [1:02:42<1:09:49, 53.03s/it] 48% 72/150 [1:03:35<1:08:57, 53.04s/it] 49% 73/150 [1:04:28<1:08:03, 53.04s/it] 49% 74/150 [1:05:21<1:07:11, 53.04s/it] 50% 75/150 [1:06:14<1:06:17, 53.03s/it] 51% 76/150 [1:07:07<1:05:23, 53.02s/it] 51% 77/150 [1:08:00<1:04:29, 53.01s/it] 52% 78/150 [1:08:53<1:03:37, 53.02s/it] 53% 79/150 [1:09:46<1:02:44, 53.02s/it] 53% 80/150 [1:10:39<1:01:50, 53.01s/it] 54% 81/150 [1:11:32<1:00:57, 53.01s/it] 55% 82/150 [1:12:26<1:00:05, 53.02s/it] 55% 83/150 [1:13:19<59:12, 53.03s/it]   56% 84/150 [1:14:12<58:20, 53.03s/it] 57% 85/150 [1:15:05<57:27, 53.04s/it] 57% 86/150 [1:15:58<56:34, 53.04s/it] 58% 87/150 [1:16:51<55:41, 53.03s/it] 59% 88/150 [1:17:44<54:47, 53.02s/it] 59% 89/150 [1:18:37<53:54, 53.02s/it] 60% 90/150 [1:19:30<53:01, 53.03s/it] 61% 91/150 [1:20:23<52:08, 53.03s/it] 61% 92/150 [1:21:16<51:15, 53.03s/it] 62% 93/150 [1:22:09<50:22, 53.03s/it] 63% 94/150 [1:23:02<49:29, 53.03s/it] 63% 95/150 [1:23:55<48:36, 53.02s/it] 64% 96/150 [1:24:48<47:42, 53.01s/it] 65% 97/150 [1:25:41<46:49, 53.01s/it] 65% 98/150 [1:26:34<45:56, 53.02s/it] 66% 99/150 [1:27:27<45:04, 53.02s/it] 67% 100/150 [1:28:20<44:11, 53.02s/it] 67% 101/150 [1:29:13<43:18, 53.02s/it] 68% 102/150 [1:30:06<42:24, 53.02s/it] 69% 103/150 [1:30:59<41:32, 53.02s/it] 69% 104/150 [1:31:52<40:39, 53.02s/it] 70% 105/150 [1:32:45<39:46, 53.02s/it] 71% 106/150 [1:33:38<38:53, 53.03s/it] 71% 107/150 [1:34:31<37:59, 53.02s/it] 72% 108/150 [1:35:24<37:06, 53.02s/it] 73% 109/150 [1:36:17<36:13, 53.01s/it] 73% 110/150 [1:37:10<35:20, 53.01s/it] 74% 111/150 [1:38:03<34:27, 53.01s/it] 75% 112/150 [1:38:56<33:34, 53.01s/it] 75% 113/150 [1:39:49<32:41, 53.02s/it] 76% 114/150 [1:40:42<31:48, 53.02s/it] 77% 115/150 [1:41:35<30:55, 53.01s/it] 77% 116/150 [1:42:28<30:02, 53.02s/it] 78% 117/150 [1:43:21<29:09, 53.02s/it] 79% 118/150 [1:44:14<28:16, 53.01s/it] 79% 119/150 [1:45:07<27:23, 53.01s/it] 80% 120/150 [1:46:00<26:30, 53.02s/it] 81% 121/150 [1:46:53<25:37, 53.01s/it] 81% 122/150 [1:47:46<24:44, 53.03s/it] 82% 123/150 [1:48:39<23:51, 53.02s/it] 83% 124/150 [1:49:32<22:58, 53.02s/it] 83% 125/150 [1:50:25<22:05, 53.01s/it] 84% 126/150 [1:51:18<21:12, 53.02s/it] 85% 127/150 [1:52:11<20:19, 53.02s/it] 85% 128/150 [1:53:04<19:26, 53.01s/it] 86% 129/150 [1:53:57<18:33, 53.01s/it] 87% 130/150 [1:54:50<17:40, 53.01s/it] 87% 131/150 [1:55:43<16:47, 53.01s/it] 88% 132/150 [1:56:36<15:54, 53.00s/it] 89% 133/150 [1:57:29<15:00, 53.00s/it] 89% 134/150 [1:58:22<14:08, 53.00s/it] 90% 135/150 [1:59:16<13:16, 53.11s/it] 91% 136/150 [2:00:09<12:23, 53.11s/it] 91% 137/150 [2:01:02<11:31, 53.16s/it] 92% 138/150 [2:01:55<10:37, 53.13s/it] 93% 139/150 [2:02:48<09:44, 53.10s/it] 93% 140/150 [2:03:41<08:50, 53.08s/it] 94% 141/150 [2:04:34<07:57, 53.05s/it] 95% 142/150 [2:05:27<07:04, 53.04s/it] 95% 143/150 [2:06:20<06:11, 53.02s/it] 96% 144/150 [2:07:13<05:18, 53.02s/it] 97% 145/150 [2:08:06<04:25, 53.01s/it] 97% 146/150 [2:08:59<03:31, 53.00s/it] 98% 147/150 [2:09:52<02:38, 53.00s/it] 99% 148/150 [2:10:45<01:45, 52.99s/it] 99% 149/150 [2:11:38<00:53, 53.02s/it]100% 150/150 [2:12:31<00:00, 53.04s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6338d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x729f8c0] Warning: data is not aligned! This can lead to a speed loss
120.30355107391976 (1014, 1352, 3)
120.3826940583313 (1014, 1352, 3)
120.41139529817272 (1014, 1352, 3)
120.42090345615038 (1014, 1352, 3)
120.40158004894009 (1014, 1352, 3)
120.4038947827068 (1014, 1352, 3)
120.40533152239456 (1014, 1352, 3)
120.39236026010605 (1014, 1352, 3)
120.3846995125443 (1014, 1352, 3)
120.38206698917327 (1014, 1352, 3)
120.38607157584741 (1014, 1352, 3)
120.35951802963638 (1014, 1352, 3)
120.35384863391805 (1014, 1352, 3)
120.34669532851713 (1014, 1352, 3)
120.35582612653619 (1014, 1352, 3)
120.34906598547359 (1014, 1352, 3)
120.35986207882544 (1014, 1352, 3)
120.35833075600372 (1014, 1352, 3)
120.34780260767403 (1014, 1352, 3)
120.32901557679664 (1014, 1352, 3)
120.32645940073682 (1014, 1352, 3)
120.33193428101256 (1014, 1352, 3)
120.32388109854541 (1014, 1352, 3)
120.32846704324857 (1014, 1352, 3)
120.32562930608562 (1014, 1352, 3)
120.32853925710663 (1014, 1352, 3)
120.3123490073877 (1014, 1352, 3)
120.32422150056993 (1014, 1352, 3)
120.33120995413326 (1014, 1352, 3)
120.33141978766695 (1014, 1352, 3)
120.32137257876903 (1014, 1352, 3)
120.32013935086306 (1014, 1352, 3)
120.32613504623632 (1014, 1352, 3)
120.31251021206073 (1014, 1352, 3)
120.3141349022949 (1014, 1352, 3)
120.31208568210731 (1014, 1352, 3)
120.32169547440371 (1014, 1352, 3)
120.30459586499072 (1014, 1352, 3)
120.31318980038826 (1014, 1352, 3)
120.31809888387039 (1014, 1352, 3)
120.31910355613132 (1014, 1352, 3)
120.30652934848997 (1014, 1352, 3)
120.30827585402005 (1014, 1352, 3)
120.32037811856884 (1014, 1352, 3)
120.316554188112 (1014, 1352, 3)
120.32553131893141 (1014, 1352, 3)
120.32472310726749 (1014, 1352, 3)
120.33057802208917 (1014, 1352, 3)
120.3050471408175 (1014, 1352, 3)
120.30785691638559 (1014, 1352, 3)
120.3127409560045 (1014, 1352, 3)
120.32446124085291 (1014, 1352, 3)
120.31449329699785 (1014, 1352, 3)
120.31869945029936 (1014, 1352, 3)
120.32270719784944 (1014, 1352, 3)
120.31838336270516 (1014, 1352, 3)
120.32270306439628 (1014, 1352, 3)
120.32802257546227 (1014, 1352, 3)
120.33903798497563 (1014, 1352, 3)
120.32457649125264 (1014, 1352, 3)
120.32882470851861 (1014, 1352, 3)
120.32505232465405 (1014, 1352, 3)
120.32982427474917 (1014, 1352, 3)
120.31367657528331 (1014, 1352, 3)
120.31487965329568 (1014, 1352, 3)
120.30937583884784 (1014, 1352, 3)
120.30200589187275 (1014, 1352, 3)
120.30312581453342 (1014, 1352, 3)
120.30871156861143 (1014, 1352, 3)
120.321483209427 (1014, 1352, 3)
120.30409158370583 (1014, 1352, 3)
120.30758410847737 (1014, 1352, 3)
120.30450881933017 (1014, 1352, 3)
120.3188005983295 (1014, 1352, 3)
120.31464720734179 (1014, 1352, 3)
120.32647787970387 (1014, 1352, 3)
120.32392194678836 (1014, 1352, 3)
120.31598571673105 (1014, 1352, 3)
120.30872299639368 (1014, 1352, 3)
120.31323526837295 (1014, 1352, 3)
120.32635509183073 (1014, 1352, 3)
120.31690990822761 (1014, 1352, 3)
120.3194784846469 (1014, 1352, 3)
120.3145572439496 (1014, 1352, 3)
120.31876388353972 (1014, 1352, 3)
120.30594628845084 (1014, 1352, 3)
120.31012715474482 (1014, 1352, 3)
120.30830892164529 (1014, 1352, 3)
120.30254275449428 (1014, 1352, 3)
120.29543905053121 (1014, 1352, 3)
120.30021999696555 (1014, 1352, 3)
120.30919031974449 (1014, 1352, 3)
120.29908670136822 (1014, 1352, 3)
120.29454525207257 (1014, 1352, 3)
120.29152394096067 (1014, 1352, 3)
120.29746979175177 (1014, 1352, 3)
120.29314741547331 (1014, 1352, 3)
120.30802249765608 (1014, 1352, 3)
120.31774632463072 (1014, 1352, 3)
120.31589575333886 (1014, 1352, 3)
120.30912005104085 (1014, 1352, 3)
120.31633462880617 (1014, 1352, 3)
120.33184796478493 (1014, 1352, 3)
120.33210423888052 (1014, 1352, 3)
120.3459846177188 (1014, 1352, 3)
120.3511475438535 (1014, 1352, 3)
120.35857608860567 (1014, 1352, 3)
120.34172156865033 (1014, 1352, 3)
120.34763775583643 (1014, 1352, 3)
120.35229348295461 (1014, 1352, 3)
120.35488053834094 (1014, 1352, 3)
120.3535437309618 (1014, 1352, 3)
120.36083392660544 (1014, 1352, 3)
120.37159184630168 (1014, 1352, 3)
120.36317686511133 (1014, 1352, 3)
120.36996812864473 (1014, 1352, 3)
120.36830015872461 (1014, 1352, 3)
120.37617219868585 (1014, 1352, 3)
120.36423211138732 (1014, 1352, 3)
120.37482104579283 (1014, 1352, 3)
120.37706234997997 (1014, 1352, 3)
120.37146054837794 (1014, 1352, 3)
120.35783352590362 (1014, 1352, 3)
120.35306570926166 (1014, 1352, 3)
120.3661439550436 (1014, 1352, 3)
120.36418907484565 (1014, 1352, 3)
120.38173971694113 (1014, 1352, 3)
120.38416070476835 (1014, 1352, 3)
120.39511581449452 (1014, 1352, 3)
120.37833423783015 (1014, 1352, 3)
120.38424993872763 (1014, 1352, 3)
120.38574843706841 (1014, 1352, 3)
120.38980675863357 (1014, 1352, 3)
120.38158580659719 (1014, 1352, 3)
120.3781876218153 (1014, 1352, 3)
120.37602339437228 (1014, 1352, 3)
120.35607145913814 (1014, 1352, 3)
120.35551295667364 (1014, 1352, 3)
120.3480267867216 (1014, 1352, 3)
120.35407378554284 (1014, 1352, 3)
120.33660216534591 (1014, 1352, 3)
120.34562792502597 (1014, 1352, 3)
120.33765425074597 (1014, 1352, 3)
120.33554035417372 (1014, 1352, 3)
120.32275850129741 (1014, 1352, 3)
120.32042504541936 (1014, 1352, 3)
120.31513519795837 (1014, 1352, 3)
120.30404149597936 (1014, 1352, 3)
120.30778713397056 (1014, 1352, 3)
120.29933592427903 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:34<00:00, 53.03s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
