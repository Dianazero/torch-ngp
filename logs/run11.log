nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=11, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_03-50-13 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:59, 53.55s/it]  1% 2/150 [01:46<2:11:21, 53.25s/it]  2% 3/150 [02:39<2:10:18, 53.19s/it]  3% 4/150 [03:32<2:09:20, 53.15s/it]  3% 5/150 [04:25<2:08:26, 53.15s/it]  4% 6/150 [05:19<2:07:33, 53.15s/it]  5% 7/150 [06:12<2:06:40, 53.15s/it]  5% 8/150 [07:05<2:05:47, 53.15s/it]  6% 9/150 [07:58<2:04:56, 53.17s/it]  7% 10/150 [08:51<2:04:02, 53.16s/it]  7% 11/150 [09:44<2:03:10, 53.17s/it]  8% 12/150 [10:38<2:02:18, 53.18s/it]  9% 13/150 [11:31<2:01:26, 53.19s/it]  9% 14/150 [12:24<2:00:34, 53.19s/it] 10% 15/150 [13:17<1:59:41, 53.19s/it] 11% 16/150 [14:10<1:58:47, 53.19s/it] 11% 17/150 [15:04<1:57:54, 53.19s/it] 12% 18/150 [15:57<1:57:01, 53.19s/it] 13% 19/150 [16:50<1:56:08, 53.19s/it] 13% 20/150 [17:43<1:55:15, 53.19s/it] 14% 21/150 [18:36<1:54:22, 53.20s/it] 15% 22/150 [19:30<1:53:29, 53.20s/it] 15% 23/150 [20:23<1:52:36, 53.20s/it] 16% 24/150 [21:16<1:51:43, 53.20s/it] 17% 25/150 [22:09<1:50:49, 53.20s/it] 17% 26/150 [23:02<1:49:56, 53.20s/it] 18% 27/150 [23:56<1:49:03, 53.20s/it] 19% 28/150 [24:49<1:48:10, 53.20s/it] 19% 29/150 [25:42<1:47:16, 53.20s/it] 20% 30/150 [26:35<1:46:23, 53.20s/it] 21% 31/150 [27:28<1:45:31, 53.20s/it] 21% 32/150 [28:22<1:44:37, 53.20s/it] 22% 33/150 [29:15<1:43:44, 53.20s/it] 23% 34/150 [30:08<1:42:51, 53.20s/it] 23% 35/150 [31:01<1:41:58, 53.20s/it] 24% 36/150 [31:54<1:41:05, 53.20s/it] 25% 37/150 [32:48<1:40:11, 53.20s/it] 25% 38/150 [33:41<1:39:18, 53.20s/it] 26% 39/150 [34:34<1:38:25, 53.20s/it] 27% 40/150 [35:27<1:37:32, 53.20s/it] 27% 41/150 [36:20<1:36:39, 53.20s/it] 28% 42/150 [37:14<1:35:46, 53.21s/it] 29% 43/150 [38:07<1:34:53, 53.21s/it] 29% 44/150 [39:00<1:34:00, 53.21s/it] 30% 45/150 [39:53<1:33:06, 53.21s/it] 31% 46/150 [40:47<1:32:13, 53.21s/it] 31% 47/150 [41:40<1:31:20, 53.21s/it] 32% 48/150 [42:33<1:30:27, 53.21s/it] 33% 49/150 [43:26<1:29:34, 53.21s/it] 33% 50/150 [44:19<1:28:41, 53.22s/it] 34% 51/150 [45:13<1:27:48, 53.22s/it] 35% 52/150 [46:06<1:26:55, 53.22s/it] 35% 53/150 [46:59<1:26:01, 53.21s/it] 36% 54/150 [47:52<1:25:08, 53.21s/it] 37% 55/150 [48:45<1:24:14, 53.21s/it] 37% 56/150 [49:39<1:23:22, 53.21s/it] 38% 57/150 [50:32<1:22:28, 53.22s/it] 39% 58/150 [51:25<1:21:35, 53.21s/it] 39% 59/150 [52:18<1:20:43, 53.22s/it] 40% 60/150 [53:12<1:19:49, 53.22s/it] 41% 61/150 [54:05<1:18:56, 53.22s/it] 41% 62/150 [54:58<1:18:03, 53.22s/it] 42% 63/150 [55:51<1:17:09, 53.22s/it] 43% 64/150 [56:44<1:16:16, 53.22s/it] 43% 65/150 [57:38<1:15:23, 53.22s/it] 44% 66/150 [58:31<1:14:30, 53.22s/it] 45% 67/150 [59:24<1:13:37, 53.23s/it] 45% 68/150 [1:00:17<1:12:44, 53.23s/it] 46% 69/150 [1:01:11<1:11:51, 53.23s/it] 47% 70/150 [1:02:04<1:10:58, 53.23s/it] 47% 71/150 [1:02:57<1:10:04, 53.23s/it] 48% 72/150 [1:03:50<1:09:11, 53.22s/it] 49% 73/150 [1:04:43<1:08:17, 53.21s/it] 49% 74/150 [1:05:37<1:07:24, 53.22s/it] 50% 75/150 [1:06:30<1:06:31, 53.22s/it] 51% 76/150 [1:07:23<1:05:38, 53.22s/it] 51% 77/150 [1:08:16<1:04:44, 53.22s/it] 52% 78/150 [1:09:09<1:03:51, 53.21s/it] 53% 79/150 [1:10:03<1:02:58, 53.22s/it] 53% 80/150 [1:10:56<1:02:05, 53.23s/it] 54% 81/150 [1:11:49<1:01:12, 53.22s/it] 55% 82/150 [1:12:42<1:00:19, 53.22s/it] 55% 83/150 [1:13:36<59:26, 53.23s/it]   56% 84/150 [1:14:29<58:33, 53.23s/it] 57% 85/150 [1:15:22<57:39, 53.23s/it] 57% 86/150 [1:16:15<56:46, 53.23s/it] 58% 87/150 [1:17:09<55:52, 53.22s/it] 59% 88/150 [1:18:02<54:59, 53.22s/it] 59% 89/150 [1:18:55<54:06, 53.22s/it] 60% 90/150 [1:19:48<53:13, 53.22s/it] 61% 91/150 [1:20:41<52:20, 53.23s/it] 61% 92/150 [1:21:35<51:26, 53.22s/it] 62% 93/150 [1:22:28<50:33, 53.22s/it] 63% 94/150 [1:23:21<49:40, 53.23s/it] 63% 95/150 [1:24:14<48:47, 53.22s/it] 64% 96/150 [1:25:08<47:53, 53.22s/it] 65% 97/150 [1:26:01<47:00, 53.21s/it] 65% 98/150 [1:26:54<46:07, 53.21s/it] 66% 99/150 [1:27:47<45:13, 53.21s/it] 67% 100/150 [1:28:40<44:20, 53.21s/it] 67% 101/150 [1:29:34<43:27, 53.21s/it] 68% 102/150 [1:30:27<42:34, 53.21s/it] 69% 103/150 [1:31:20<41:40, 53.21s/it] 69% 104/150 [1:32:13<40:47, 53.21s/it] 70% 105/150 [1:33:06<39:54, 53.20s/it] 71% 106/150 [1:34:00<39:01, 53.21s/it] 71% 107/150 [1:34:53<38:07, 53.21s/it] 72% 108/150 [1:35:46<37:14, 53.20s/it] 73% 109/150 [1:36:39<36:21, 53.20s/it] 73% 110/150 [1:37:32<35:28, 53.21s/it] 74% 111/150 [1:38:26<34:34, 53.20s/it] 75% 112/150 [1:39:19<33:41, 53.21s/it] 75% 113/150 [1:40:12<32:48, 53.21s/it] 76% 114/150 [1:41:05<31:55, 53.22s/it] 77% 115/150 [1:41:59<31:02, 53.22s/it] 77% 116/150 [1:42:52<30:09, 53.21s/it] 78% 117/150 [1:43:45<29:15, 53.21s/it] 79% 118/150 [1:44:38<28:22, 53.20s/it] 79% 119/150 [1:45:31<27:29, 53.20s/it] 80% 120/150 [1:46:24<26:36, 53.20s/it] 81% 121/150 [1:47:18<25:42, 53.21s/it] 81% 122/150 [1:48:11<24:49, 53.21s/it] 82% 123/150 [1:49:04<23:56, 53.20s/it] 83% 124/150 [1:49:57<23:03, 53.20s/it] 83% 125/150 [1:50:51<22:10, 53.21s/it] 84% 126/150 [1:51:44<21:17, 53.21s/it] 85% 127/150 [1:52:37<20:23, 53.21s/it] 85% 128/150 [1:53:30<19:30, 53.20s/it] 86% 129/150 [1:54:23<18:37, 53.20s/it] 87% 130/150 [1:55:17<17:43, 53.20s/it] 87% 131/150 [1:56:10<16:50, 53.20s/it] 88% 132/150 [1:57:03<15:57, 53.21s/it] 89% 133/150 [1:57:56<15:04, 53.20s/it] 89% 134/150 [1:58:49<14:11, 53.20s/it] 90% 135/150 [1:59:43<13:17, 53.20s/it] 91% 136/150 [2:00:36<12:24, 53.21s/it] 91% 137/150 [2:01:29<11:31, 53.21s/it] 92% 138/150 [2:02:22<10:38, 53.21s/it] 93% 139/150 [2:03:15<09:45, 53.21s/it] 93% 140/150 [2:04:09<08:52, 53.22s/it] 94% 141/150 [2:05:02<07:58, 53.22s/it] 95% 142/150 [2:05:55<07:05, 53.22s/it] 95% 143/150 [2:06:48<06:12, 53.22s/it] 96% 144/150 [2:07:42<05:19, 53.22s/it] 97% 145/150 [2:08:35<04:26, 53.21s/it] 97% 146/150 [2:09:28<03:32, 53.20s/it] 98% 147/150 [2:10:21<02:39, 53.19s/it] 99% 148/150 [2:11:14<01:46, 53.19s/it] 99% 149/150 [2:12:07<00:53, 53.20s/it]100% 150/150 [2:13:01<00:00, 53.20s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x628fd80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5cda8c0] Warning: data is not aligned! This can lead to a speed loss
120.56801378336426 (1014, 1352, 3)
120.65246679621396 (1014, 1352, 3)
120.68949475586366 (1014, 1352, 3)
120.69609126081019 (1014, 1352, 3)
120.67502839925461 (1014, 1352, 3)
120.66893155585122 (1014, 1352, 3)
120.65912408723628 (1014, 1352, 3)
120.6307875638497 (1014, 1352, 3)
120.60971643538781 (1014, 1352, 3)
120.59971153359865 (1014, 1352, 3)
120.59502565658687 (1014, 1352, 3)
120.56584372045796 (1014, 1352, 3)
120.55405730035908 (1014, 1352, 3)
120.54600630619065 (1014, 1352, 3)
120.54972665717432 (1014, 1352, 3)
120.53986350851395 (1014, 1352, 3)
120.54244740302433 (1014, 1352, 3)
120.53813791339394 (1014, 1352, 3)
120.52214898715809 (1014, 1352, 3)
120.49909136973885 (1014, 1352, 3)
120.49354062844048 (1014, 1352, 3)
120.49464377414422 (1014, 1352, 3)
120.483261216733 (1014, 1352, 3)
120.48185122291859 (1014, 1352, 3)
120.47926975985123 (1014, 1352, 3)
120.48005049620889 (1014, 1352, 3)
120.46514769557555 (1014, 1352, 3)
120.47641354372124 (1014, 1352, 3)
120.4836915821497 (1014, 1352, 3)
120.48300372691588 (1014, 1352, 3)
120.47029335846473 (1014, 1352, 3)
120.47017591976628 (1014, 1352, 3)
120.47746198195675 (1014, 1352, 3)
120.46481628989025 (1014, 1352, 3)
120.46332192500263 (1014, 1352, 3)
120.46114529720015 (1014, 1352, 3)
120.46777195204027 (1014, 1352, 3)
120.44853437476901 (1014, 1352, 3)
120.45648811121615 (1014, 1352, 3)
120.4629883310186 (1014, 1352, 3)
120.46242715396676 (1014, 1352, 3)
120.44660235013558 (1014, 1352, 3)
120.44963168500948 (1014, 1352, 3)
120.46374329408012 (1014, 1352, 3)
120.46147597345254 (1014, 1352, 3)
120.47037092149746 (1014, 1352, 3)
120.47584020945423 (1014, 1352, 3)
120.48274696653168 (1014, 1352, 3)
120.45996872191684 (1014, 1352, 3)
120.46607237336072 (1014, 1352, 3)
120.47361665480122 (1014, 1352, 3)
120.48565618811978 (1014, 1352, 3)
120.47373312092247 (1014, 1352, 3)
120.48104981929515 (1014, 1352, 3)
120.48601506911133 (1014, 1352, 3)
120.48398870448825 (1014, 1352, 3)
120.48880758143389 (1014, 1352, 3)
120.49729283132788 (1014, 1352, 3)
120.50738283362315 (1014, 1352, 3)
120.49214376441846 (1014, 1352, 3)
120.49894864403285 (1014, 1352, 3)
120.4979422697618 (1014, 1352, 3)
120.50554296068064 (1014, 1352, 3)
120.48864005500897 (1014, 1352, 3)
120.49206814654015 (1014, 1352, 3)
120.48511276060206 (1014, 1352, 3)
120.4772480149699 (1014, 1352, 3)
120.47632649806069 (1014, 1352, 3)
120.4848744791849 (1014, 1352, 3)
120.49723812385966 (1014, 1352, 3)
120.47945406323308 (1014, 1352, 3)
120.48202798882703 (1014, 1352, 3)
120.47996150539392 (1014, 1352, 3)
120.4944225128283 (1014, 1352, 3)
120.48678000108929 (1014, 1352, 3)
120.50056069076324 (1014, 1352, 3)
120.49577439515423 (1014, 1352, 3)
120.49038899198207 (1014, 1352, 3)
120.4824177491451 (1014, 1352, 3)
120.49188505887983 (1014, 1352, 3)
120.5028863660236 (1014, 1352, 3)
120.49262397441733 (1014, 1352, 3)
120.4943707230917 (1014, 1352, 3)
120.49300765612782 (1014, 1352, 3)
120.49941693996087 (1014, 1352, 3)
120.48629030846259 (1014, 1352, 3)
120.49267114441216 (1014, 1352, 3)
120.48825929103012 (1014, 1352, 3)
120.4808866694677 (1014, 1352, 3)
120.47035219938611 (1014, 1352, 3)
120.47969647810339 (1014, 1352, 3)
120.48818197114169 (1014, 1352, 3)
120.47864876930079 (1014, 1352, 3)
120.47150081307456 (1014, 1352, 3)
120.46920091111033 (1014, 1352, 3)
120.47448467996374 (1014, 1352, 3)
120.46994274437948 (1014, 1352, 3)
120.4865925368315 (1014, 1352, 3)
120.49567981202027 (1014, 1352, 3)
120.49289799804707 (1014, 1352, 3)
120.48478719038005 (1014, 1352, 3)
120.49402229730518 (1014, 1352, 3)
120.50775727585012 (1014, 1352, 3)
120.50959350162809 (1014, 1352, 3)
120.52236149527911 (1014, 1352, 3)
120.53203377566145 (1014, 1352, 3)
120.54027077522184 (1014, 1352, 3)
120.52636802710767 (1014, 1352, 3)
120.53442826075963 (1014, 1352, 3)
120.53962328194235 (1014, 1352, 3)
120.53996392711117 (1014, 1352, 3)
120.53773405070629 (1014, 1352, 3)
120.5479247147431 (1014, 1352, 3)
120.55807112651674 (1014, 1352, 3)
120.55113105866975 (1014, 1352, 3)
120.55785326922104 (1014, 1352, 3)
120.55628401588802 (1014, 1352, 3)
120.5619042964571 (1014, 1352, 3)
120.55170463608106 (1014, 1352, 3)
120.56388008706512 (1014, 1352, 3)
120.5696671646262 (1014, 1352, 3)
120.56669569809647 (1014, 1352, 3)
120.55600780395956 (1014, 1352, 3)
120.55336409595058 (1014, 1352, 3)
120.56471212687076 (1014, 1352, 3)
120.56615591774332 (1014, 1352, 3)
120.58408829639485 (1014, 1352, 3)
120.5899249753938 (1014, 1352, 3)
120.60127738291143 (1014, 1352, 3)
120.59002588027964 (1014, 1352, 3)
120.59780990200312 (1014, 1352, 3)
120.60351017704795 (1014, 1352, 3)
120.60834388579609 (1014, 1352, 3)
120.60318047337279 (1014, 1352, 3)
120.605555750071 (1014, 1352, 3)
120.60764849308886 (1014, 1352, 3)
120.60034516765286 (1014, 1352, 3)
120.60538530591444 (1014, 1352, 3)
120.60253978813378 (1014, 1352, 3)
120.60549812487113 (1014, 1352, 3)
120.59082266416131 (1014, 1352, 3)
120.60187478846446 (1014, 1352, 3)
120.59987857373497 (1014, 1352, 3)
120.59895973141307 (1014, 1352, 3)
120.58389062007633 (1014, 1352, 3)
120.58300460223538 (1014, 1352, 3)
120.5736695630016 (1014, 1352, 3)
120.5630358900443 (1014, 1352, 3)
120.56472622924034 (1014, 1352, 3)
120.56189213924193 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:13:03<00:00, 53.23s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
