nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=24, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_05-47-20 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:14, 53.25s/it]  1% 2/150 [01:45<2:10:29, 52.90s/it]  2% 3/150 [02:38<2:09:22, 52.81s/it]  3% 4/150 [03:31<2:08:23, 52.76s/it]  3% 5/150 [04:24<2:07:28, 52.75s/it]  4% 6/150 [05:16<2:06:38, 52.77s/it]  5% 7/150 [06:09<2:05:46, 52.77s/it]  5% 8/150 [07:02<2:04:54, 52.78s/it]  6% 9/150 [07:55<2:04:01, 52.78s/it]  7% 10/150 [08:47<2:03:09, 52.78s/it]  7% 11/150 [09:40<2:02:16, 52.78s/it]  8% 12/150 [10:33<2:01:24, 52.79s/it]  9% 13/150 [11:26<2:00:31, 52.79s/it]  9% 14/150 [12:19<1:59:37, 52.78s/it] 10% 15/150 [13:11<1:58:45, 52.78s/it] 11% 16/150 [14:04<1:57:52, 52.78s/it] 11% 17/150 [14:57<1:57:01, 52.79s/it] 12% 18/150 [15:50<1:56:08, 52.79s/it] 13% 19/150 [16:43<1:55:15, 52.79s/it] 13% 20/150 [17:35<1:54:22, 52.79s/it] 14% 21/150 [18:28<1:53:29, 52.79s/it] 15% 22/150 [19:21<1:52:37, 52.79s/it] 15% 23/150 [20:14<1:51:44, 52.79s/it] 16% 24/150 [21:06<1:50:51, 52.79s/it] 17% 25/150 [21:59<1:49:59, 52.80s/it] 17% 26/150 [22:52<1:49:07, 52.80s/it] 18% 27/150 [23:45<1:48:14, 52.80s/it] 19% 28/150 [24:38<1:47:21, 52.80s/it] 19% 29/150 [25:30<1:46:28, 52.80s/it] 20% 30/150 [26:23<1:45:35, 52.79s/it] 21% 31/150 [27:16<1:44:42, 52.80s/it] 21% 32/150 [28:09<1:43:50, 52.80s/it] 22% 33/150 [29:02<1:42:56, 52.79s/it] 23% 34/150 [29:54<1:42:04, 52.80s/it] 23% 35/150 [30:47<1:41:12, 52.80s/it] 24% 36/150 [31:40<1:40:18, 52.79s/it] 25% 37/150 [32:33<1:39:25, 52.79s/it] 25% 38/150 [33:26<1:38:32, 52.79s/it] 26% 39/150 [34:18<1:37:39, 52.79s/it] 27% 40/150 [35:11<1:36:47, 52.80s/it] 27% 41/150 [36:04<1:35:54, 52.79s/it] 28% 42/150 [36:57<1:35:02, 52.80s/it] 29% 43/150 [37:50<1:34:08, 52.79s/it] 29% 44/150 [38:42<1:33:16, 52.80s/it] 30% 45/150 [39:35<1:32:25, 52.81s/it] 31% 46/150 [40:28<1:31:32, 52.82s/it] 31% 47/150 [41:21<1:30:39, 52.81s/it] 32% 48/150 [42:14<1:29:47, 52.82s/it] 33% 49/150 [43:07<1:28:55, 52.83s/it] 33% 50/150 [43:59<1:28:01, 52.82s/it] 34% 51/150 [44:52<1:27:08, 52.82s/it] 35% 52/150 [45:45<1:26:15, 52.81s/it] 35% 53/150 [46:38<1:25:22, 52.81s/it] 36% 54/150 [47:31<1:24:29, 52.81s/it] 37% 55/150 [48:23<1:23:37, 52.81s/it] 37% 56/150 [49:16<1:22:44, 52.81s/it] 38% 57/150 [50:09<1:21:50, 52.80s/it] 39% 58/150 [51:02<1:20:57, 52.80s/it] 39% 59/150 [51:55<1:20:04, 52.79s/it] 40% 60/150 [52:47<1:19:11, 52.79s/it] 41% 61/150 [53:40<1:18:19, 52.80s/it] 41% 62/150 [54:33<1:17:26, 52.80s/it] 42% 63/150 [55:26<1:16:33, 52.80s/it] 43% 64/150 [56:19<1:15:40, 52.80s/it] 43% 65/150 [57:11<1:14:48, 52.81s/it] 44% 66/150 [58:04<1:13:55, 52.81s/it] 45% 67/150 [58:57<1:13:02, 52.80s/it] 45% 68/150 [59:50<1:12:10, 52.81s/it] 46% 69/150 [1:00:43<1:11:17, 52.80s/it] 47% 70/150 [1:01:35<1:10:24, 52.81s/it] 47% 71/150 [1:02:28<1:09:31, 52.80s/it] 48% 72/150 [1:03:21<1:08:38, 52.81s/it] 49% 73/150 [1:04:14<1:07:45, 52.80s/it] 49% 74/150 [1:05:07<1:06:53, 52.80s/it] 50% 75/150 [1:05:59<1:06:00, 52.80s/it] 51% 76/150 [1:06:52<1:05:06, 52.80s/it] 51% 77/150 [1:07:45<1:04:13, 52.79s/it] 52% 78/150 [1:08:38<1:03:21, 52.80s/it] 53% 79/150 [1:09:31<1:02:28, 52.80s/it] 53% 80/150 [1:10:23<1:01:36, 52.80s/it] 54% 81/150 [1:11:16<1:00:43, 52.80s/it] 55% 82/150 [1:12:09<59:50, 52.80s/it]   55% 83/150 [1:13:02<58:57, 52.80s/it] 56% 84/150 [1:13:55<58:04, 52.80s/it] 57% 85/150 [1:14:47<57:11, 52.80s/it] 57% 86/150 [1:15:40<56:19, 52.80s/it] 58% 87/150 [1:16:33<55:26, 52.80s/it] 59% 88/150 [1:17:26<54:34, 52.81s/it] 59% 89/150 [1:18:19<53:40, 52.80s/it] 60% 90/150 [1:19:11<52:48, 52.81s/it] 61% 91/150 [1:20:04<51:55, 52.81s/it] 61% 92/150 [1:20:57<51:02, 52.80s/it] 62% 93/150 [1:21:50<50:09, 52.80s/it] 63% 94/150 [1:22:43<49:16, 52.80s/it] 63% 95/150 [1:23:35<48:24, 52.81s/it] 64% 96/150 [1:24:28<47:31, 52.80s/it] 65% 97/150 [1:25:21<46:38, 52.80s/it] 65% 98/150 [1:26:14<45:46, 52.81s/it] 66% 99/150 [1:27:07<44:53, 52.81s/it] 67% 100/150 [1:28:00<44:00, 52.81s/it] 67% 101/150 [1:28:52<43:07, 52.80s/it] 68% 102/150 [1:29:45<42:14, 52.80s/it] 69% 103/150 [1:30:38<41:22, 52.81s/it] 69% 104/150 [1:31:31<40:29, 52.81s/it] 70% 105/150 [1:32:24<39:36, 52.81s/it] 71% 106/150 [1:33:16<38:43, 52.80s/it] 71% 107/150 [1:34:09<37:50, 52.80s/it] 72% 108/150 [1:35:02<36:57, 52.80s/it] 73% 109/150 [1:35:55<36:04, 52.79s/it] 73% 110/150 [1:36:47<35:11, 52.79s/it] 74% 111/150 [1:37:40<34:18, 52.78s/it] 75% 112/150 [1:38:33<33:25, 52.79s/it] 75% 113/150 [1:39:26<32:33, 52.79s/it] 76% 114/150 [1:40:19<31:40, 52.79s/it] 77% 115/150 [1:41:11<30:47, 52.78s/it] 77% 116/150 [1:42:04<29:54, 52.78s/it] 78% 117/150 [1:42:57<29:01, 52.78s/it] 79% 118/150 [1:43:50<28:08, 52.78s/it] 79% 119/150 [1:44:42<27:16, 52.78s/it] 80% 120/150 [1:45:35<26:23, 52.78s/it] 81% 121/150 [1:46:28<25:30, 52.78s/it] 81% 122/150 [1:47:21<24:37, 52.78s/it] 82% 123/150 [1:48:14<23:45, 52.79s/it] 83% 124/150 [1:49:06<22:52, 52.79s/it] 83% 125/150 [1:49:59<21:59, 52.79s/it] 84% 126/150 [1:50:52<21:07, 52.79s/it] 85% 127/150 [1:51:45<20:14, 52.79s/it] 85% 128/150 [1:52:38<19:21, 52.78s/it] 86% 129/150 [1:53:30<18:28, 52.78s/it] 87% 130/150 [1:54:23<17:35, 52.79s/it] 87% 131/150 [1:55:16<16:42, 52.78s/it] 88% 132/150 [1:56:09<15:50, 52.78s/it] 89% 133/150 [1:57:01<14:57, 52.78s/it] 89% 134/150 [1:57:54<14:04, 52.78s/it] 90% 135/150 [1:58:47<13:11, 52.78s/it] 91% 136/150 [1:59:40<12:18, 52.78s/it] 91% 137/150 [2:00:33<11:26, 52.79s/it] 92% 138/150 [2:01:25<10:33, 52.79s/it] 93% 139/150 [2:02:18<09:40, 52.79s/it] 93% 140/150 [2:03:11<08:47, 52.79s/it] 94% 141/150 [2:04:04<07:55, 52.78s/it] 95% 142/150 [2:04:57<07:02, 52.78s/it] 95% 143/150 [2:05:49<06:09, 52.79s/it] 96% 144/150 [2:06:42<05:16, 52.79s/it] 97% 145/150 [2:07:35<04:23, 52.79s/it] 97% 146/150 [2:08:28<03:31, 52.79s/it] 98% 147/150 [2:09:20<02:38, 52.78s/it] 99% 148/150 [2:10:13<01:45, 52.78s/it] 99% 149/150 [2:11:06<00:52, 52.78s/it]100% 150/150 [2:11:59<00:00, 52.79s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x74fbd80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x58aa8c0] Warning: data is not aligned! This can lead to a speed loss
119.27506842080693 (1014, 1352, 3)
119.3365331123638 (1014, 1352, 3)
119.36007337122494 (1014, 1352, 3)
119.35965102957024 (1014, 1352, 3)
119.34135320503094 (1014, 1352, 3)
119.34108817774043 (1014, 1352, 3)
119.33596342526133 (1014, 1352, 3)
119.31406268843683 (1014, 1352, 3)
119.30045049776501 (1014, 1352, 3)
119.28283979902665 (1014, 1352, 3)
119.27459526199284 (1014, 1352, 3)
119.2531355889344 (1014, 1352, 3)
119.26215478371827 (1014, 1352, 3)
119.25707331092515 (1014, 1352, 3)
119.26178569066599 (1014, 1352, 3)
119.25840720057265 (1014, 1352, 3)
119.27437813413007 (1014, 1352, 3)
119.27542657236557 (1014, 1352, 3)
119.26953786048574 (1014, 1352, 3)
119.26348891651008 (1014, 1352, 3)
119.25573212694856 (1014, 1352, 3)
119.2561420682438 (1014, 1352, 3)
119.25302884858529 (1014, 1352, 3)
119.2693766558127 (1014, 1352, 3)
119.26533948780194 (1014, 1352, 3)
119.26723990367596 (1014, 1352, 3)
119.25848233216234 (1014, 1352, 3)
119.27253193943567 (1014, 1352, 3)
119.28128659321763 (1014, 1352, 3)
119.28867210142813 (1014, 1352, 3)
119.28683806394889 (1014, 1352, 3)
119.2787061027275 (1014, 1352, 3)
119.27256184618497 (1014, 1352, 3)
119.25715597998826 (1014, 1352, 3)
119.26497282619268 (1014, 1352, 3)
119.2626916463398 (1014, 1352, 3)
119.2684485740073 (1014, 1352, 3)
119.25217492579236 (1014, 1352, 3)
119.25600833887702 (1014, 1352, 3)
119.25559742500457 (1014, 1352, 3)
119.25994995117662 (1014, 1352, 3)
119.26150267069703 (1014, 1352, 3)
119.26439073873075 (1014, 1352, 3)
119.2710186092924 (1014, 1352, 3)
119.26790903679843 (1014, 1352, 3)
119.2841034199705 (1014, 1352, 3)
119.28588688343467 (1014, 1352, 3)
119.28862882174217 (1014, 1352, 3)
119.27171351571101 (1014, 1352, 3)
119.27624621181175 (1014, 1352, 3)
119.27635003442923 (1014, 1352, 3)
119.28637681920567 (1014, 1352, 3)
119.28945599866174 (1014, 1352, 3)
119.29357802403433 (1014, 1352, 3)
119.28844524779322 (1014, 1352, 3)
119.27799758022789 (1014, 1352, 3)
119.28438571050656 (1014, 1352, 3)
119.28729079864151 (1014, 1352, 3)
119.29552488047025 (1014, 1352, 3)
119.28653364728126 (1014, 1352, 3)
119.29094088092154 (1014, 1352, 3)
119.28183974650747 (1014, 1352, 3)
119.28241210819726 (1014, 1352, 3)
119.27883837322845 (1014, 1352, 3)
119.28370442016892 (1014, 1352, 3)
119.27785996055226 (1014, 1352, 3)
119.26874861407747 (1014, 1352, 3)
119.27123403514506 (1014, 1352, 3)
119.27080391287264 (1014, 1352, 3)
119.2770036063163 (1014, 1352, 3)
119.26924365587884 (1014, 1352, 3)
119.27738388400655 (1014, 1352, 3)
119.27369587121521 (1014, 1352, 3)
119.28206951787402 (1014, 1352, 3)
119.28723171457582 (1014, 1352, 3)
119.3008487681337 (1014, 1352, 3)
119.29827921913721 (1014, 1352, 3)
119.29009498189062 (1014, 1352, 3)
119.28936409011511 (1014, 1352, 3)
119.28867526230407 (1014, 1352, 3)
119.29796483355314 (1014, 1352, 3)
119.29356708254068 (1014, 1352, 3)
119.30217025742174 (1014, 1352, 3)
119.29201411987597 (1014, 1352, 3)
119.29407719928885 (1014, 1352, 3)
119.28881434084552 (1014, 1352, 3)
119.29757264179203 (1014, 1352, 3)
119.29816712961342 (1014, 1352, 3)
119.29593044516804 (1014, 1352, 3)
119.2936135231026 (1014, 1352, 3)
119.29081590474968 (1014, 1352, 3)
119.2922115530502 (1014, 1352, 3)
119.28305011884893 (1014, 1352, 3)
119.28616552680617 (1014, 1352, 3)
119.28197201700843 (1014, 1352, 3)
119.28642253033469 (1014, 1352, 3)
119.28338833257472 (1014, 1352, 3)
119.29353352862684 (1014, 1352, 3)
119.29578601745193 (1014, 1352, 3)
119.29449078774864 (1014, 1352, 3)
119.29566590416613 (1014, 1352, 3)
119.29973638294645 (1014, 1352, 3)
119.30827099113398 (1014, 1352, 3)
119.30954020439682 (1014, 1352, 3)
119.32300821049684 (1014, 1352, 3)
119.32229312310105 (1014, 1352, 3)
119.32165900275822 (1014, 1352, 3)
119.31217345720077 (1014, 1352, 3)
119.31800867733389 (1014, 1352, 3)
119.32056047679626 (1014, 1352, 3)
119.3224261230349 (1014, 1352, 3)
119.3294580994285 (1014, 1352, 3)
119.33283804838766 (1014, 1352, 3)
119.3320643632148 (1014, 1352, 3)
119.32084471248672 (1014, 1352, 3)
119.32962124925598 (1014, 1352, 3)
119.32936959490213 (1014, 1352, 3)
119.33595758979806 (1014, 1352, 3)
119.32898007772837 (1014, 1352, 3)
119.33686427490478 (1014, 1352, 3)
119.33377901684115 (1014, 1352, 3)
119.32813199039872 (1014, 1352, 3)
119.3251680613424 (1014, 1352, 3)
119.32681268940941 (1014, 1352, 3)
119.33194011647585 (1014, 1352, 3)
119.32763014055686 (1014, 1352, 3)
119.34060237542259 (1014, 1352, 3)
119.34461571529164 (1014, 1352, 3)
119.3523824737696 (1014, 1352, 3)
119.34601914420986 (1014, 1352, 3)
119.35680405292376 (1014, 1352, 3)
119.35998583927578 (1014, 1352, 3)
119.36825031414244 (1014, 1352, 3)
119.3759716046357 (1014, 1352, 3)
119.38054976872114 (1014, 1352, 3)
119.37520326863749 (1014, 1352, 3)
119.36078797233212 (1014, 1352, 3)
119.36746641690884 (1014, 1352, 3)
119.3651349061852 (1014, 1352, 3)
119.37378087446362 (1014, 1352, 3)
119.36529854230128 (1014, 1352, 3)
119.37359486907165 (1014, 1352, 3)
119.35613759438861 (1014, 1352, 3)
119.3487348229326 (1014, 1352, 3)
119.3413116273551 (1014, 1352, 3)
119.34277049317446 (1014, 1352, 3)
119.33962931192107 (1014, 1352, 3)
119.32781979311338 (1014, 1352, 3)
119.33202375811615 (1014, 1352, 3)
119.32031708934872 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:02<00:00, 52.81s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
