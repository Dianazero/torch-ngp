nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=10, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_03-49-58 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:13:28, 53.75s/it]  1% 2/150 [01:47<2:11:56, 53.49s/it]  2% 3/150 [02:40<2:10:48, 53.39s/it]  3% 4/150 [03:33<2:09:48, 53.35s/it]  3% 5/150 [04:26<2:08:53, 53.33s/it]  4% 6/150 [05:20<2:07:59, 53.33s/it]  5% 7/150 [06:13<2:07:03, 53.31s/it]  5% 8/150 [07:06<2:06:09, 53.30s/it]  6% 9/150 [08:00<2:05:17, 53.31s/it]  7% 10/150 [08:53<2:04:24, 53.32s/it]  7% 11/150 [09:46<2:03:30, 53.32s/it]  8% 12/150 [10:40<2:02:39, 53.33s/it]  9% 13/150 [11:33<2:01:46, 53.33s/it]  9% 14/150 [12:26<2:00:52, 53.33s/it] 10% 15/150 [13:20<2:00:00, 53.33s/it] 11% 16/150 [14:13<1:59:06, 53.33s/it] 11% 17/150 [15:06<1:58:13, 53.33s/it] 12% 18/150 [16:00<1:57:20, 53.34s/it] 13% 19/150 [16:53<1:56:27, 53.34s/it] 13% 20/150 [17:46<1:55:34, 53.34s/it] 14% 21/150 [18:40<1:54:41, 53.35s/it] 15% 22/150 [19:33<1:53:48, 53.35s/it] 15% 23/150 [20:26<1:52:54, 53.34s/it] 16% 24/150 [21:20<1:52:00, 53.34s/it] 17% 25/150 [22:13<1:51:07, 53.34s/it] 17% 26/150 [23:06<1:50:13, 53.34s/it] 18% 27/150 [24:00<1:49:20, 53.34s/it] 19% 28/150 [24:53<1:48:26, 53.33s/it] 19% 29/150 [25:46<1:47:33, 53.33s/it] 20% 30/150 [26:40<1:46:41, 53.34s/it] 21% 31/150 [27:33<1:45:48, 53.35s/it] 21% 32/150 [28:26<1:44:55, 53.35s/it] 22% 33/150 [29:20<1:44:01, 53.35s/it] 23% 34/150 [30:13<1:43:07, 53.34s/it] 23% 35/150 [31:06<1:42:14, 53.35s/it] 24% 36/150 [32:00<1:41:22, 53.35s/it] 25% 37/150 [32:53<1:40:28, 53.35s/it] 25% 38/150 [33:47<1:39:34, 53.35s/it] 26% 39/150 [34:40<1:38:41, 53.35s/it] 27% 40/150 [35:33<1:37:48, 53.35s/it] 27% 41/150 [36:27<1:36:54, 53.34s/it] 28% 42/150 [37:20<1:36:01, 53.35s/it] 29% 43/150 [38:13<1:35:08, 53.35s/it] 29% 44/150 [39:07<1:34:15, 53.35s/it] 30% 45/150 [40:00<1:33:20, 53.34s/it] 31% 46/150 [40:53<1:32:27, 53.34s/it] 31% 47/150 [41:47<1:31:33, 53.34s/it] 32% 48/150 [42:40<1:30:40, 53.34s/it] 33% 49/150 [43:33<1:29:47, 53.34s/it] 33% 50/150 [44:27<1:28:54, 53.34s/it] 34% 51/150 [45:20<1:28:00, 53.34s/it] 35% 52/150 [46:13<1:27:07, 53.34s/it] 35% 53/150 [47:07<1:26:14, 53.34s/it] 36% 54/150 [48:00<1:25:20, 53.34s/it] 37% 55/150 [48:53<1:24:27, 53.34s/it] 37% 56/150 [49:47<1:23:34, 53.34s/it] 38% 57/150 [50:40<1:22:40, 53.34s/it] 39% 58/150 [51:33<1:21:47, 53.34s/it] 39% 59/150 [52:27<1:20:54, 53.34s/it] 40% 60/150 [53:20<1:20:00, 53.34s/it] 41% 61/150 [54:13<1:19:07, 53.34s/it] 41% 62/150 [55:07<1:18:13, 53.34s/it] 42% 63/150 [56:00<1:17:20, 53.34s/it] 43% 64/150 [56:53<1:16:27, 53.34s/it] 43% 65/150 [57:47<1:15:34, 53.34s/it] 44% 66/150 [58:40<1:14:41, 53.35s/it] 45% 67/150 [59:34<1:13:48, 53.35s/it] 45% 68/150 [1:00:27<1:12:55, 53.35s/it] 46% 69/150 [1:01:20<1:12:01, 53.35s/it] 47% 70/150 [1:02:14<1:11:08, 53.35s/it] 47% 71/150 [1:03:07<1:10:14, 53.35s/it] 48% 72/150 [1:04:00<1:09:21, 53.35s/it] 49% 73/150 [1:04:54<1:08:27, 53.35s/it] 49% 74/150 [1:05:47<1:07:34, 53.34s/it] 50% 75/150 [1:06:40<1:06:40, 53.34s/it] 51% 76/150 [1:07:34<1:05:47, 53.34s/it] 51% 77/150 [1:08:27<1:04:53, 53.34s/it] 52% 78/150 [1:09:20<1:04:00, 53.34s/it] 53% 79/150 [1:10:14<1:03:07, 53.34s/it] 53% 80/150 [1:11:07<1:02:13, 53.34s/it] 54% 81/150 [1:12:00<1:01:20, 53.34s/it] 55% 82/150 [1:12:54<1:00:27, 53.34s/it] 55% 83/150 [1:13:47<59:34, 53.35s/it]   56% 84/150 [1:14:40<58:40, 53.35s/it] 57% 85/150 [1:15:34<57:47, 53.35s/it] 57% 86/150 [1:16:27<56:54, 53.35s/it] 58% 87/150 [1:17:20<56:01, 53.35s/it] 59% 88/150 [1:18:14<55:07, 53.35s/it] 59% 89/150 [1:19:07<54:14, 53.35s/it] 60% 90/150 [1:20:00<53:21, 53.35s/it] 61% 91/150 [1:20:54<52:27, 53.35s/it] 61% 92/150 [1:21:47<51:34, 53.35s/it] 62% 93/150 [1:22:41<50:40, 53.35s/it] 63% 94/150 [1:23:34<49:47, 53.35s/it] 63% 95/150 [1:24:27<48:54, 53.35s/it] 64% 96/150 [1:25:21<48:01, 53.35s/it] 65% 97/150 [1:26:14<47:07, 53.35s/it] 65% 98/150 [1:27:07<46:13, 53.34s/it] 66% 99/150 [1:28:01<45:20, 53.34s/it] 67% 100/150 [1:28:54<44:26, 53.34s/it] 67% 101/150 [1:29:47<43:33, 53.34s/it] 68% 102/150 [1:30:41<42:40, 53.34s/it] 69% 103/150 [1:31:34<41:46, 53.34s/it] 69% 104/150 [1:32:27<40:53, 53.34s/it] 70% 105/150 [1:33:21<40:00, 53.34s/it] 71% 106/150 [1:34:14<39:07, 53.34s/it] 71% 107/150 [1:35:07<38:13, 53.34s/it] 72% 108/150 [1:36:01<37:20, 53.34s/it] 73% 109/150 [1:36:54<36:26, 53.34s/it] 73% 110/150 [1:37:47<35:33, 53.34s/it] 74% 111/150 [1:38:41<34:40, 53.34s/it] 75% 112/150 [1:39:34<33:47, 53.34s/it] 75% 113/150 [1:40:27<32:53, 53.35s/it] 76% 114/150 [1:41:21<32:00, 53.35s/it] 77% 115/150 [1:42:14<31:07, 53.35s/it] 77% 116/150 [1:43:07<30:13, 53.35s/it] 78% 117/150 [1:44:01<29:20, 53.34s/it] 79% 118/150 [1:44:54<28:26, 53.34s/it] 79% 119/150 [1:45:47<27:33, 53.34s/it] 80% 120/150 [1:46:41<26:40, 53.35s/it] 81% 121/150 [1:47:34<25:47, 53.35s/it] 81% 122/150 [1:48:27<24:53, 53.35s/it] 82% 123/150 [1:49:21<24:00, 53.35s/it] 83% 124/150 [1:50:14<23:07, 53.35s/it] 83% 125/150 [1:51:08<22:13, 53.35s/it] 84% 126/150 [1:52:01<21:20, 53.35s/it] 85% 127/150 [1:52:54<20:27, 53.35s/it] 85% 128/150 [1:53:48<19:33, 53.35s/it] 86% 129/150 [1:54:41<18:40, 53.35s/it] 87% 130/150 [1:55:34<17:46, 53.35s/it] 87% 131/150 [1:56:28<16:53, 53.35s/it] 88% 132/150 [1:57:21<16:00, 53.35s/it] 89% 133/150 [1:58:14<15:06, 53.35s/it] 89% 134/150 [1:59:08<14:13, 53.35s/it] 90% 135/150 [2:00:01<13:20, 53.34s/it] 91% 136/150 [2:00:54<12:26, 53.34s/it] 91% 137/150 [2:01:48<11:33, 53.35s/it] 92% 138/150 [2:02:41<10:40, 53.34s/it] 93% 139/150 [2:03:34<09:46, 53.35s/it] 93% 140/150 [2:04:28<08:53, 53.35s/it] 94% 141/150 [2:05:21<08:00, 53.34s/it] 95% 142/150 [2:06:14<07:06, 53.34s/it] 95% 143/150 [2:07:08<06:13, 53.34s/it] 96% 144/150 [2:08:01<05:20, 53.35s/it] 97% 145/150 [2:08:54<04:26, 53.35s/it] 97% 146/150 [2:09:48<03:33, 53.34s/it] 98% 147/150 [2:10:41<02:40, 53.34s/it] 99% 148/150 [2:11:34<01:46, 53.35s/it] 99% 149/150 [2:12:28<00:53, 53.35s/it]100% 150/150 [2:13:21<00:00, 53.35s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5674d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5f8f8c0] Warning: data is not aligned! This can lead to a speed loss
120.64694985197374 (1014, 1352, 3)
120.72128319892316 (1014, 1352, 3)
120.75518967200806 (1014, 1352, 3)
120.75236919809063 (1014, 1352, 3)
120.72863491007551 (1014, 1352, 3)
120.72100844586052 (1014, 1352, 3)
120.71338854654171 (1014, 1352, 3)
120.6784110228011 (1014, 1352, 3)
120.65339998404973 (1014, 1352, 3)
120.64049169613575 (1014, 1352, 3)
120.62969584592821 (1014, 1352, 3)
120.59557929616533 (1014, 1352, 3)
120.58102005843244 (1014, 1352, 3)
120.57354920657151 (1014, 1352, 3)
120.57203830787127 (1014, 1352, 3)
120.55999220965653 (1014, 1352, 3)
120.56293547144708 (1014, 1352, 3)
120.5609776735175 (1014, 1352, 3)
120.54461941108505 (1014, 1352, 3)
120.52286991001715 (1014, 1352, 3)
120.51999132461125 (1014, 1352, 3)
120.51776169135067 (1014, 1352, 3)
120.50482641441904 (1014, 1352, 3)
120.50245964777143 (1014, 1352, 3)
120.50065940735035 (1014, 1352, 3)
120.49870525658532 (1014, 1352, 3)
120.48185803095907 (1014, 1352, 3)
120.49112717808667 (1014, 1352, 3)
120.49577366572132 (1014, 1352, 3)
120.4937604308906 (1014, 1352, 3)
120.47945795354194 (1014, 1352, 3)
120.47979908499936 (1014, 1352, 3)
120.48333051285941 (1014, 1352, 3)
120.46836352213002 (1014, 1352, 3)
120.46465581465013 (1014, 1352, 3)
120.46309531451202 (1014, 1352, 3)
120.46885443047823 (1014, 1352, 3)
120.45048269007077 (1014, 1352, 3)
120.45825115055884 (1014, 1352, 3)
120.46520702278553 (1014, 1352, 3)
120.46497725141899 (1014, 1352, 3)
120.45083768075348 (1014, 1352, 3)
120.4568078459749 (1014, 1352, 3)
120.47030843341153 (1014, 1352, 3)
120.468791699248 (1014, 1352, 3)
120.47702091819069 (1014, 1352, 3)
120.4833441289404 (1014, 1352, 3)
120.49076221848753 (1014, 1352, 3)
120.46874696069621 (1014, 1352, 3)
120.47568581282168 (1014, 1352, 3)
120.48332419110753 (1014, 1352, 3)
120.49795661527568 (1014, 1352, 3)
120.48599756272151 (1014, 1352, 3)
120.49526087438582 (1014, 1352, 3)
120.49998662706332 (1014, 1352, 3)
120.49833300265708 (1014, 1352, 3)
120.5020426552914 (1014, 1352, 3)
120.51241810899867 (1014, 1352, 3)
120.5239360977868 (1014, 1352, 3)
120.51007249590545 (1014, 1352, 3)
120.51706654178776 (1014, 1352, 3)
120.51738773541231 (1014, 1352, 3)
120.52567725414221 (1014, 1352, 3)
120.50777648425009 (1014, 1352, 3)
120.5118245937545 (1014, 1352, 3)
120.50581455286735 (1014, 1352, 3)
120.49894232228097 (1014, 1352, 3)
120.49583007519966 (1014, 1352, 3)
120.5043938607036 (1014, 1352, 3)
120.51590139428669 (1014, 1352, 3)
120.50037687367 (1014, 1352, 3)
120.50300258900054 (1014, 1352, 3)
120.50163052569744 (1014, 1352, 3)
120.51668699353041 (1014, 1352, 3)
120.50723281358808 (1014, 1352, 3)
120.52075698602212 (1014, 1352, 3)
120.51569593735047 (1014, 1352, 3)
120.51152722827165 (1014, 1352, 3)
120.50205991853693 (1014, 1352, 3)
120.51190823539481 (1014, 1352, 3)
120.52087661301931 (1014, 1352, 3)
120.5111544880548 (1014, 1352, 3)
120.51365692922361 (1014, 1352, 3)
120.51229483483694 (1014, 1352, 3)
120.52008274686928 (1014, 1352, 3)
120.50692280460146 (1014, 1352, 3)
120.51429202214364 (1014, 1352, 3)
120.51011042641676 (1014, 1352, 3)
120.50468344556874 (1014, 1352, 3)
120.49340471077498 (1014, 1352, 3)
120.50347039863995 (1014, 1352, 3)
120.51265784928165 (1014, 1352, 3)
120.50286229473758 (1014, 1352, 3)
120.49744309450728 (1014, 1352, 3)
120.49556431847624 (1014, 1352, 3)
120.50141048010302 (1014, 1352, 3)
120.49557769141292 (1014, 1352, 3)
120.51227611272559 (1014, 1352, 3)
120.5208758835864 (1014, 1352, 3)
120.51879335262926 (1014, 1352, 3)
120.50784407836638 (1014, 1352, 3)
120.51797833292486 (1014, 1352, 3)
120.53123139946081 (1014, 1352, 3)
120.53168243214328 (1014, 1352, 3)
120.54375308793266 (1014, 1352, 3)
120.55359654190447 (1014, 1352, 3)
120.56198040062401 (1014, 1352, 3)
120.54660152344495 (1014, 1352, 3)
120.55561658477566 (1014, 1352, 3)
120.5606538053056 (1014, 1352, 3)
120.56214719761601 (1014, 1352, 3)
120.55854501476372 (1014, 1352, 3)
120.56940894537617 (1014, 1352, 3)
120.5792237083202 (1014, 1352, 3)
120.57260240265475 (1014, 1352, 3)
120.57980992923528 (1014, 1352, 3)
120.58058191239803 (1014, 1352, 3)
120.58784633474552 (1014, 1352, 3)
120.57735174032966 (1014, 1352, 3)
120.58961448011857 (1014, 1352, 3)
120.59641279483678 (1014, 1352, 3)
120.5927590653922 (1014, 1352, 3)
120.5788013666655 (1014, 1352, 3)
120.57508685114512 (1014, 1352, 3)
120.58410555964038 (1014, 1352, 3)
120.58269532268167 (1014, 1352, 3)
120.60001230310175 (1014, 1352, 3)
120.6083888674922 (1014, 1352, 3)
120.62020446490747 (1014, 1352, 3)
120.6085554213399 (1014, 1352, 3)
120.61761789580974 (1014, 1352, 3)
120.6242683787916 (1014, 1352, 3)
120.6294242537415 (1014, 1352, 3)
120.62546100159892 (1014, 1352, 3)
120.63037421853421 (1014, 1352, 3)
120.6332143871402 (1014, 1352, 3)
120.62482542239029 (1014, 1352, 3)
120.62923362860778 (1014, 1352, 3)
120.62722501351882 (1014, 1352, 3)
120.63107958015787 (1014, 1352, 3)
120.61752744612895 (1014, 1352, 3)
120.63003649109703 (1014, 1352, 3)
120.62792697112224 (1014, 1352, 3)
120.62671003388459 (1014, 1352, 3)
120.6106204459072 (1014, 1352, 3)
120.61102844204801 (1014, 1352, 3)
120.60043342903494 (1014, 1352, 3)
120.58956803955667 (1014, 1352, 3)
120.58940659173932 (1014, 1352, 3)
120.5854032207867 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:13:24<00:00, 53.36s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
