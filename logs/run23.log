nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=23, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-07-01_01-30-39 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:11:50, 53.09s/it]  1% 2/150 [01:45<2:10:16, 52.82s/it]  2% 3/150 [02:38<2:09:09, 52.72s/it]  3% 4/150 [03:30<2:08:13, 52.70s/it]  3% 5/150 [04:23<2:07:17, 52.68s/it]  4% 6/150 [05:16<2:06:23, 52.66s/it]  5% 7/150 [06:08<2:05:30, 52.66s/it]  5% 8/150 [07:01<2:04:37, 52.66s/it]  6% 9/150 [07:54<2:03:45, 52.67s/it]  7% 10/150 [08:46<2:02:52, 52.66s/it]  7% 11/150 [09:39<2:02:00, 52.66s/it]  8% 12/150 [10:32<2:01:07, 52.66s/it]  9% 13/150 [11:24<2:00:15, 52.67s/it]  9% 14/150 [12:17<1:59:22, 52.67s/it] 10% 15/150 [13:10<1:58:30, 52.67s/it] 11% 16/150 [14:02<1:57:37, 52.67s/it] 11% 17/150 [14:55<1:56:45, 52.67s/it] 12% 18/150 [15:48<1:55:53, 52.67s/it] 13% 19/150 [16:40<1:55:00, 52.68s/it] 13% 20/150 [17:33<1:54:09, 52.69s/it] 14% 21/150 [18:26<1:53:16, 52.68s/it] 15% 22/150 [19:19<1:52:23, 52.68s/it] 15% 23/150 [20:11<1:51:30, 52.68s/it] 16% 24/150 [21:04<1:50:38, 52.69s/it] 17% 25/150 [21:57<1:49:46, 52.69s/it] 17% 26/150 [22:49<1:48:54, 52.70s/it] 18% 27/150 [23:42<1:48:03, 52.71s/it] 19% 28/150 [24:35<1:47:10, 52.71s/it] 19% 29/150 [25:27<1:46:18, 52.71s/it] 20% 30/150 [26:20<1:45:25, 52.72s/it] 21% 31/150 [27:13<1:44:33, 52.72s/it] 21% 32/150 [28:06<1:43:40, 52.72s/it] 22% 33/150 [28:58<1:42:47, 52.72s/it] 23% 34/150 [29:51<1:41:55, 52.72s/it] 23% 35/150 [30:44<1:41:02, 52.72s/it] 24% 36/150 [31:37<1:40:09, 52.72s/it] 25% 37/150 [32:29<1:39:18, 52.73s/it] 25% 38/150 [33:22<1:38:25, 52.73s/it] 26% 39/150 [34:15<1:37:31, 52.72s/it] 27% 40/150 [35:07<1:36:39, 52.72s/it] 27% 41/150 [36:00<1:35:47, 52.73s/it] 28% 42/150 [36:53<1:34:54, 52.73s/it] 29% 43/150 [37:46<1:34:02, 52.74s/it] 29% 44/150 [38:38<1:33:09, 52.73s/it] 30% 45/150 [39:31<1:32:17, 52.74s/it] 31% 46/150 [40:24<1:31:24, 52.73s/it] 31% 47/150 [41:17<1:30:31, 52.74s/it] 32% 48/150 [42:09<1:29:39, 52.74s/it] 33% 49/150 [43:02<1:28:46, 52.74s/it] 33% 50/150 [43:55<1:27:53, 52.73s/it] 34% 51/150 [44:48<1:27:00, 52.73s/it] 35% 52/150 [45:40<1:26:07, 52.73s/it] 35% 53/150 [46:33<1:25:14, 52.72s/it] 36% 54/150 [47:26<1:24:20, 52.72s/it] 37% 55/150 [48:18<1:23:28, 52.72s/it] 37% 56/150 [49:11<1:22:35, 52.71s/it] 38% 57/150 [50:04<1:21:42, 52.72s/it] 39% 58/150 [50:57<1:20:49, 52.71s/it] 39% 59/150 [51:49<1:19:56, 52.71s/it] 40% 60/150 [52:42<1:19:03, 52.71s/it] 41% 61/150 [53:35<1:18:11, 52.71s/it] 41% 62/150 [54:27<1:17:18, 52.71s/it] 42% 63/150 [55:20<1:16:25, 52.71s/it] 43% 64/150 [56:13<1:15:32, 52.71s/it] 43% 65/150 [57:06<1:14:41, 52.72s/it] 44% 66/150 [57:58<1:13:48, 52.72s/it] 45% 67/150 [58:51<1:12:55, 52.72s/it] 45% 68/150 [59:44<1:12:03, 52.72s/it] 46% 69/150 [1:00:36<1:11:11, 52.73s/it] 47% 70/150 [1:01:29<1:10:18, 52.73s/it] 47% 71/150 [1:02:22<1:09:26, 52.74s/it] 48% 72/150 [1:03:15<1:08:33, 52.74s/it] 49% 73/150 [1:04:07<1:07:40, 52.74s/it] 49% 74/150 [1:05:00<1:06:48, 52.74s/it] 50% 75/150 [1:05:53<1:05:54, 52.73s/it] 51% 76/150 [1:06:46<1:05:01, 52.73s/it] 51% 77/150 [1:07:38<1:04:09, 52.73s/it] 52% 78/150 [1:08:31<1:03:16, 52.73s/it] 53% 79/150 [1:09:24<1:02:23, 52.72s/it] 53% 80/150 [1:10:16<1:01:30, 52.72s/it] 54% 81/150 [1:11:09<1:00:37, 52.72s/it] 55% 82/150 [1:12:02<59:44, 52.72s/it]   55% 83/150 [1:12:55<58:51, 52.71s/it] 56% 84/150 [1:13:47<57:59, 52.71s/it] 57% 85/150 [1:14:40<57:06, 52.71s/it] 57% 86/150 [1:15:33<56:13, 52.71s/it] 58% 87/150 [1:16:25<55:20, 52.70s/it] 59% 88/150 [1:17:18<54:28, 52.71s/it] 59% 89/150 [1:18:11<53:35, 52.72s/it] 60% 90/150 [1:19:04<52:42, 52.71s/it] 61% 91/150 [1:19:56<51:49, 52.71s/it] 61% 92/150 [1:20:49<50:57, 52.72s/it] 62% 93/150 [1:21:42<50:04, 52.72s/it] 63% 94/150 [1:22:34<49:11, 52.71s/it] 63% 95/150 [1:23:27<48:19, 52.71s/it] 64% 96/150 [1:24:20<47:25, 52.70s/it] 65% 97/150 [1:25:13<46:33, 52.71s/it] 65% 98/150 [1:26:05<45:41, 52.71s/it] 66% 99/150 [1:26:58<44:48, 52.71s/it] 67% 100/150 [1:27:51<43:55, 52.71s/it] 67% 101/150 [1:28:43<43:02, 52.71s/it] 68% 102/150 [1:29:36<42:09, 52.71s/it] 69% 103/150 [1:30:29<41:17, 52.71s/it] 69% 104/150 [1:31:21<40:24, 52.71s/it] 70% 105/150 [1:32:14<39:31, 52.71s/it] 71% 106/150 [1:33:07<38:39, 52.71s/it] 71% 107/150 [1:34:00<37:46, 52.70s/it] 72% 108/150 [1:34:52<36:53, 52.70s/it] 73% 109/150 [1:35:45<36:00, 52.70s/it] 73% 110/150 [1:36:38<35:07, 52.70s/it] 74% 111/150 [1:37:30<34:15, 52.70s/it] 75% 112/150 [1:38:23<33:22, 52.69s/it] 75% 113/150 [1:39:16<32:29, 52.69s/it] 76% 114/150 [1:40:08<31:36, 52.69s/it] 77% 115/150 [1:41:01<30:44, 52.70s/it] 77% 116/150 [1:41:54<29:51, 52.70s/it] 78% 117/150 [1:42:47<28:58, 52.69s/it] 79% 118/150 [1:43:39<28:06, 52.71s/it] 79% 119/150 [1:44:32<27:14, 52.72s/it] 80% 120/150 [1:45:25<26:21, 52.71s/it] 81% 121/150 [1:46:17<25:28, 52.72s/it] 81% 122/150 [1:47:10<24:35, 52.71s/it] 82% 123/150 [1:48:03<23:43, 52.72s/it] 83% 124/150 [1:48:56<22:50, 52.71s/it] 83% 125/150 [1:49:48<21:57, 52.71s/it] 84% 126/150 [1:50:41<21:04, 52.71s/it] 85% 127/150 [1:51:34<20:12, 52.70s/it] 85% 128/150 [1:52:26<19:19, 52.70s/it] 86% 129/150 [1:53:19<18:26, 52.71s/it] 87% 130/150 [1:54:12<17:33, 52.70s/it] 87% 131/150 [1:55:04<16:41, 52.70s/it] 88% 132/150 [1:55:57<15:48, 52.70s/it] 89% 133/150 [1:56:50<14:55, 52.70s/it] 89% 134/150 [1:57:43<14:03, 52.70s/it] 90% 135/150 [1:58:35<13:10, 52.69s/it] 91% 136/150 [1:59:28<12:17, 52.70s/it] 91% 137/150 [2:00:21<11:25, 52.70s/it] 92% 138/150 [2:01:13<10:32, 52.70s/it] 93% 139/150 [2:02:06<09:39, 52.70s/it] 93% 140/150 [2:02:59<08:46, 52.70s/it] 94% 141/150 [2:03:51<07:54, 52.70s/it] 95% 142/150 [2:04:44<07:01, 52.70s/it] 95% 143/150 [2:05:37<06:08, 52.70s/it] 96% 144/150 [2:06:30<05:16, 52.70s/it] 97% 145/150 [2:07:22<04:23, 52.70s/it] 97% 146/150 [2:08:15<03:30, 52.70s/it] 98% 147/150 [2:09:08<02:38, 52.70s/it] 99% 148/150 [2:10:00<01:45, 52.70s/it] 99% 149/150 [2:10:53<00:52, 52.70s/it]100% 150/150 [2:11:46<00:00, 52.70s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6706d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x5e398c0] Warning: data is not aligned! This can lead to a speed loss
119.81042403393906 (1014, 1352, 3)
119.87176569447848 (1014, 1352, 3)
119.90058558873989 (1014, 1352, 3)
119.90150199961874 (1014, 1352, 3)
119.88935402394097 (1014, 1352, 3)
119.89407126656785 (1014, 1352, 3)
119.89213146131671 (1014, 1352, 3)
119.87113278985719 (1014, 1352, 3)
119.85941031671004 (1014, 1352, 3)
119.84660147481608 (1014, 1352, 3)
119.83735299495427 (1014, 1352, 3)
119.81569442985578 (1014, 1352, 3)
119.82289587782874 (1014, 1352, 3)
119.81779519663566 (1014, 1352, 3)
119.81924944271326 (1014, 1352, 3)
119.81539147205396 (1014, 1352, 3)
119.83091356122763 (1014, 1352, 3)
119.83102224673117 (1014, 1352, 3)
119.82583646503195 (1014, 1352, 3)
119.81953538041385 (1014, 1352, 3)
119.81475564970103 (1014, 1352, 3)
119.81635213519601 (1014, 1352, 3)
119.81555705332447 (1014, 1352, 3)
119.83103513337925 (1014, 1352, 3)
119.82924948161634 (1014, 1352, 3)
119.82787790460185 (1014, 1352, 3)
119.82000002917732 (1014, 1352, 3)
119.83293992585071 (1014, 1352, 3)
119.84187936930313 (1014, 1352, 3)
119.84653339441118 (1014, 1352, 3)
119.8431891876646 (1014, 1352, 3)
119.8350411789192 (1014, 1352, 3)
119.82699674964695 (1014, 1352, 3)
119.81335586794735 (1014, 1352, 3)
119.81903304428339 (1014, 1352, 3)
119.81837290750012 (1014, 1352, 3)
119.82238600422488 (1014, 1352, 3)
119.80855255223712 (1014, 1352, 3)
119.81149605717198 (1014, 1352, 3)
119.81154590175414 (1014, 1352, 3)
119.81380714377414 (1014, 1352, 3)
119.81537615396286 (1014, 1352, 3)
119.81949064186206 (1014, 1352, 3)
119.82679250843225 (1014, 1352, 3)
119.82502971223386 (1014, 1352, 3)
119.84093183595346 (1014, 1352, 3)
119.84340461351727 (1014, 1352, 3)
119.84675660088155 (1014, 1352, 3)
119.83134295406713 (1014, 1352, 3)
119.83505260670145 (1014, 1352, 3)
119.8371815782205 (1014, 1352, 3)
119.84716216557932 (1014, 1352, 3)
119.85046406521714 (1014, 1352, 3)
119.85326897789916 (1014, 1352, 3)
119.84896289228902 (1014, 1352, 3)
119.83897014771503 (1014, 1352, 3)
119.8457205630055 (1014, 1352, 3)
119.84941587012592 (1014, 1352, 3)
119.85690860497415 (1014, 1352, 3)
119.84692218215204 (1014, 1352, 3)
119.84959847149766 (1014, 1352, 3)
119.84140888507639 (1014, 1352, 3)
119.8404679166229 (1014, 1352, 3)
119.83631744336682 (1014, 1352, 3)
119.84009250181872 (1014, 1352, 3)
119.83497820454465 (1014, 1352, 3)
119.82572972468284 (1014, 1352, 3)
119.82965626203564 (1014, 1352, 3)
119.83016224533065 (1014, 1352, 3)
119.83719592373438 (1014, 1352, 3)
119.82975741006578 (1014, 1352, 3)
119.83853735085529 (1014, 1352, 3)
119.83445641686994 (1014, 1352, 3)
119.8428641037312 (1014, 1352, 3)
119.84772723294002 (1014, 1352, 3)
119.86088377118759 (1014, 1352, 3)
119.85726699967711 (1014, 1352, 3)
119.84802192383553 (1014, 1352, 3)
119.84818191278706 (1014, 1352, 3)
119.84865580103404 (1014, 1352, 3)
119.85709509665472 (1014, 1352, 3)
119.85351187905808 (1014, 1352, 3)
119.86196770849138 (1014, 1352, 3)
119.85270853028022 (1014, 1352, 3)
119.85269831821948 (1014, 1352, 3)
119.8476127119732 (1014, 1352, 3)
119.85495737194076 (1014, 1352, 3)
119.85449928807348 (1014, 1352, 3)
119.85028073441251 (1014, 1352, 3)
119.84850116125719 (1014, 1352, 3)
119.84635103618376 (1014, 1352, 3)
119.84772771922863 (1014, 1352, 3)
119.83889112581647 (1014, 1352, 3)
119.84224262689214 (1014, 1352, 3)
119.83897403802388 (1014, 1352, 3)
119.84097827651537 (1014, 1352, 3)
119.83871460305234 (1014, 1352, 3)
119.8491046454178 (1014, 1352, 3)
119.85195940268198 (1014, 1352, 3)
119.84872679917059 (1014, 1352, 3)
119.85086452388455 (1014, 1352, 3)
119.85571525273392 (1014, 1352, 3)
119.86454260666254 (1014, 1352, 3)
119.86530510719746 (1014, 1352, 3)
119.88006858614506 (1014, 1352, 3)
119.88111653809196 (1014, 1352, 3)
119.87975055339643 (1014, 1352, 3)
119.86858244926064 (1014, 1352, 3)
119.87375169714724 (1014, 1352, 3)
119.87760553435338 (1014, 1352, 3)
119.87828196180494 (1014, 1352, 3)
119.88586466004536 (1014, 1352, 3)
119.88811228598439 (1014, 1352, 3)
119.88862045757813 (1014, 1352, 3)
119.87792283766909 (1014, 1352, 3)
119.88743196822395 (1014, 1352, 3)
119.88756034841606 (1014, 1352, 3)
119.89326743150139 (1014, 1352, 3)
119.88789686013173 (1014, 1352, 3)
119.89591819069516 (1014, 1352, 3)
119.89482914736101 (1014, 1352, 3)
119.88808918727558 (1014, 1352, 3)
119.88486971355655 (1014, 1352, 3)
119.88624056113815 (1014, 1352, 3)
119.89267148481417 (1014, 1352, 3)
119.88938417383456 (1014, 1352, 3)
119.9056060323129 (1014, 1352, 3)
119.91174348081495 (1014, 1352, 3)
119.92031966667834 (1014, 1352, 3)
119.91373653466849 (1014, 1352, 3)
119.92408232477077 (1014, 1352, 3)
119.92928707172562 (1014, 1352, 3)
119.93541601017705 (1014, 1352, 3)
119.94215475454097 (1014, 1352, 3)
119.94518992487814 (1014, 1352, 3)
119.93937804659812 (1014, 1352, 3)
119.9226599305969 (1014, 1352, 3)
119.92747613295519 (1014, 1352, 3)
119.92476215624258 (1014, 1352, 3)
119.93061512590985 (1014, 1352, 3)
119.92236499655708 (1014, 1352, 3)
119.92926494559403 (1014, 1352, 3)
119.91312089329271 (1014, 1352, 3)
119.9041136125797 (1014, 1352, 3)
119.89759126664566 (1014, 1352, 3)
119.89830076172247 (1014, 1352, 3)
119.8934721590047 (1014, 1352, 3)
119.88117246128171 (1014, 1352, 3)
119.88551088508417 (1014, 1352, 3)
119.87354016160343 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:11:48<00:00, 52.73s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
