nohup: ignoring input
Namespace(H=1080, O=False, W=1920, bound=2, cuda_device=0, cuda_ray=False, cuda_ray_density_time_slice_interval=1, downscale=2, dt_gamma=0.0078125, epoch=200, error_type='isg', eval_interval=100, ff=False, fovy=50, fp16=False, geo_feat_dim=128, gui=False, hidden_dim=256, max_ray_batch=4096, max_spp=64, mode='colmap', model='CombineDyNeRFNetwork', model_static=False, num_rays=4096, num_steps=512, out_video_idx=14, path='./data/coffee_martini/', preload=True, radius=5, rand_pose_interval=0, scale=0.1, seed=0, tcnn=False, test=True, upsample_steps=0, video_frame_num=150, video_frame_start=0, workspace='trial_dynerf_5s')
CombineDyNeRFNetwork(
  (static_model): StaticNerf(
    (encoder): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=75, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=331, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
  (dynamic_model): DynamicNerf(
    (encoder): FreqEncoder()
    (encoder_time): FreqEncoder()
    (sigma_net): ModuleList(
      (0): Linear(in_features=100, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=256, bias=False)
      (3): Linear(in_features=356, out_features=256, bias=False)
      (4): Linear(in_features=256, out_features=256, bias=False)
      (5): Linear(in_features=256, out_features=257, bias=False)
    )
    (encoder_dir): FreqEncoder()
    (color_net): ModuleList(
      (0): Linear(in_features=307, out_features=256, bias=False)
      (1): Linear(in_features=256, out_features=256, bias=False)
      (2): Linear(in_features=256, out_features=3, bias=False)
    )
  )
)
[INFO] Trainer: ngp | 2022-06-30_08-11-35 | cuda | fp32 | trial_dynerf_5s
[INFO] #parameters: 1035264
[INFO] Loading latest checkpoint ...
[INFO] Latest checkpoint is trial_dynerf_5s/checkpoints/ngp_ep0200.pth.tar
[INFO] loaded model.
[INFO] loaded optimizer.
[WARN] Failed to load scheduler, use default.
[INFO] loaded scaler.
==> Start Test, save results to trial_dynerf_5s/results
  0% 0/150 [00:00<?, ?it/s]  1% 1/150 [00:53<2:12:52, 53.51s/it]  1% 2/150 [01:46<2:11:15, 53.21s/it]  2% 3/150 [02:39<2:10:10, 53.13s/it]  3% 4/150 [03:32<2:09:11, 53.09s/it]  3% 5/150 [04:25<2:08:18, 53.09s/it]  4% 6/150 [05:18<2:07:22, 53.07s/it]  5% 7/150 [06:11<2:06:28, 53.06s/it]  5% 8/150 [07:04<2:05:36, 53.07s/it]  6% 9/150 [07:57<2:04:43, 53.07s/it]  7% 10/150 [08:51<2:03:50, 53.08s/it]  7% 11/150 [09:44<2:02:57, 53.08s/it]  8% 12/150 [10:37<2:02:05, 53.08s/it]  9% 13/150 [11:30<2:01:12, 53.08s/it]  9% 14/150 [12:23<2:00:20, 53.09s/it] 10% 15/150 [13:16<1:59:27, 53.09s/it] 11% 16/150 [14:09<1:58:34, 53.09s/it] 11% 17/150 [15:02<1:57:41, 53.10s/it] 12% 18/150 [15:55<1:56:50, 53.11s/it] 13% 19/150 [16:48<1:55:56, 53.10s/it] 13% 20/150 [17:41<1:55:03, 53.10s/it] 14% 21/150 [18:35<1:54:10, 53.10s/it] 15% 22/150 [19:28<1:53:17, 53.10s/it] 15% 23/150 [20:21<1:52:24, 53.10s/it] 16% 24/150 [21:14<1:51:31, 53.11s/it] 17% 25/150 [22:07<1:50:38, 53.10s/it] 17% 26/150 [23:00<1:49:44, 53.10s/it] 18% 27/150 [23:53<1:48:51, 53.10s/it] 19% 28/150 [24:46<1:47:58, 53.11s/it] 19% 29/150 [25:39<1:47:05, 53.10s/it] 20% 30/150 [26:33<1:46:12, 53.10s/it] 21% 31/150 [27:26<1:45:18, 53.10s/it] 21% 32/150 [28:19<1:44:25, 53.10s/it] 22% 33/150 [29:12<1:43:32, 53.10s/it] 23% 34/150 [30:05<1:42:39, 53.10s/it] 23% 35/150 [30:58<1:41:46, 53.10s/it] 24% 36/150 [31:51<1:40:54, 53.11s/it] 25% 37/150 [32:44<1:40:01, 53.11s/it] 25% 38/150 [33:37<1:39:08, 53.11s/it] 26% 39/150 [34:30<1:38:15, 53.11s/it] 27% 40/150 [35:24<1:37:21, 53.11s/it] 27% 41/150 [36:17<1:36:28, 53.11s/it] 28% 42/150 [37:10<1:35:36, 53.12s/it] 29% 43/150 [38:03<1:34:43, 53.12s/it] 29% 44/150 [38:56<1:33:50, 53.12s/it] 30% 45/150 [39:49<1:32:56, 53.11s/it] 31% 46/150 [40:42<1:32:02, 53.11s/it] 31% 47/150 [41:35<1:31:10, 53.11s/it] 32% 48/150 [42:29<1:30:18, 53.12s/it] 33% 49/150 [43:22<1:29:24, 53.12s/it] 33% 50/150 [44:15<1:28:31, 53.11s/it] 34% 51/150 [45:08<1:27:38, 53.11s/it] 35% 52/150 [46:01<1:26:45, 53.12s/it] 35% 53/150 [46:54<1:25:52, 53.12s/it] 36% 54/150 [47:47<1:24:57, 53.10s/it] 37% 55/150 [48:40<1:24:04, 53.10s/it] 37% 56/150 [49:33<1:23:12, 53.11s/it] 38% 57/150 [50:26<1:22:19, 53.11s/it] 39% 58/150 [51:20<1:21:26, 53.11s/it] 39% 59/150 [52:13<1:20:33, 53.11s/it] 40% 60/150 [53:06<1:19:40, 53.11s/it] 41% 61/150 [53:59<1:18:46, 53.11s/it] 41% 62/150 [54:52<1:17:53, 53.11s/it] 42% 63/150 [55:45<1:17:00, 53.11s/it] 43% 64/150 [56:38<1:16:07, 53.12s/it] 43% 65/150 [57:31<1:15:15, 53.12s/it] 44% 66/150 [58:25<1:14:22, 53.13s/it] 45% 67/150 [59:18<1:13:29, 53.13s/it] 45% 68/150 [1:00:11<1:12:35, 53.12s/it] 46% 69/150 [1:01:04<1:11:42, 53.12s/it] 47% 70/150 [1:01:57<1:10:49, 53.12s/it] 47% 71/150 [1:02:50<1:09:56, 53.12s/it] 48% 72/150 [1:03:43<1:09:03, 53.13s/it] 49% 73/150 [1:04:36<1:08:10, 53.12s/it] 49% 74/150 [1:05:30<1:07:17, 53.12s/it] 50% 75/150 [1:06:23<1:06:23, 53.11s/it] 51% 76/150 [1:07:16<1:05:30, 53.11s/it] 51% 77/150 [1:08:09<1:04:37, 53.11s/it] 52% 78/150 [1:09:02<1:03:42, 53.09s/it] 53% 79/150 [1:09:55<1:02:50, 53.11s/it] 53% 80/150 [1:10:48<1:01:57, 53.11s/it] 54% 81/150 [1:11:41<1:01:04, 53.11s/it] 55% 82/150 [1:12:34<1:00:11, 53.10s/it] 55% 83/150 [1:13:27<59:17, 53.09s/it]   56% 84/150 [1:14:21<58:24, 53.10s/it] 57% 85/150 [1:15:14<57:31, 53.11s/it] 57% 86/150 [1:16:07<56:38, 53.11s/it] 58% 87/150 [1:17:00<55:45, 53.11s/it] 59% 88/150 [1:17:53<54:52, 53.11s/it] 59% 89/150 [1:18:46<53:59, 53.11s/it] 60% 90/150 [1:19:39<53:06, 53.11s/it] 61% 91/150 [1:20:32<52:13, 53.11s/it] 61% 92/150 [1:21:25<51:20, 53.11s/it] 62% 93/150 [1:22:19<50:27, 53.11s/it] 63% 94/150 [1:23:12<49:34, 53.12s/it] 63% 95/150 [1:24:05<48:40, 53.10s/it] 64% 96/150 [1:24:58<47:47, 53.11s/it] 65% 97/150 [1:25:51<46:53, 53.09s/it] 65% 98/150 [1:26:44<46:01, 53.10s/it] 66% 99/150 [1:27:37<45:08, 53.10s/it] 67% 100/150 [1:28:30<44:15, 53.11s/it] 67% 101/150 [1:29:23<43:21, 53.09s/it] 68% 102/150 [1:30:16<42:28, 53.09s/it] 69% 103/150 [1:31:09<41:35, 53.09s/it] 69% 104/150 [1:32:03<40:42, 53.10s/it] 70% 105/150 [1:32:56<39:49, 53.10s/it] 71% 106/150 [1:33:49<38:56, 53.10s/it] 71% 107/150 [1:34:42<38:03, 53.11s/it] 72% 108/150 [1:35:35<37:10, 53.11s/it] 73% 109/150 [1:36:28<36:16, 53.09s/it] 73% 110/150 [1:37:21<35:23, 53.09s/it] 74% 111/150 [1:38:14<34:30, 53.10s/it] 75% 112/150 [1:39:07<33:37, 53.10s/it] 75% 113/150 [1:40:00<32:44, 53.10s/it] 76% 114/150 [1:40:54<31:51, 53.10s/it] 77% 115/150 [1:41:47<30:57, 53.08s/it] 77% 116/150 [1:42:40<30:05, 53.09s/it] 78% 117/150 [1:43:33<29:12, 53.10s/it] 79% 118/150 [1:44:26<28:19, 53.10s/it] 79% 119/150 [1:45:19<27:25, 53.09s/it] 80% 120/150 [1:46:12<26:32, 53.10s/it] 81% 121/150 [1:47:05<25:40, 53.11s/it] 81% 122/150 [1:47:58<24:46, 53.11s/it] 82% 123/150 [1:48:51<23:53, 53.10s/it] 83% 124/150 [1:49:45<23:00, 53.10s/it] 83% 125/150 [1:50:38<22:07, 53.10s/it] 84% 126/150 [1:51:31<21:14, 53.11s/it] 85% 127/150 [1:52:24<20:21, 53.11s/it] 85% 128/150 [1:53:17<19:28, 53.11s/it] 86% 129/150 [1:54:10<18:35, 53.11s/it] 87% 130/150 [1:55:03<17:42, 53.11s/it] 87% 131/150 [1:55:56<16:49, 53.11s/it] 88% 132/150 [1:56:49<15:55, 53.11s/it] 89% 133/150 [1:57:43<15:02, 53.11s/it] 89% 134/150 [1:58:36<14:09, 53.10s/it] 90% 135/150 [1:59:29<13:16, 53.13s/it] 91% 136/150 [2:00:22<12:25, 53.24s/it] 91% 137/150 [2:01:16<11:32, 53.24s/it] 92% 138/150 [2:02:09<10:38, 53.22s/it] 93% 139/150 [2:03:02<09:45, 53.19s/it] 93% 140/150 [2:03:55<08:51, 53.18s/it] 94% 141/150 [2:04:48<07:58, 53.15s/it] 95% 142/150 [2:05:41<07:05, 53.15s/it] 95% 143/150 [2:06:34<06:11, 53.13s/it] 96% 144/150 [2:07:27<05:18, 53.13s/it] 97% 145/150 [2:08:21<04:25, 53.13s/it] 97% 146/150 [2:09:14<03:32, 53.12s/it] 98% 147/150 [2:10:07<02:39, 53.12s/it] 99% 148/150 [2:11:00<01:46, 53.12s/it] 99% 149/150 [2:11:53<00:53, 53.13s/it]100% 150/150 [2:12:46<00:00, 53.16s/it]IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x6c21d80] Warning: data is not aligned! This can lead to a speed loss
IMAGEIO FFMPEG_WRITER WARNING: input image is not divisible by macro_block_size=16, resizing from (1352, 1014) to (1360, 1024) to ensure video compatibility with most codecs and players. To prevent resizing, make your input image divisible by the macro_block_size or set the macro_block_size to 1 (risking incompatibility).
[swscaler @ 0x716a8c0] Warning: data is not aligned! This can lead to a speed loss
120.10854982902093 (1014, 1352, 3)
120.18437875657949 (1014, 1352, 3)
120.2239157222942 (1014, 1352, 3)
120.24860167711215 (1014, 1352, 3)
120.2476558457726 (1014, 1352, 3)
120.26262721309945 (1014, 1352, 3)
120.26875323381924 (1014, 1352, 3)
120.25876608156422 (1014, 1352, 3)
120.24793983831876 (1014, 1352, 3)
120.24500508657883 (1014, 1352, 3)
120.24790044894164 (1014, 1352, 3)
120.22462813510265 (1014, 1352, 3)
120.2220546957973 (1014, 1352, 3)
120.21773329209606 (1014, 1352, 3)
120.2267874996596 (1014, 1352, 3)
120.22218550743243 (1014, 1352, 3)
120.23250990083602 (1014, 1352, 3)
120.234278775642 (1014, 1352, 3)
120.22694870433264 (1014, 1352, 3)
120.2143071457193 (1014, 1352, 3)
120.21396650055048 (1014, 1352, 3)
120.22061455208929 (1014, 1352, 3)
120.21494831724691 (1014, 1352, 3)
120.2207285867675 (1014, 1352, 3)
120.21779821162502 (1014, 1352, 3)
120.21978178285075 (1014, 1352, 3)
120.20816143031095 (1014, 1352, 3)
120.22000109901225 (1014, 1352, 3)
120.22931644355745 (1014, 1352, 3)
120.23212135623947 (1014, 1352, 3)
120.22390599652206 (1014, 1352, 3)
120.22085161778493 (1014, 1352, 3)
120.22388216838034 (1014, 1352, 3)
120.21239676092885 (1014, 1352, 3)
120.21318406218269 (1014, 1352, 3)
120.21086932841598 (1014, 1352, 3)
120.21827988048972 (1014, 1352, 3)
120.20232669646643 (1014, 1352, 3)
120.20846803527732 (1014, 1352, 3)
120.21299197818315 (1014, 1352, 3)
120.21348945142755 (1014, 1352, 3)
120.202995100156 (1014, 1352, 3)
120.20349622056496 (1014, 1352, 3)
120.21456609440223 (1014, 1352, 3)
120.21131306676936 (1014, 1352, 3)
120.21865796988124 (1014, 1352, 3)
120.21784392275403 (1014, 1352, 3)
120.22122484429039 (1014, 1352, 3)
120.1997685752522 (1014, 1352, 3)
120.2033576283121 (1014, 1352, 3)
120.20937569296126 (1014, 1352, 3)
120.22201652214169 (1014, 1352, 3)
120.21483622772313 (1014, 1352, 3)
120.2169899999611 (1014, 1352, 3)
120.21873383090383 (1014, 1352, 3)
120.21325044057748 (1014, 1352, 3)
120.21599383775077 (1014, 1352, 3)
120.2212484292878 (1014, 1352, 3)
120.23102477543192 (1014, 1352, 3)
120.21675779715152 (1014, 1352, 3)
120.2173525281172 (1014, 1352, 3)
120.21085036316033 (1014, 1352, 3)
120.21433826819012 (1014, 1352, 3)
120.20003579084144 (1014, 1352, 3)
120.19958305614882 (1014, 1352, 3)
120.19418573890582 (1014, 1352, 3)
120.18605596598314 (1014, 1352, 3)
120.18481593003669 (1014, 1352, 3)
120.18675865301947 (1014, 1352, 3)
120.19728874650359 (1014, 1352, 3)
120.18260307373302 (1014, 1352, 3)
120.18595068449984 (1014, 1352, 3)
120.18517262272952 (1014, 1352, 3)
120.19872986278881 (1014, 1352, 3)
120.19684038840843 (1014, 1352, 3)
120.20717280557403 (1014, 1352, 3)
120.20630915700897 (1014, 1352, 3)
120.1984205832351 (1014, 1352, 3)
120.1925950888741 (1014, 1352, 3)
120.19669377239359 (1014, 1352, 3)
120.20914908247066 (1014, 1352, 3)
120.20119485973491 (1014, 1352, 3)
120.20279645126027 (1014, 1352, 3)
120.19759608090287 (1014, 1352, 3)
120.19980529004198 (1014, 1352, 3)
120.18937853288672 (1014, 1352, 3)
120.1933028819408 (1014, 1352, 3)
120.19227973071283 (1014, 1352, 3)
120.18486553147454 (1014, 1352, 3)
120.17753448758796 (1014, 1352, 3)
120.17872565152948 (1014, 1352, 3)
120.18506661181331 (1014, 1352, 3)
120.1751468105303 (1014, 1352, 3)
120.17062432649028 (1014, 1352, 3)
120.16776324747421 (1014, 1352, 3)
120.17352601060499 (1014, 1352, 3)
120.16982900147443 (1014, 1352, 3)
120.1826923076923 (1014, 1352, 3)
120.19197069430342 (1014, 1352, 3)
120.19051985224607 (1014, 1352, 3)
120.18584102641908 (1014, 1352, 3)
120.19180025014685 (1014, 1352, 3)
120.20640398328723 (1014, 1352, 3)
120.20746311987209 (1014, 1352, 3)
120.22004924158429 (1014, 1352, 3)
120.22615143416236 (1014, 1352, 3)
120.23328771946206 (1014, 1352, 3)
120.22043657045933 (1014, 1352, 3)
120.22688816140113 (1014, 1352, 3)
120.23358897525374 (1014, 1352, 3)
120.23612302518197 (1014, 1352, 3)
120.23671605413753 (1014, 1352, 3)
120.24276159409295 (1014, 1352, 3)
120.25206769915464 (1014, 1352, 3)
120.2445209862711 (1014, 1352, 3)
120.25219218903788 (1014, 1352, 3)
120.2524494357107 (1014, 1352, 3)
120.26251755501869 (1014, 1352, 3)
120.25426329221277 (1014, 1352, 3)
120.26587902501079 (1014, 1352, 3)
120.27005162439846 (1014, 1352, 3)
120.26485733264865 (1014, 1352, 3)
120.2566016109769 (1014, 1352, 3)
120.25464697392326 (1014, 1352, 3)
120.2705894595972 (1014, 1352, 3)
120.27045937739497 (1014, 1352, 3)
120.28659127248112 (1014, 1352, 3)
120.2895671156083 (1014, 1352, 3)
120.29950758415711 (1014, 1352, 3)
120.28553626934942 (1014, 1352, 3)
120.29090173468872 (1014, 1352, 3)
120.295543116293 (1014, 1352, 3)
120.2969674556213 (1014, 1352, 3)
120.29190008519777 (1014, 1352, 3)
120.28604273893305 (1014, 1352, 3)
120.28435969406611 (1014, 1352, 3)
120.26400632758735 (1014, 1352, 3)
120.26478511879058 (1014, 1352, 3)
120.25636114126101 (1014, 1352, 3)
120.26225666118133 (1014, 1352, 3)
120.24520179032014 (1014, 1352, 3)
120.25259775373567 (1014, 1352, 3)
120.24407554590759 (1014, 1352, 3)
120.2394409723438 (1014, 1352, 3)
120.227540760711 (1014, 1352, 3)
120.22486422822108 (1014, 1352, 3)
120.22140282592035 (1014, 1352, 3)
120.20868978288186 (1014, 1352, 3)
120.2123177390303 (1014, 1352, 3)
120.2024677201623 (1014, 1352, 3)
==> Finished Test.
100% 150/150 [2:12:50<00:00, 53.14s/it]==> Saving mesh to trial_dynerf_5s/meshes/ngp_200.ply

Traceback (most recent call last):
  File "main_dynerf.py", line 117, in <module>
    trainer.save_mesh(resolution=256, threshold=10)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 446, in save_mesh
    vertices, triangles = extract_geometry(self.model.aabb_infer[:3], self.model.aabb_infer[3:], resolution=resolution, threshold=threshold, query_func=query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 149, in extract_geometry
    u = extract_fields(bound_min, bound_max, resolution, query_func)
  File "/home/zhangyan/3DReconstruction/ngp/dynerf/utils.py", line 142, in extract_fields
    val = query_func(pts, ts).reshape(len(xs), len(ys), len(zs)).detach().cpu().numpy() # [S, 1] --> [x, y, z]
TypeError: query_func() takes 1 positional argument but 2 were given
